[
    {
      "constant": false,
      "inputs": [],
      "name": "freezeTransfers",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unfreezeTransfers",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFeeParameters",
      "outputs": [
        {
          "name": "_fixedFee",
          "type": "uint256"
        },
        {
          "name": "_minVariableFee",
          "type": "uint256"
        },
        {
          "name": "_maxVariableFee",
          "type": "uint256"
        },
        {
          "name": "_variableFeeNumnerator",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burnTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "nonce",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "createTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "calculateFee",
      "outputs": [
        {
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "flags",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newFeeCollector",
          "type": "address"
        }
      ],
      "name": "setFeeCollector",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        },
        {
          "name": "_flags",
          "type": "uint256"
        }
      ],
      "name": "setFlags",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_fee",
          "type": "uint256"
        },
        {
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "name": "_v",
          "type": "uint8"
        },
        {
          "name": "_r",
          "type": "bytes32"
        },
        {
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "delegatedTransfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_delegate",
          "type": "address"
        }
      ],
      "name": "setDelegate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_fixedFee",
          "type": "uint256"
        },
        {
          "name": "_minVariableFee",
          "type": "uint256"
        },
        {
          "name": "_maxVariableFee",
          "type": "uint256"
        },
        {
          "name": "_variableFeeNumerator",
          "type": "uint256"
        }
      ],
      "name": "setFeeParameters",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_feeCollector",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Freeze",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unfreeze",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "fixedFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "minVariableFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "maxVariableFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "variableFeeNumerator",
          "type": "uint256"
        }
      ],
      "name": "FeeChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "delegate",
          "type": "address"
        }
      ],
      "name": "Delegation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/mocks/MockEursToken.sol"
  },
  "ast": {
    "absolutePath": "contracts/mocks/MockEursToken.sol",
    "exportedSymbols": {
      "AbstractToken": [
        370
      ],
      "MockEursToken": [
        1440
      ],
      "SafeMath": [
        75
      ],
      "Token": [
        142
      ]
    },
    "id": 1441,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "287:24:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "Provides methods to safely add, subtract and multiply uint256 numbers.",
        "fullyImplemented": true,
        "id": 75,
        "linearizedBaseContracts": [
          75
        ],
        "name": "SafeMath",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 4,
            "name": "MAX_UINT256",
            "nodeType": "VariableDeclaration",
            "scope": 75,
            "src": "417:109:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "417:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "460:66:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              },
              "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 25,
              "nodeType": "Block",
              "src": "768:58:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 18,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 14,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "782:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 17,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 15,
                            "name": "MAX_UINT256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4,
                            "src": "787:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 16,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "801:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "787:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "782:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1444,
                      "src": "774:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "774:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20,
                  "nodeType": "ExpressionStatement",
                  "src": "774:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 21,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "816:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 22,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "820:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "816:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12,
                  "id": 24,
                  "nodeType": "Return",
                  "src": "809:12:0"
                }
              ]
            },
            "documentation": "Add two uint256 values, throw in case of overflow.\n   * @param x first value to add\n@param y second value to add\n@return x + y",
            "id": 26,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "safeAdd",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "name": "x",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "708:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "name": "y",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "719:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "707:22:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11,
                  "name": "z",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "757:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "757:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "756:11:0"
            },
            "scope": 75,
            "src": "690:136:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "1087:44:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 36,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "1101:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 37,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "1106:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1101:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 35,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1444,
                      "src": "1093:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1093:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "1093:15:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 41,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "1121:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 42,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "1125:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1121:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34,
                  "id": 44,
                  "nodeType": "Return",
                  "src": "1114:12:0"
                }
              ]
            },
            "documentation": "Subtract one uint256 value from another, throw in case of underflow.\n   * @param x value to subtract from\n@param y value to subtract\n@return x - y",
            "id": 46,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "safeSub",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "name": "x",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "1027:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1027:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "name": "y",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "1038:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1038:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1026:22:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "name": "z",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "1076:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1076:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1075:11:0"
            },
            "scope": 75,
            "src": "1009:122:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 73,
              "nodeType": "Block",
              "src": "1387:129:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 55,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "1397:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1402:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1397:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 60,
                  "nodeType": "IfStatement",
                  "src": "1393:20:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 58,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1412:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 54,
                    "id": 59,
                    "nodeType": "Return",
                    "src": "1405:8:0"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 62,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "1472:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 63,
                            "name": "MAX_UINT256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4,
                            "src": "1477:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 64,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "1491:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1477:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1472:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 61,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1444,
                      "src": "1464:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 69,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1506:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 70,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "1510:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1506:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 54,
                  "id": 72,
                  "nodeType": "Return",
                  "src": "1499:12:0"
                }
              ]
            },
            "documentation": "Multiply two uint256 values, throw in case of overflow.\n   * @param x first value to multiply\n@param y second value to multiply\n@return x * y",
            "id": 74,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "safeMul",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "name": "x",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "1327:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1327:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "name": "y",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "1338:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1326:22:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "name": "z",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "1376:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1376:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1375:11:0"
            },
            "scope": 75,
            "src": "1309:207:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 1441,
        "src": "395:1123:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 142,
        "linearizedBaseContracts": [
          142
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "Get total number of tokens in circulation.\n   * @return total number of tokens in circulation",
            "id": 80,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1941:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "name": "supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "1965:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1965:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1964:16:0"
            },
            "scope": 142,
            "src": "1920:61:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "Get number of tokens currently belonging to given owner.\n   * @param _owner address to get number of tokens currently belonging to the\n       owner of\n@return number of tokens currently belonging to the owner of given address",
            "id": 87,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "2263:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2263:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2262:16:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "2300:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2300:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2299:17:0"
            },
            "scope": 142,
            "src": "2243:74:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "Transfer given number of tokens from message sender to given recipient.\n   * @param _to address to transfer tokens to the owner of\n@param _value number of tokens to transfer to the owner of given address\n@return true if tokens were transferred successfully, false otherwise",
            "id": 96,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "2646:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2646:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "2659:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2659:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2645:29:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "2701:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2701:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2700:14:0"
            },
            "scope": 142,
            "src": "2627:88:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "Transfer given number of tokens from given owner to given recipient.\n   * @param _from address to transfer tokens from the owner of\n@param _to address to transfer tokens to the owner of\n@param _value number of tokens to transfer from given owner to given\n       recipient\n@return true if tokens were transferred successfully, false otherwise",
            "id": 107,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "3126:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3126:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "3141:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3141:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "3154:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3154:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3125:44:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "3196:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3196:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3195:14:0"
            },
            "scope": 142,
            "src": "3103:107:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "Allow given spender to transfer given number of tokens from message sender.\n   * @param _spender address to allow the owner of to transfer tokens from\n       message sender\n@param _value number of tokens to allow to transfer\n@return true if token transfer was successfully approved, false otherwise",
            "id": 116,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 116,
                  "src": "3568:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3568:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 116,
                  "src": "3586:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3586:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3567:34:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 116,
                  "src": "3628:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3628:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3627:14:0"
            },
            "scope": 142,
            "src": "3550:92:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "Tell how many tokens given spender is currently allowed to transfer from\ngiven owner.\n   * @param _owner address to get number of tokens allowed to be transferred\n       from the owner of\n@param _spender address to get number of tokens allowed to be transferred\n       by the owner of\n@return number of tokens given spender is currently allowed to transfer\n        from given owner",
            "id": 125,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "4100:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4100:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "4116:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4116:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4099:34:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "name": "remaining",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "4157:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4157:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4156:19:0"
            },
            "scope": 142,
            "src": "4080:96:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "Logged when tokens were transferred from one owner to another.\n   * @param _from address of the owner, tokens were transferred from\n@param _to address of the owner, tokens were transferred to\n@param _value number of tokens transferred",
            "id": 133,
            "name": "Transfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "indexed": true,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "4463:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4463:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 129,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "4486:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4486:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 131,
                  "indexed": false,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "4507:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4507:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4462:60:0"
            },
            "src": "4447:76:0"
          },
          {
            "anonymous": false,
            "documentation": "Logged when owner approved his tokens to be transferred by some spender.\n   * @param _owner owner who approved his tokens to be transferred\n@param _spender spender who were allowed to transfer the tokens belonging\n       to the owner\n@param _value number of tokens belonging to the owner, approved to be\n       transferred by the spender",
            "id": 141,
            "name": "Approval",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "indexed": true,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "4928:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4928:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "indexed": true,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "4952:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4952:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "indexed": false,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "4978:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4978:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4922:71:0"
            },
            "src": "4907:87:0"
          }
        ],
        "scope": 1441,
        "src": "1785:3211:0"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 143,
              "name": "Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 142,
              "src": "5244:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Token_$142",
                "typeString": "contract Token"
              }
            },
            "id": 144,
            "nodeType": "InheritanceSpecifier",
            "src": "5244:5:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 145,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 75,
              "src": "5251:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$75",
                "typeString": "contract SafeMath"
              }
            },
            "id": 146,
            "nodeType": "InheritanceSpecifier",
            "src": "5251:8:0"
          }
        ],
        "contractDependencies": [
          142,
          75
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 370,
        "linearizedBaseContracts": [
          370,
          75,
          142
        ],
        "name": "AbstractToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "5350:23:0",
              "statements": []
            },
            "documentation": "Create new Abstract Token contract.",
            "id": 150,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "AbstractToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5340:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5350:0:0"
            },
            "scope": 370,
            "src": "5317:56:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "5709:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 157,
                      "name": "accounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 363,
                      "src": "5722:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 159,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 158,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152,
                      "src": "5732:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5722:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 156,
                  "id": 160,
                  "nodeType": "Return",
                  "src": "5715:24:0"
                }
              ]
            },
            "documentation": "Get number of tokens currently belonging to given owner.\n   * @param _owner address to get number of tokens currently belonging to the\n       owner of\n@return number of tokens currently belonging to the owner of given address",
            "id": 162,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "5655:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5655:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5654:16:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "5692:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5692:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5691:17:0"
            },
            "scope": 370,
            "src": "5635:109:0",
            "stateMutability": "view",
            "superFunction": 87,
            "visibility": "public"
          },
          {
            "body": {
              "id": 224,
              "nodeType": "Block",
              "src": "6142:322:0",
              "statements": [
                {
                  "assignments": [
                    172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 172,
                      "name": "fromBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 225,
                      "src": "6148:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 171,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6148:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 177,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 173,
                      "name": "accounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 363,
                      "src": "6170:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 176,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 174,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1455,
                        "src": "6180:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6180:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6170:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6148:43:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 178,
                      "name": "fromBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 172,
                      "src": "6201:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 179,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "6215:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6201:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 183,
                  "nodeType": "IfStatement",
                  "src": "6197:38:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6230:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 170,
                    "id": 182,
                    "nodeType": "Return",
                    "src": "6223:12:0"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 184,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "6245:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6254:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6245:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 187,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1455,
                          "src": "6259:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6259:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 189,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 164,
                        "src": "6273:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "6259:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6245:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 214,
                  "nodeType": "IfStatement",
                  "src": "6241:162:0",
                  "trueBody": {
                    "id": 213,
                    "nodeType": "Block",
                    "src": "6278:125:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 192,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 363,
                              "src": "6286:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 195,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 193,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1455,
                                "src": "6296:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6296:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6286:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 197,
                                "name": "fromBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 172,
                                "src": "6319:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 198,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 166,
                                "src": "6332:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 196,
                              "name": "safeSub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "6310:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6310:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6286:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 201,
                        "nodeType": "ExpressionStatement",
                        "src": "6286:53:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 202,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 363,
                              "src": "6347:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 204,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 203,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "6357:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6347:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 206,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 363,
                                  "src": "6373:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 208,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 207,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 164,
                                  "src": "6383:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6373:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 209,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 166,
                                "src": "6389:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 205,
                              "name": "safeAdd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "6364:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6364:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6347:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 212,
                        "nodeType": "ExpressionStatement",
                        "src": "6347:49:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 216,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1455,
                          "src": "6418:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6418:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 218,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 164,
                        "src": "6430:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 219,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "6435:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 215,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "6408:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6408:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "6408:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6455:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 170,
                  "id": 223,
                  "nodeType": "Return",
                  "src": "6448:11:0"
                }
              ]
            },
            "documentation": "Transfer given number of tokens from message sender to given recipient.\n   * @param _to address to transfer tokens to the owner of\n@param _value number of tokens to transfer to the owner of given address\n@return true if tokens were transferred successfully, false otherwise",
            "id": 225,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "6073:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6073:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 166,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "6086:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6086:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6072:29:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "6128:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6128:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6127:14:0"
            },
            "scope": 370,
            "src": "6054:410:0",
            "stateMutability": "payable",
            "superFunction": 96,
            "visibility": "public"
          },
          {
            "body": {
              "id": 314,
              "nodeType": "Block",
              "src": "6959:529:0",
              "statements": [
                {
                  "assignments": [
                    237
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 237,
                      "name": "spenderAllowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 315,
                      "src": "6965:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 236,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6965:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 244,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 238,
                        "name": "allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 369,
                        "src": "6992:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 240,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 239,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "7004:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6992:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 243,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 241,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1455,
                        "src": "7011:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7011:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6992:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6965:57:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 246,
                          "name": "spenderAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 237,
                          "src": "7036:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 247,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "7056:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7036:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f75676820616c6c6f77616e6365",
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7064:22:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd57129bbc2b53105dd3dcc4d5663cc1b9c185b42a088c75c817d1dac9c3f53d",
                          "typeString": "literal_string \"not enough allowance\""
                        },
                        "value": "not enough allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd57129bbc2b53105dd3dcc4d5663cc1b9c185b42a088c75c817d1dac9c3f53d",
                          "typeString": "literal_string \"not enough allowance\""
                        }
                      ],
                      "id": 245,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1458,
                        1459
                      ],
                      "referencedDeclaration": 1459,
                      "src": "7028:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7028:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "7028:59:0"
                },
                {
                  "assignments": [
                    253
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 253,
                      "name": "fromBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 315,
                      "src": "7093:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 252,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7093:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 257,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 254,
                      "name": "accounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 363,
                      "src": "7115:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 256,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 255,
                      "name": "_from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "7125:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7115:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7093:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 259,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 253,
                          "src": "7145:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 260,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "7160:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7145:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f7567682062616c616e6365",
                        "id": 262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7168:20:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a",
                          "typeString": "literal_string \"not enough balance\""
                        },
                        "value": "not enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a",
                          "typeString": "literal_string \"not enough balance\""
                        }
                      ],
                      "id": 258,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1458,
                        1459
                      ],
                      "referencedDeclaration": 1459,
                      "src": "7137:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7137:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 264,
                  "nodeType": "ExpressionStatement",
                  "src": "7137:52:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 265,
                          "name": "allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 369,
                          "src": "7200:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 269,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 266,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 227,
                          "src": "7212:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7200:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 270,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 267,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1455,
                          "src": "7219:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7219:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7200:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 272,
                          "name": "spenderAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 237,
                          "src": "7248:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 273,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "7266:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 271,
                        "name": "safeSub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "7239:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7239:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7200:73:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "7200:73:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 277,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "7284:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7293:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7284:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 280,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "7298:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 281,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "7307:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "7298:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7284:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 305,
                  "nodeType": "IfStatement",
                  "src": "7280:152:0",
                  "trueBody": {
                    "id": 304,
                    "nodeType": "Block",
                    "src": "7312:120:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 284,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 363,
                              "src": "7320:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 286,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 285,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 227,
                              "src": "7330:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7320:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 288,
                                "name": "fromBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 253,
                                "src": "7348:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 289,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 231,
                                "src": "7361:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 287,
                              "name": "safeSub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "7339:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7339:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7320:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 292,
                        "nodeType": "ExpressionStatement",
                        "src": "7320:48:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 293,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 363,
                              "src": "7376:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 295,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 294,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 229,
                              "src": "7386:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7376:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 297,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 363,
                                  "src": "7402:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 299,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 298,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 229,
                                  "src": "7412:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7402:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 300,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 231,
                                "src": "7418:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 296,
                              "name": "safeAdd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "7393:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7393:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7376:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 303,
                        "nodeType": "ExpressionStatement",
                        "src": "7376:49:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 307,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "7447:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 308,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "7454:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 309,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "7459:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 306,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "7437:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7437:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "7437:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7479:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 235,
                  "id": 313,
                  "nodeType": "Return",
                  "src": "7472:11:0"
                }
              ]
            },
            "documentation": "Transfer given number of tokens from given owner to given recipient.\n   * @param _from address to transfer tokens from the owner of\n@param _to address to transfer tokens to the owner of\n@param _value number of tokens to transfer from given owner to given\n       recipient\n@return true if tokens were transferred successfully, false otherwise",
            "id": 315,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "6875:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6875:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 229,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "6890:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6890:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 231,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "6903:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6903:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6874:44:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "6945:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6945:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6944:14:0"
            },
            "scope": 370,
            "src": "6852:636:0",
            "stateMutability": "payable",
            "superFunction": 107,
            "visibility": "public"
          },
          {
            "body": {
              "id": 342,
              "nodeType": "Block",
              "src": "7920:116:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 324,
                          "name": "allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 369,
                          "src": "7926:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 328,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 325,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1455,
                            "src": "7938:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7938:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7926:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 329,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 327,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 317,
                        "src": "7950:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7926:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 330,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 319,
                      "src": "7962:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7926:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "7926:42:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 334,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1455,
                          "src": "7984:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7984:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 336,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 317,
                        "src": "7996:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 337,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 319,
                        "src": "8006:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 333,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "7974:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7974:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "7974:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8027:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 323,
                  "id": 341,
                  "nodeType": "Return",
                  "src": "8020:11:0"
                }
              ]
            },
            "documentation": "Allow given spender to transfer given number of tokens from message sender.\n   * @param _spender address to allow the owner of to transfer tokens from\n       message sender\n@param _value number of tokens to allow to transfer\n@return true if token transfer was successfully approved, false otherwise",
            "id": 343,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 317,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "7846:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7846:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 319,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "7864:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7864:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7845:34:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 322,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "7906:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7906:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7905:14:0"
            },
            "scope": 370,
            "src": "7828:208:0",
            "stateMutability": "payable",
            "superFunction": 116,
            "visibility": "public"
          },
          {
            "body": {
              "id": 358,
              "nodeType": "Block",
              "src": "8570:47:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 352,
                        "name": "allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 369,
                        "src": "8583:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 354,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 353,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "8595:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8583:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 356,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 355,
                      "name": "_spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 347,
                      "src": "8603:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8583:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 351,
                  "id": 357,
                  "nodeType": "Return",
                  "src": "8576:36:0"
                }
              ]
            },
            "documentation": "Tell how many tokens given spender is currently allowed to transfer from\ngiven owner.\n   * @param _owner address to get number of tokens allowed to be transferred\n       from the owner of\n@param _spender address to get number of tokens allowed to be transferred\n       by the owner of\n@return number of tokens given spender is currently allowed to transfer\n        from given owner",
            "id": 359,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "8494:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8494:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 347,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "8510:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8510:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8493:34:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 350,
                  "name": "remaining",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "8551:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8551:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8550:19:0"
            },
            "scope": 370,
            "src": "8474:143:0",
            "stateMutability": "view",
            "superFunction": 125,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 363,
            "name": "accounts",
            "nodeType": "VariableDeclaration",
            "scope": 370,
            "src": "8742:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 362,
              "keyType": {
                "id": 360,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "8751:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "8742:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 361,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "8762:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 369,
            "name": "allowances",
            "nodeType": "VariableDeclaration",
            "scope": 370,
            "src": "8959:69:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 368,
              "keyType": {
                "id": 364,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "8968:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "8959:49:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 367,
                "keyType": {
                  "id": 365,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "8988:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "8979:28:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 366,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8999:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "internal"
          }
        ],
        "scope": 1441,
        "src": "5218:3813:0"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 371,
              "name": "AbstractToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 370,
              "src": "9174:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AbstractToken_$370",
                "typeString": "contract AbstractToken"
              }
            },
            "id": 372,
            "nodeType": "InheritanceSpecifier",
            "src": "9174:13:0"
          }
        ],
        "contractDependencies": [
          142,
          370,
          75
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1440,
        "linearizedBaseContracts": [
          1440,
          370,
          75,
          142
        ],
        "name": "MockEursToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 375,
            "name": "FEE_DENOMINATOR",
            "nodeType": "VariableDeclaration",
            "scope": 1440,
            "src": "9235:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 373,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "9235:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313030303030",
              "id": 374,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "9279:6:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000_by_1",
                "typeString": "int_const 100000"
              },
              "value": "100000"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 378,
            "name": "MAX_FEE_NUMERATOR",
            "nodeType": "VariableDeclaration",
            "scope": 1440,
            "src": "9337:61:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 376,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "9337:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "id": 377,
              "name": "FEE_DENOMINATOR",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 375,
              "src": "9383:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 381,
            "name": "MIN_FEE_NUMERATIOR",
            "nodeType": "VariableDeclaration",
            "scope": 1440,
            "src": "9448:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 379,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "9448:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 380,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "9495:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 386,
            "name": "MAX_TOKENS_COUNT",
            "nodeType": "VariableDeclaration",
            "scope": 1440,
            "src": "9567:139:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 382,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "9567:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 385,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "307866666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
                "id": 383,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "9616:66:0",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9935"
                },
                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
              },
              "nodeType": "BinaryOperation",
              "operator": "/",
              "rightExpression": {
                "argumentTypes": null,
                "id": 384,
                "name": "MAX_FEE_NUMERATOR",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 378,
                "src": "9689:17:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "9616:90:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 389,
            "name": "DEFAULT_FEE",
            "nodeType": "VariableDeclaration",
            "scope": 1440,
            "src": "9750:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 387,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "9750:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "356532",
              "id": 388,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "9790:3:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500_by_1",
                "typeString": "int_const 500"
              },
              "value": "5e2"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 392,
            "name": "BLACK_LIST_FLAG",
            "nodeType": "VariableDeclaration",
            "scope": 1440,
            "src": "9863:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 390,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "9863:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783031",
              "id": 391,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "9907:4:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "0x01"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 395,
            "name": "ZERO_FEE_FLAG",
            "nodeType": "VariableDeclaration",
            "scope": 1440,
            "src": "9977:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 393,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "9977:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783032",
              "id": 394,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "10019:4:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "0x02"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 414,
              "nodeType": "Block",
              "src": "10049:1351:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 397,
                      "name": "delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1421,
                      "src": "10059:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10080:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10071:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10071:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10059:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 412,
                    "nodeType": "Block",
                    "src": "10170:1226:0",
                    "statements": [
                      {
                        "externalReferences": [
                          {
                            "owner_slot": {
                              "declaration": 1397,
                              "isOffset": false,
                              "isSlot": true,
                              "src": "10242:10:0",
                              "valueSize": 1
                            }
                          },
                          {
                            "delegate_slot": {
                              "declaration": 1421,
                              "isOffset": false,
                              "isSlot": true,
                              "src": "10314:13:0",
                              "valueSize": 1
                            }
                          },
                          {
                            "owner_slot": {
                              "declaration": 1397,
                              "isOffset": false,
                              "isSlot": true,
                              "src": "10737:10:0",
                              "valueSize": 1
                            }
                          },
                          {
                            "delegate_slot": {
                              "declaration": 1421,
                              "isOffset": false,
                              "isSlot": true,
                              "src": "10949:13:0",
                              "valueSize": 1
                            }
                          }
                        ],
                        "id": 411,
                        "nodeType": "InlineAssembly",
                        "operations": "{\n    let oldOwner := sload(owner_slot)\n    let oldDelegate := sload(delegate_slot)\n    let buffer := mload(0x40)\n    calldatacopy(buffer, 0, calldatasize())\n    let result := delegatecall(gas(), oldDelegate, buffer, calldatasize(), buffer, 0)\n    switch eq(oldOwner, sload(owner_slot))\n    case 1 {\n    }\n    default {\n        revert(0, 0)\n    }\n    switch eq(oldDelegate, sload(delegate_slot))\n    case 1 {\n    }\n    default {\n        revert(0, 0)\n    }\n    returndatacopy(buffer, 0, returndatasize())\n    switch result\n    case 0 {\n        revert(buffer, returndatasize())\n    }\n    default {\n        return(buffer, returndatasize())\n    }\n}",
                        "src": "10178:1218:0"
                      }
                    ]
                  },
                  "id": 413,
                  "nodeType": "IfStatement",
                  "src": "10055:1341:0",
                  "trueBody": {
                    "id": 410,
                    "nodeType": "Block",
                    "src": "10084:80:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 403,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1455,
                                  "src": "10101:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 404,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "10101:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 405,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10114:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "10101:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 402,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1458,
                              1459
                            ],
                            "referencedDeclaration": 1458,
                            "src": "10092:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10092:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 408,
                        "nodeType": "ExpressionStatement",
                        "src": "10092:24:0"
                      },
                      {
                        "id": 409,
                        "nodeType": "PlaceholderStatement",
                        "src": "10156:1:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 415,
            "name": "delegatable",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10049:0:0"
            },
            "src": "10028:1372:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 445,
              "nodeType": "Block",
              "src": "11597:170:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 420,
                      "name": "fixedFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1409,
                      "src": "11603:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 421,
                      "name": "DEFAULT_FEE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 389,
                      "src": "11614:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11603:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "11603:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 424,
                      "name": "minVariableFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1411,
                      "src": "11631:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11648:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11631:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 427,
                  "nodeType": "ExpressionStatement",
                  "src": "11631:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 428,
                      "name": "maxVariableFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1413,
                      "src": "11655:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11672:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11655:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 431,
                  "nodeType": "ExpressionStatement",
                  "src": "11655:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 432,
                      "name": "variableFeeNumerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1415,
                      "src": "11679:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11702:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11679:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "11679:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 436,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1397,
                      "src": "11710:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 437,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1455,
                        "src": "11718:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11718:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11710:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 440,
                  "nodeType": "ExpressionStatement",
                  "src": "11710:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 441,
                      "name": "feeCollector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1399,
                      "src": "11734:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 442,
                      "name": "_feeCollector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 417,
                      "src": "11749:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11734:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "11734:28:0"
                }
              ]
            },
            "documentation": "Create EURS Token smart contract with message sender as an owner.\n   * @param _feeCollector address fees are sent to",
            "id": 446,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "MockEursToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 417,
                  "name": "_feeCollector",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "11567:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11567:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11566:23:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11597:0:0"
            },
            "scope": 1440,
            "src": "11543:224:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "11860:47:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 451,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1460,
                        1461
                      ],
                      "referencedDeclaration": 1460,
                      "src": "11866:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11866:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "11866:9:0"
                }
              ]
            },
            "documentation": "Delegate unrecognized functions.",
            "id": 455,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 449,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 448,
                  "name": "delegatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 415,
                  "src": "11840:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "11840:11:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11830:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11860:0:0"
            },
            "scope": 1440,
            "src": "11821:86:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 464,
              "nodeType": "Block",
              "src": "12045:37:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "535441534953204555525320546f6b656e",
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12058:19:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_3df8f42d4899a9b769280c0f38ffa41fc283c0296c2e35d7a2f63b8087bbb23e",
                      "typeString": "literal_string \"STASIS EURS Token\""
                    },
                    "value": "STASIS EURS Token"
                  },
                  "functionReturnParameters": 461,
                  "id": 463,
                  "nodeType": "Return",
                  "src": "12051:26:0"
                }
              ]
            },
            "documentation": "Get name of the token.\n   * @return name of the token",
            "id": 465,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": null,
                "id": 458,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 457,
                  "name": "delegatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 415,
                  "src": "12011:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "12011:11:0"
              }
            ],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12001:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 460,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 465,
                  "src": "12037:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12037:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12036:8:0"
            },
            "scope": 1440,
            "src": "11987:95:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 474,
              "nodeType": "Block",
              "src": "12226:24:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "45555253",
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12239:6:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_43dd1b1b97abb6e57e2e66ac9aead40684ec014fde23f992af71adabf6aed8d6",
                      "typeString": "literal_string \"EURS\""
                    },
                    "value": "EURS"
                  },
                  "functionReturnParameters": 471,
                  "id": 473,
                  "nodeType": "Return",
                  "src": "12232:13:0"
                }
              ]
            },
            "documentation": "Get symbol of the token.\n   * @return symbol of the token",
            "id": 475,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": null,
                "id": 468,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 467,
                  "name": "delegatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 415,
                  "src": "12192:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "12192:11:0"
              }
            ],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12182:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "12218:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12218:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12217:8:0"
            },
            "scope": 1440,
            "src": "12166:84:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 484,
              "nodeType": "Block",
              "src": "12421:19:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "32",
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12434:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "functionReturnParameters": 481,
                  "id": 483,
                  "nodeType": "Return",
                  "src": "12427:8:0"
                }
              ]
            },
            "documentation": "Get number of decimals for the token.\n   * @return number of decimals for the token",
            "id": 485,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": null,
                "id": 478,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 477,
                  "name": "delegatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 415,
                  "src": "12388:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "12388:11:0"
              }
            ],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12378:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 485,
                  "src": "12414:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "12414:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12413:7:0"
            },
            "scope": 1440,
            "src": "12360:80:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 494,
              "nodeType": "Block",
              "src": "12626:29:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 492,
                    "name": "tokensCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1401,
                    "src": "12639:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 491,
                  "id": 493,
                  "nodeType": "Return",
                  "src": "12632:18:0"
                }
              ]
            },
            "documentation": "Get total number of tokens in circulation.\n   * @return total number of tokens in circulation",
            "id": 495,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": null,
                "id": 488,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 487,
                  "name": "delegatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 415,
                  "src": "12591:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "12591:11:0"
              }
            ],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12581:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 490,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 495,
                  "src": "12617:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 489,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12617:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12616:9:0"
            },
            "scope": 1440,
            "src": "12560:95:0",
            "stateMutability": "view",
            "superFunction": 80,
            "visibility": "public"
          },
          {
            "body": {
              "id": 509,
              "nodeType": "Block",
              "src": "13007:50:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 506,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "13045:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 504,
                        "name": "AbstractToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "13020:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AbstractToken_$370_$",
                          "typeString": "type(contract AbstractToken)"
                        }
                      },
                      "id": 505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 162,
                      "src": "13020:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13020:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 503,
                  "id": 508,
                  "nodeType": "Return",
                  "src": "13013:39:0"
                }
              ]
            },
            "documentation": "Get number of tokens currently belonging to given owner.\n   * @param _owner address to get number of tokens currently belonging to the\n       owner of\n@return number of tokens currently belonging to the owner of given address",
            "id": 510,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": null,
                "id": 500,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 499,
                  "name": "delegatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 415,
                  "src": "12964:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "12964:11:0"
              }
            ],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 497,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 510,
                  "src": "12937:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 496,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12937:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12936:16:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 502,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 510,
                  "src": "12990:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12990:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12989:17:0"
            },
            "scope": 1440,
            "src": "12917:140:0",
            "stateMutability": "view",
            "superFunction": 162,
            "visibility": "public"
          },
          {
            "body": {
              "id": 601,
              "nodeType": "Block",
              "src": "13459:616:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 521,
                    "name": "frozen",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1403,
                    "src": "13469:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 524,
                                  "name": "addressFlags",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1419,
                                  "src": "13512:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 527,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 525,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1455,
                                    "src": "13526:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 526,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "13526:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13512:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "|",
                              "rightExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 528,
                                  "name": "addressFlags",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1419,
                                  "src": "13540:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 530,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 529,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 512,
                                  "src": "13554:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13540:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13512:46:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 532,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "13511:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 533,
                          "name": "BLACK_LIST_FLAG",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 392,
                          "src": "13562:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13511:66:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 535,
                        "name": "BLACK_LIST_FLAG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "13587:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13511:91:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 598,
                      "nodeType": "Block",
                      "src": "13633:438:0",
                      "statements": [
                        {
                          "assignments": [
                            540
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 540,
                              "name": "fee",
                              "nodeType": "VariableDeclaration",
                              "scope": 602,
                              "src": "13641:11:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 539,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "13641:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 559,
                          "initialValue": {
                            "argumentTypes": null,
                            "condition": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 551,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 548,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 541,
                                          "name": "addressFlags",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1419,
                                          "src": "13664:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 544,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 542,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1455,
                                            "src": "13678:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 543,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "13678:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "13664:25:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "|",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 545,
                                          "name": "addressFlags",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1419,
                                          "src": "13692:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 547,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 546,
                                          "name": "_to",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 512,
                                          "src": "13706:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "13692:18:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "13664:46:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 549,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "13663:48:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 550,
                                  "name": "ZERO_FEE_FLAG",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 395,
                                  "src": "13714:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13663:64:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 552,
                                "name": "ZERO_FEE_FLAG",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 395,
                                "src": "13731:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13663:81:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 556,
                                  "name": "_value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 514,
                                  "src": "13785:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 555,
                                "name": "calculateFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1315,
                                "src": "13771:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) view returns (uint256)"
                                }
                              },
                              "id": 557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13771:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "13663:129:0",
                            "trueExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13757:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "13641:151:0"
                        },
                        {
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 560,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 514,
                                "src": "13805:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 561,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 363,
                                  "src": "13815:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 564,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 562,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1455,
                                    "src": "13825:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 563,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "13825:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13815:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13805:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 566,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 540,
                                "src": "13850:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 568,
                                      "name": "accounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 363,
                                      "src": "13866:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 571,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 569,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1455,
                                        "src": "13876:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 570,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "13876:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13866:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 572,
                                    "name": "_value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 514,
                                    "src": "13889:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 567,
                                  "name": "safeSub",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46,
                                  "src": "13857:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13857:39:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13850:46:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "13805:91:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "expression": {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14059:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "functionReturnParameters": 520,
                            "id": 596,
                            "nodeType": "Return",
                            "src": "14052:12:0"
                          },
                          "id": 597,
                          "nodeType": "IfStatement",
                          "src": "13801:263:0",
                          "trueBody": {
                            "id": 594,
                            "nodeType": "Block",
                            "src": "13898:148:0",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 579,
                                          "name": "_to",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 512,
                                          "src": "13941:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 580,
                                          "name": "_value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 514,
                                          "src": "13946:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 577,
                                          "name": "AbstractToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 370,
                                          "src": "13917:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_AbstractToken_$370_$",
                                            "typeString": "type(contract AbstractToken)"
                                          }
                                        },
                                        "id": 578,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "transfer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 225,
                                        "src": "13917:22:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) returns (bool)"
                                        }
                                      },
                                      "id": 581,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13917:36:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "id": 576,
                                    "name": "require",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      1458,
                                      1459
                                    ],
                                    "referencedDeclaration": 1458,
                                    "src": "13908:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                      "typeString": "function (bool) pure"
                                    }
                                  },
                                  "id": 582,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13908:46:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 583,
                                "nodeType": "ExpressionStatement",
                                "src": "13908:46:0"
                              },
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 587,
                                          "name": "feeCollector",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1399,
                                          "src": "13997:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 588,
                                          "name": "fee",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 540,
                                          "src": "14011:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 585,
                                          "name": "AbstractToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 370,
                                          "src": "13973:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_AbstractToken_$370_$",
                                            "typeString": "type(contract AbstractToken)"
                                          }
                                        },
                                        "id": 586,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "transfer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 225,
                                        "src": "13973:22:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) returns (bool)"
                                        }
                                      },
                                      "id": 589,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13973:42:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "id": 584,
                                    "name": "require",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      1458,
                                      1459
                                    ],
                                    "referencedDeclaration": 1458,
                                    "src": "13964:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                      "typeString": "function (bool) pure"
                                    }
                                  },
                                  "id": 590,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13964:52:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 591,
                                "nodeType": "ExpressionStatement",
                                "src": "13964:52:0"
                              },
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 592,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14033:4:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "functionReturnParameters": 520,
                                "id": 593,
                                "nodeType": "Return",
                                "src": "14026:11:0"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "id": 599,
                    "nodeType": "IfStatement",
                    "src": "13500:571:0",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13617:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "functionReturnParameters": 520,
                      "id": 538,
                      "nodeType": "Return",
                      "src": "13610:12:0"
                    }
                  },
                  "id": 600,
                  "nodeType": "IfStatement",
                  "src": "13465:606:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13484:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 520,
                    "id": 523,
                    "nodeType": "Return",
                    "src": "13477:12:0"
                  }
                }
              ]
            },
            "documentation": "Transfer given number of tokens from message sender to given recipient.\n   * @param _to address to transfer tokens to the owner of\n@param _value number of tokens to transfer to the owner of given address\n@return true if tokens were transferred successfully, false otherwise",
            "id": 602,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 517,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 516,
                  "name": "delegatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 415,
                  "src": "13424:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "13424:11:0"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 512,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 602,
                  "src": "13386:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13386:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 514,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 602,
                  "src": "13399:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13399:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13385:29:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 519,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 602,
                  "src": "13453:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13453:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13452:6:0"
            },
            "scope": 1440,
            "src": "13367:708:0",
            "stateMutability": "payable",
            "superFunction": 225,
            "visibility": "public"
          },
          {
            "body": {
              "id": 714,
              "nodeType": "Block",
              "src": "14574:741:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 615,
                    "name": "frozen",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1403,
                    "src": "14584:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 618,
                                  "name": "addressFlags",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1419,
                                  "src": "14627:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 620,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 619,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 604,
                                  "src": "14641:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14627:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "|",
                              "rightExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 621,
                                  "name": "addressFlags",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1419,
                                  "src": "14650:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 623,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 622,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 606,
                                  "src": "14664:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14650:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14627:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 625,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14626:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 626,
                          "name": "BLACK_LIST_FLAG",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 392,
                          "src": "14672:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14626:61:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 628,
                        "name": "BLACK_LIST_FLAG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "14697:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "14626:86:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 711,
                      "nodeType": "Block",
                      "src": "14743:568:0",
                      "statements": [
                        {
                          "assignments": [
                            633
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 633,
                              "name": "fee",
                              "nodeType": "VariableDeclaration",
                              "scope": 715,
                              "src": "14751:11:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 632,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "14751:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 651,
                          "initialValue": {
                            "argumentTypes": null,
                            "condition": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 643,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 640,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 634,
                                          "name": "addressFlags",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1419,
                                          "src": "14774:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 636,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 635,
                                          "name": "_from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 604,
                                          "src": "14788:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "14774:20:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "|",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 637,
                                          "name": "addressFlags",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1419,
                                          "src": "14797:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 639,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 638,
                                          "name": "_to",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 606,
                                          "src": "14811:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "14797:18:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "14774:41:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 641,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "14773:43:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 642,
                                  "name": "ZERO_FEE_FLAG",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 395,
                                  "src": "14819:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14773:59:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 644,
                                "name": "ZERO_FEE_FLAG",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 395,
                                "src": "14836:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14773:76:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 648,
                                  "name": "_value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 608,
                                  "src": "14890:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 647,
                                "name": "calculateFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1315,
                                "src": "14876:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) view returns (uint256)"
                                }
                              },
                              "id": 649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14876:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "14773:124:0",
                            "trueExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14862:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "14751:146:0"
                        },
                        {
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 671,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 659,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 652,
                                    "name": "_value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 608,
                                    "src": "14910:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 653,
                                        "name": "allowances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 369,
                                        "src": "14920:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                          "typeString": "mapping(address => mapping(address => uint256))"
                                        }
                                      },
                                      "id": 655,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 654,
                                        "name": "_from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 604,
                                        "src": "14932:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "14920:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 658,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 656,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1455,
                                        "src": "14939:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 657,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "14939:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14920:30:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14910:40:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 670,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 660,
                                    "name": "fee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 633,
                                    "src": "14964:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 662,
                                            "name": "allowances",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 369,
                                            "src": "14980:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                              "typeString": "mapping(address => mapping(address => uint256))"
                                            }
                                          },
                                          "id": 664,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 663,
                                            "name": "_from",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 604,
                                            "src": "14992:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "14980:18:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 667,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 665,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1455,
                                            "src": "14999:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 666,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "14999:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "14980:30:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "id": 668,
                                        "name": "_value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 608,
                                        "src": "15012:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 661,
                                      "name": "safeSub",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46,
                                      "src": "14971:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 669,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14971:48:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14964:55:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "14910:109:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 676,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 672,
                                  "name": "_value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 608,
                                  "src": "15033:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 673,
                                    "name": "accounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 363,
                                    "src": "15043:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 675,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 674,
                                    "name": "_from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 604,
                                    "src": "15053:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15043:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15033:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "14910:149:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 678,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 633,
                                "src": "15073:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 680,
                                      "name": "accounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 363,
                                      "src": "15089:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 682,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 681,
                                      "name": "_from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 604,
                                      "src": "15099:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15089:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 683,
                                    "name": "_value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 608,
                                    "src": "15107:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 679,
                                  "name": "safeSub",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46,
                                  "src": "15080:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 684,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15080:34:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15073:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "14910:204:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "expression": {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15299:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "functionReturnParameters": 614,
                            "id": 709,
                            "nodeType": "Return",
                            "src": "15292:12:0"
                          },
                          "id": 710,
                          "nodeType": "IfStatement",
                          "src": "14906:398:0",
                          "trueBody": {
                            "id": 707,
                            "nodeType": "Block",
                            "src": "15116:170:0",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 690,
                                          "name": "_from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 604,
                                          "src": "15163:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 691,
                                          "name": "_to",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 606,
                                          "src": "15170:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 692,
                                          "name": "_value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 608,
                                          "src": "15175:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 688,
                                          "name": "AbstractToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 370,
                                          "src": "15135:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_AbstractToken_$370_$",
                                            "typeString": "type(contract AbstractToken)"
                                          }
                                        },
                                        "id": 689,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "transferFrom",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 315,
                                        "src": "15135:26:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,address,uint256) returns (bool)"
                                        }
                                      },
                                      "id": 693,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15135:47:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "id": 687,
                                    "name": "require",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      1458,
                                      1459
                                    ],
                                    "referencedDeclaration": 1458,
                                    "src": "15126:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                      "typeString": "function (bool) pure"
                                    }
                                  },
                                  "id": 694,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15126:57:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 695,
                                "nodeType": "ExpressionStatement",
                                "src": "15126:57:0"
                              },
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 699,
                                          "name": "_from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 604,
                                          "src": "15230:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 700,
                                          "name": "feeCollector",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1399,
                                          "src": "15237:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 701,
                                          "name": "fee",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 633,
                                          "src": "15251:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 697,
                                          "name": "AbstractToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 370,
                                          "src": "15202:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_AbstractToken_$370_$",
                                            "typeString": "type(contract AbstractToken)"
                                          }
                                        },
                                        "id": 698,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "transferFrom",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 315,
                                        "src": "15202:26:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,address,uint256) returns (bool)"
                                        }
                                      },
                                      "id": 702,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15202:53:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "id": 696,
                                    "name": "require",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      1458,
                                      1459
                                    ],
                                    "referencedDeclaration": 1458,
                                    "src": "15193:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                      "typeString": "function (bool) pure"
                                    }
                                  },
                                  "id": 703,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15193:63:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 704,
                                "nodeType": "ExpressionStatement",
                                "src": "15193:63:0"
                              },
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 705,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15273:4:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "functionReturnParameters": 614,
                                "id": 706,
                                "nodeType": "Return",
                                "src": "15266:11:0"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "id": 712,
                    "nodeType": "IfStatement",
                    "src": "14615:696:0",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14727:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "functionReturnParameters": 614,
                      "id": 631,
                      "nodeType": "Return",
                      "src": "14720:12:0"
                    }
                  },
                  "id": 713,
                  "nodeType": "IfStatement",
                  "src": "14580:731:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14599:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 614,
                    "id": 617,
                    "nodeType": "Return",
                    "src": "14592:12:0"
                  }
                }
              ]
            },
            "documentation": "Transfer given number of tokens from given owner to given recipient.\n   * @param _from address to transfer tokens from the owner of\n@param _to address to transfer tokens to the owner of\n@param _value number of tokens to transfer from given owner to given\n       recipient\n@return true if tokens were transferred successfully, false otherwise",
            "id": 715,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 611,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 610,
                  "name": "delegatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 415,
                  "src": "14539:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "14539:11:0"
              }
            ],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 604,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "14486:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 603,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14486:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 606,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "14501:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 605,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14501:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 608,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "14514:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 607,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14514:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14485:44:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 613,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "14568:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 612,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14568:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14567:6:0"
            },
            "scope": 1440,
            "src": "14463:852:0",
            "stateMutability": "payable",
            "superFunction": 315,
            "visibility": "public"
          },
          {
            "body": {
              "id": 732,
              "nodeType": "Block",
              "src": "15759:58:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 728,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 717,
                        "src": "15795:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 729,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "15805:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 726,
                        "name": "AbstractToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "15772:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AbstractToken_$370_$",
                          "typeString": "type(contract AbstractToken)"
                        }
                      },
                      "id": 727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 343,
                      "src": "15772:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15772:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 725,
                  "id": 731,
                  "nodeType": "Return",
                  "src": "15765:47:0"
                }
              ]
            },
            "documentation": "Allow given spender to transfer given number of tokens from message sender.\n   * @param _spender address to allow the owner of to transfer tokens from\n       message sender\n@param _value number of tokens to allow to transfer\n@return true if token transfer was successfully approved, false otherwise",
            "id": 733,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 722,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 721,
                  "name": "delegatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 415,
                  "src": "15716:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "15716:11:0"
              }
            ],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 717,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 733,
                  "src": "15673:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 716,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15673:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 719,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 733,
                  "src": "15691:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15691:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15672:34:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 724,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 733,
                  "src": "15745:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 723,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15745:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15744:14:0"
            },
            "scope": 1440,
            "src": "15655:162:0",
            "stateMutability": "payable",
            "superFunction": 343,
            "visibility": "public"
          },
          {
            "body": {
              "id": 750,
              "nodeType": "Block",
              "src": "16363:60:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 746,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 735,
                        "src": "16401:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 747,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 737,
                        "src": "16409:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 744,
                        "name": "AbstractToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "16376:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AbstractToken_$370_$",
                          "typeString": "type(contract AbstractToken)"
                        }
                      },
                      "id": 745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 359,
                      "src": "16376:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16376:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 743,
                  "id": 749,
                  "nodeType": "Return",
                  "src": "16369:49:0"
                }
              ]
            },
            "documentation": "Tell how many tokens given spender is currently allowed to transfer from\ngiven owner.\n   * @param _owner address to get number of tokens allowed to be transferred\n       from the owner of\n@param _spender address to get number of tokens allowed to be transferred\n       by the owner of\n@return number of tokens given spender is currently allowed to transfer\n        from given owner",
            "id": 751,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": null,
                "id": 740,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 739,
                  "name": "delegatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 415,
                  "src": "16318:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "16318:11:0"
              }
            ],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 735,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 751,
                  "src": "16275:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16275:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 737,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 751,
                  "src": "16291:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16291:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16274:34:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 742,
                  "name": "remaining",
                  "nodeType": "VariableDeclaration",
                  "scope": 751,
                  "src": "16344:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16344:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16343:19:0"
            },
            "scope": 1440,
            "src": "16255:168:0",
            "stateMutability": "view",
            "superFunction": 359,
            "visibility": "public"
          },
          {
            "body": {
              "id": 953,
              "nodeType": "Block",
              "src": "17075:1244:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 772,
                    "name": "frozen",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1403,
                    "src": "17085:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 951,
                    "nodeType": "Block",
                    "src": "17116:1199:0",
                    "statements": [
                      {
                        "assignments": [
                          776
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 776,
                            "name": "_from",
                            "nodeType": "VariableDeclaration",
                            "scope": 954,
                            "src": "17124:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 775,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17124:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 792,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 779,
                                    "name": "thisAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1386,
                                    "src": "17182:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 780,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17182:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 781,
                                    "name": "messageSenderAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1395,
                                    "src": "17198:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 782,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17198:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 783,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 753,
                                  "src": "17223:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 784,
                                  "name": "_value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 755,
                                  "src": "17228:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 785,
                                  "name": "_fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 757,
                                  "src": "17236:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 786,
                                  "name": "_nonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 759,
                                  "src": "17242:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 778,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1449,
                                "src": "17160:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                                  "typeString": "function () pure returns (bytes32)"
                                }
                              },
                              "id": 787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17160:89:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 788,
                              "name": "_v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 761,
                              "src": "17259:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 789,
                              "name": "_r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 763,
                              "src": "17263:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 790,
                              "name": "_s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 765,
                              "src": "17267:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 777,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1447,
                            "src": "17140:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17140:130:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17124:146:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 793,
                            "name": "_nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 759,
                            "src": "17283:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 794,
                              "name": "nonces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1407,
                              "src": "17293:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 796,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 795,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 776,
                              "src": "17301:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17293:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17283:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 800,
                        "nodeType": "IfStatement",
                        "src": "17279:42:0",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17316:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "functionReturnParameters": 771,
                          "id": 799,
                          "nodeType": "Return",
                          "src": "17309:12:0"
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 807,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 801,
                                      "name": "addressFlags",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1419,
                                      "src": "17344:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 803,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 802,
                                      "name": "_from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 776,
                                      "src": "17358:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "17344:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "|",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 804,
                                      "name": "addressFlags",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1419,
                                      "src": "17367:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 806,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 805,
                                      "name": "_to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 753,
                                      "src": "17381:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "17367:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "17344:41:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 808,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "17343:43:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 809,
                              "name": "BLACK_LIST_FLAG",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 392,
                              "src": "17389:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17343:61:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 811,
                            "name": "BLACK_LIST_FLAG",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 392,
                            "src": "17416:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17343:88:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 815,
                        "nodeType": "IfStatement",
                        "src": "17330:123:0",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17448:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "functionReturnParameters": 771,
                          "id": 814,
                          "nodeType": "Return",
                          "src": "17441:12:0"
                        }
                      },
                      {
                        "assignments": [
                          817
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 817,
                            "name": "fee",
                            "nodeType": "VariableDeclaration",
                            "scope": 954,
                            "src": "17462:11:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 816,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "17462:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 835,
                        "initialValue": {
                          "argumentTypes": null,
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 824,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 818,
                                        "name": "addressFlags",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1419,
                                        "src": "17485:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 820,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 819,
                                        "name": "_from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 776,
                                        "src": "17499:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "17485:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "|",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 821,
                                        "name": "addressFlags",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1419,
                                        "src": "17508:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 823,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 822,
                                        "name": "_to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 753,
                                        "src": "17522:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "17508:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "17485:41:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 825,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "17484:43:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 826,
                                "name": "ZERO_FEE_FLAG",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 395,
                                "src": "17530:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "17484:59:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 828,
                              "name": "ZERO_FEE_FLAG",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 395,
                              "src": "17547:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17484:76:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 832,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 755,
                                "src": "17601:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 831,
                              "name": "calculateFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1315,
                              "src": "17587:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view returns (uint256)"
                              }
                            },
                            "id": 833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17587:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "17484:124:0",
                          "trueExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17573:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17462:146:0"
                      },
                      {
                        "assignments": [
                          837
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 837,
                            "name": "balance",
                            "nodeType": "VariableDeclaration",
                            "scope": 954,
                            "src": "17617:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 836,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "17617:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 841,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 838,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 363,
                            "src": "17635:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 840,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 839,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 776,
                            "src": "17645:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17635:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17617:34:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 842,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 755,
                            "src": "17663:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 843,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "17672:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17663:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 847,
                        "nodeType": "IfStatement",
                        "src": "17659:34:0",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17688:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "functionReturnParameters": 771,
                          "id": 846,
                          "nodeType": "Return",
                          "src": "17681:12:0"
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 848,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "17701:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 850,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 837,
                                "src": "17720:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 851,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 755,
                                "src": "17729:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 849,
                              "name": "safeSub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "17711:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 852,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17711:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17701:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 854,
                        "nodeType": "ExpressionStatement",
                        "src": "17701:35:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 855,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 817,
                            "src": "17748:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 856,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "17754:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17748:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 860,
                        "nodeType": "IfStatement",
                        "src": "17744:31:0",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 858,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17770:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "functionReturnParameters": 771,
                          "id": 859,
                          "nodeType": "Return",
                          "src": "17763:12:0"
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 861,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "17783:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 863,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 837,
                                "src": "17802:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 864,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 817,
                                "src": "17811:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 862,
                              "name": "safeSub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "17793:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17793:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17783:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 867,
                        "nodeType": "ExpressionStatement",
                        "src": "17783:32:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 868,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 757,
                            "src": "17827:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 869,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "17834:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17827:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 873,
                        "nodeType": "IfStatement",
                        "src": "17823:32:0",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17850:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "functionReturnParameters": 771,
                          "id": 872,
                          "nodeType": "Return",
                          "src": "17843:12:0"
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 874,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "17863:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 876,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 837,
                                "src": "17882:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 877,
                                "name": "_fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 757,
                                "src": "17891:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 875,
                              "name": "safeSub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "17873:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 878,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17873:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17863:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 880,
                        "nodeType": "ExpressionStatement",
                        "src": "17863:33:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 881,
                              "name": "nonces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1407,
                              "src": "17905:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 883,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 882,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 776,
                              "src": "17913:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "17905:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 884,
                              "name": "_nonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 759,
                              "src": "17922:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 885,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17931:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "17922:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17905:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 888,
                        "nodeType": "ExpressionStatement",
                        "src": "17905:27:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 889,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 363,
                              "src": "17941:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 891,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 890,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 776,
                              "src": "17951:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "17941:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 892,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "17960:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17941:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 894,
                        "nodeType": "ExpressionStatement",
                        "src": "17941:26:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 895,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 363,
                              "src": "17975:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 897,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 896,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 753,
                              "src": "17985:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "17975:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 899,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 363,
                                  "src": "18001:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 901,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 900,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 753,
                                  "src": "18011:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "18001:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 902,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 755,
                                "src": "18017:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 898,
                              "name": "safeAdd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "17992:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17992:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17975:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 905,
                        "nodeType": "ExpressionStatement",
                        "src": "17975:49:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 906,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 363,
                              "src": "18032:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 908,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 907,
                              "name": "feeCollector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1399,
                              "src": "18042:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "18032:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 910,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 363,
                                  "src": "18067:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 912,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 911,
                                  "name": "feeCollector",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1399,
                                  "src": "18077:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "18067:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 913,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 817,
                                "src": "18092:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 909,
                              "name": "safeAdd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "18058:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18058:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18032:64:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 916,
                        "nodeType": "ExpressionStatement",
                        "src": "18032:64:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 917,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 363,
                              "src": "18104:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 920,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 918,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1455,
                                "src": "18114:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 919,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "18114:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "18104:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 922,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 363,
                                  "src": "18137:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 925,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 923,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1455,
                                    "src": "18147:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 924,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "18147:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "18137:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 926,
                                "name": "_fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 757,
                                "src": "18160:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 921,
                              "name": "safeAdd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "18128:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18128:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18104:61:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 929,
                        "nodeType": "ExpressionStatement",
                        "src": "18104:61:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 931,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 776,
                              "src": "18184:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 932,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 753,
                              "src": "18191:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 933,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "18196:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 930,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133,
                            "src": "18174:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18174:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 935,
                        "nodeType": "ExpressionStatement",
                        "src": "18174:29:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 937,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 776,
                              "src": "18221:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 938,
                              "name": "feeCollector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1399,
                              "src": "18228:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 939,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 817,
                              "src": "18242:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 936,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133,
                            "src": "18211:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18211:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 941,
                        "nodeType": "ExpressionStatement",
                        "src": "18211:35:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 943,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 776,
                              "src": "18264:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 944,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1455,
                                "src": "18271:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 945,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "18271:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 946,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 757,
                              "src": "18283:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 942,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133,
                            "src": "18254:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18254:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 948,
                        "nodeType": "ExpressionStatement",
                        "src": "18254:34:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18304:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 771,
                        "id": 950,
                        "nodeType": "Return",
                        "src": "18297:11:0"
                      }
                    ]
                  },
                  "id": 952,
                  "nodeType": "IfStatement",
                  "src": "17081:1234:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17100:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 771,
                    "id": 774,
                    "nodeType": "Return",
                    "src": "17093:12:0"
                  }
                }
              ]
            },
            "documentation": "Transfer given number of token from the signed defined by digital signature\nto given recipient.\n   * @param _to address to transfer token to the owner of\n@param _value number of tokens to transfer\n@param _fee number of tokens to give to message sender\n@param _nonce nonce of the transfer\n@param _v parameter V of digital signature\n@param _r parameter R of digital signature\n@param _s parameter S of digital signature",
            "id": 954,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 768,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 767,
                  "name": "delegatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 415,
                  "src": "17040:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "17040:11:0"
              }
            ],
            "name": "delegatedTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 753,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "16934:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 752,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16934:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 755,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "16947:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16947:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 757,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "16963:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16963:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 759,
                  "name": "_nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "16981:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 758,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16981:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 761,
                  "name": "_v",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "16997:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 760,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "16997:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 763,
                  "name": "_r",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "17007:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17007:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 765,
                  "name": "_s",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "17019:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 764,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17019:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16928:102:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 770,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "17069:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 769,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17069:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17068:6:0"
            },
            "scope": 1440,
            "src": "16901:1418:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1018,
              "nodeType": "Block",
              "src": "18494:378:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 964,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1455,
                            "src": "18509:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "18509:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 966,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1397,
                          "src": "18523:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "18509:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 963,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1458,
                        1459
                      ],
                      "referencedDeclaration": 1458,
                      "src": "18500:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18500:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 969,
                  "nodeType": "ExpressionStatement",
                  "src": "18500:29:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 970,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 956,
                      "src": "18540:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18549:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18540:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18863:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 962,
                    "id": 1016,
                    "nodeType": "Return",
                    "src": "18856:11:0"
                  },
                  "id": 1017,
                  "nodeType": "IfStatement",
                  "src": "18536:331:0",
                  "trueBody": {
                    "id": 1014,
                    "nodeType": "Block",
                    "src": "18552:298:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 973,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 956,
                            "src": "18564:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 975,
                                "name": "MAX_TOKENS_COUNT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 386,
                                "src": "18583:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 976,
                                "name": "tokensCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1401,
                                "src": "18601:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 974,
                              "name": "safeSub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "18574:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18574:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18564:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 1011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18838:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "functionReturnParameters": 962,
                          "id": 1012,
                          "nodeType": "Return",
                          "src": "18831:12:0"
                        },
                        "id": 1013,
                        "nodeType": "IfStatement",
                        "src": "18560:283:0",
                        "trueBody": {
                          "id": 1010,
                          "nodeType": "Block",
                          "src": "18615:210:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 990,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 979,
                                    "name": "accounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 363,
                                    "src": "18625:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 982,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 980,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1455,
                                      "src": "18635:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 981,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "18635:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "18625:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 984,
                                        "name": "accounts",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 363,
                                        "src": "18658:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 987,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 985,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1455,
                                          "src": "18668:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 986,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "18668:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "18658:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 988,
                                      "name": "_value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 956,
                                      "src": "18681:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 983,
                                    "name": "safeAdd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 26,
                                    "src": "18649:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 989,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18649:39:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18625:63:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 991,
                              "nodeType": "ExpressionStatement",
                              "src": "18625:63:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 997,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 992,
                                  "name": "tokensCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1401,
                                  "src": "18698:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 994,
                                      "name": "tokensCount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1401,
                                      "src": "18721:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 995,
                                      "name": "_value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 956,
                                      "src": "18734:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 993,
                                    "name": "safeAdd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 26,
                                    "src": "18712:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 996,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18712:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18698:43:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 998,
                              "nodeType": "ExpressionStatement",
                              "src": "18698:43:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "30",
                                        "id": 1001,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "18771:1:0",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1000,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "18762:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": "address"
                                    },
                                    "id": 1002,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "18762:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1003,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1455,
                                      "src": "18775:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1004,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "18775:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1005,
                                    "name": "_value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 956,
                                    "src": "18787:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 999,
                                  "name": "Transfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 133,
                                  "src": "18752:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 1006,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18752:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1007,
                              "nodeType": "ExpressionStatement",
                              "src": "18752:42:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 1008,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18812:4:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 962,
                              "id": 1009,
                              "nodeType": "Return",
                              "src": "18805:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "Create tokens.\n   * @param _value number of tokens to be created.",
            "id": 1019,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 959,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 958,
                  "name": "delegatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 415,
                  "src": "18459:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "18459:11:0"
              }
            ],
            "name": "createTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 956,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1019,
                  "src": "18434:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18434:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18433:16:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 961,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1019,
                  "src": "18488:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 960,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18488:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18487:6:0"
            },
            "scope": 1440,
            "src": "18411:461:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1083,
              "nodeType": "Block",
              "src": "19036:360:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1029,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1455,
                            "src": "19051:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "19051:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1031,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1397,
                          "src": "19065:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "19051:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1028,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1458,
                        1459
                      ],
                      "referencedDeclaration": 1458,
                      "src": "19042:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19042:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1034,
                  "nodeType": "ExpressionStatement",
                  "src": "19042:29:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1035,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1021,
                      "src": "19082:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19091:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "19082:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19387:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 1027,
                    "id": 1081,
                    "nodeType": "Return",
                    "src": "19380:11:0"
                  },
                  "id": 1082,
                  "nodeType": "IfStatement",
                  "src": "19078:313:0",
                  "trueBody": {
                    "id": 1079,
                    "nodeType": "Block",
                    "src": "19094:280:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1038,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1021,
                            "src": "19106:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1039,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 363,
                              "src": "19116:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1042,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1040,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1455,
                                "src": "19126:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1041,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "19126:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "19116:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19106:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 1076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19362:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "functionReturnParameters": 1027,
                          "id": 1077,
                          "nodeType": "Return",
                          "src": "19355:12:0"
                        },
                        "id": 1078,
                        "nodeType": "IfStatement",
                        "src": "19102:265:0",
                        "trueBody": {
                          "id": 1075,
                          "nodeType": "Block",
                          "src": "19139:210:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1055,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1044,
                                    "name": "accounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 363,
                                    "src": "19149:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1047,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1045,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1455,
                                      "src": "19159:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1046,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "19159:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "19149:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 1049,
                                        "name": "accounts",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 363,
                                        "src": "19182:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1052,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1050,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1455,
                                          "src": "19192:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1051,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "19192:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "19182:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 1053,
                                      "name": "_value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1021,
                                      "src": "19205:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1048,
                                    "name": "safeSub",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46,
                                    "src": "19173:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1054,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19173:39:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19149:63:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1056,
                              "nodeType": "ExpressionStatement",
                              "src": "19149:63:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1062,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1057,
                                  "name": "tokensCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1401,
                                  "src": "19222:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1059,
                                      "name": "tokensCount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1401,
                                      "src": "19245:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 1060,
                                      "name": "_value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1021,
                                      "src": "19258:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1058,
                                    "name": "safeSub",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46,
                                    "src": "19236:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1061,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19236:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19222:43:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1063,
                              "nodeType": "ExpressionStatement",
                              "src": "19222:43:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1065,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1455,
                                      "src": "19286:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1066,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "19286:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "30",
                                        "id": 1068,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "19307:1:0",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1067,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "19298:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": "address"
                                    },
                                    "id": 1069,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "19298:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1070,
                                    "name": "_value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1021,
                                    "src": "19311:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1064,
                                  "name": "Transfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 133,
                                  "src": "19276:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 1071,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19276:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1072,
                              "nodeType": "ExpressionStatement",
                              "src": "19276:42:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 1073,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19336:4:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 1027,
                              "id": 1074,
                              "nodeType": "Return",
                              "src": "19329:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "Burn tokens.\n   * @param _value number of tokens to burn",
            "id": 1084,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1024,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1023,
                  "name": "delegatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 415,
                  "src": "19001:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "19001:11:0"
              }
            ],
            "name": "burnTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1021,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1084,
                  "src": "18976:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18976:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18975:16:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 1027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1026,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1084,
                  "src": "19030:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1025,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19030:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19029:6:0"
            },
            "scope": 1440,
            "src": "18955:441:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1107,
              "nodeType": "Block",
              "src": "19496:105:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1090,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1455,
                            "src": "19511:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "19511:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1092,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1397,
                          "src": "19525:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "19511:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1089,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1458,
                        1459
                      ],
                      "referencedDeclaration": 1458,
                      "src": "19502:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19502:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1095,
                  "nodeType": "ExpressionStatement",
                  "src": "19502:29:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "19542:7:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 1096,
                      "name": "frozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1403,
                      "src": "19543:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1106,
                  "nodeType": "IfStatement",
                  "src": "19538:59:0",
                  "trueBody": {
                    "id": 1105,
                    "nodeType": "Block",
                    "src": "19551:46:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1098,
                            "name": "frozen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1403,
                            "src": "19559:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 1099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19568:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "19559:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1101,
                        "nodeType": "ExpressionStatement",
                        "src": "19559:13:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1102,
                            "name": "Freeze",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1423,
                            "src": "19581:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19581:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1104,
                        "nodeType": "ExpressionStatement",
                        "src": "19581:9:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "Freeze token transfers.",
            "id": 1108,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1087,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1086,
                  "name": "delegatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 415,
                  "src": "19476:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "19476:11:0"
              }
            ],
            "name": "freezeTransfers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19466:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 1088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19496:0:0"
            },
            "scope": 1440,
            "src": "19441:160:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1130,
              "nodeType": "Block",
              "src": "19705:107:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1114,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1455,
                            "src": "19720:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "19720:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1116,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1397,
                          "src": "19734:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "19720:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1113,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1458,
                        1459
                      ],
                      "referencedDeclaration": 1458,
                      "src": "19711:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19711:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1119,
                  "nodeType": "ExpressionStatement",
                  "src": "19711:29:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1120,
                    "name": "frozen",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1403,
                    "src": "19751:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1129,
                  "nodeType": "IfStatement",
                  "src": "19747:61:0",
                  "trueBody": {
                    "id": 1128,
                    "nodeType": "Block",
                    "src": "19759:49:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1121,
                            "name": "frozen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1403,
                            "src": "19767:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 1122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19776:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "19767:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1124,
                        "nodeType": "ExpressionStatement",
                        "src": "19767:14:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1125,
                            "name": "Unfreeze",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1425,
                            "src": "19790:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19790:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1127,
                        "nodeType": "ExpressionStatement",
                        "src": "19790:11:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "Unfreeze token transfers.",
            "id": 1131,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1111,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1110,
                  "name": "delegatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 415,
                  "src": "19685:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "19685:11:0"
              }
            ],
            "name": "unfreezeTransfers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19675:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19705:0:0"
            },
            "scope": 1440,
            "src": "19648:164:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1147,
              "nodeType": "Block",
              "src": "19956:64:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1137,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1455,
                            "src": "19971:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "19971:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1139,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1397,
                          "src": "19985:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "19971:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1136,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1458,
                        1459
                      ],
                      "referencedDeclaration": 1458,
                      "src": "19962:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19962:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1142,
                  "nodeType": "ExpressionStatement",
                  "src": "19962:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1143,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1397,
                      "src": "19998:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1144,
                      "name": "_newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1133,
                      "src": "20006:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "19998:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1146,
                  "nodeType": "ExpressionStatement",
                  "src": "19998:17:0"
                }
              ]
            },
            "documentation": "Set smart contract owner.\n   * @param _newOwner address of the new owner",
            "id": 1148,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1133,
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1148,
                  "src": "19930:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19930:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19929:19:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 1135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19956:0:0"
            },
            "scope": 1440,
            "src": "19911:109:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1166,
              "nodeType": "Block",
              "src": "20208:78:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1156,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1455,
                            "src": "20223:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "20223:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1158,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1397,
                          "src": "20237:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "20223:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1458,
                        1459
                      ],
                      "referencedDeclaration": 1458,
                      "src": "20214:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20214:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1161,
                  "nodeType": "ExpressionStatement",
                  "src": "20214:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1162,
                      "name": "feeCollector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1399,
                      "src": "20250:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1163,
                      "name": "_newFeeCollector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1150,
                      "src": "20265:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "20250:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1165,
                  "nodeType": "ExpressionStatement",
                  "src": "20250:31:0"
                }
              ]
            },
            "documentation": "Set fee collector.\n   * @param _newFeeCollector address of the new fee collector",
            "id": 1167,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1153,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1152,
                  "name": "delegatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 415,
                  "src": "20188:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "20188:11:0"
              }
            ],
            "name": "setFeeCollector",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1150,
                  "name": "_newFeeCollector",
                  "nodeType": "VariableDeclaration",
                  "scope": 1167,
                  "src": "20153:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20153:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20152:26:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 1154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20208:0:0"
            },
            "scope": 1440,
            "src": "20127:159:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1180,
              "nodeType": "Block",
              "src": "20641:33:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1176,
                      "name": "nonces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1407,
                      "src": "20654:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1178,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1177,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1169,
                      "src": "20662:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "20654:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1175,
                  "id": 1179,
                  "nodeType": "Return",
                  "src": "20647:22:0"
                }
              ]
            },
            "documentation": "Get current nonce for token holder with given address, i.e. nonce this\ntoken holder should use for next delegated transfer.\n   * @param _owner address of the token holder to get nonce for\n@return current nonce for token holder with give address",
            "id": 1181,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": null,
                "id": 1172,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1171,
                  "name": "delegatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 415,
                  "src": "20611:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "20611:11:0"
              }
            ],
            "name": "nonce",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1169,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "20583:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20583:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20582:16:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 1175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1174,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "20632:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20632:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20631:9:0"
            },
            "scope": 1440,
            "src": "20567:107:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1236,
              "nodeType": "Block",
              "src": "21123:394:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1195,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1455,
                            "src": "21138:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "21138:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1197,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1397,
                          "src": "21152:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "21138:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1458,
                        1459
                      ],
                      "referencedDeclaration": 1458,
                      "src": "21129:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21129:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1200,
                  "nodeType": "ExpressionStatement",
                  "src": "21129:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1202,
                          "name": "_minVariableFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1185,
                          "src": "21174:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1203,
                          "name": "_maxVariableFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1187,
                          "src": "21193:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "21174:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1201,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1458,
                        1459
                      ],
                      "referencedDeclaration": 1458,
                      "src": "21165:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21165:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1206,
                  "nodeType": "ExpressionStatement",
                  "src": "21165:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1208,
                          "name": "_variableFeeNumerator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1189,
                          "src": "21224:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1209,
                          "name": "MAX_FEE_NUMERATOR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 378,
                          "src": "21249:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "21224:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1207,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1458,
                        1459
                      ],
                      "referencedDeclaration": 1458,
                      "src": "21215:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21215:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1212,
                  "nodeType": "ExpressionStatement",
                  "src": "21215:52:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1213,
                      "name": "fixedFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1409,
                      "src": "21274:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1214,
                      "name": "_fixedFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1183,
                      "src": "21285:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21274:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1216,
                  "nodeType": "ExpressionStatement",
                  "src": "21274:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1217,
                      "name": "minVariableFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1411,
                      "src": "21300:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1218,
                      "name": "_minVariableFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1185,
                      "src": "21317:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21300:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1220,
                  "nodeType": "ExpressionStatement",
                  "src": "21300:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1221,
                      "name": "maxVariableFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1413,
                      "src": "21338:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1222,
                      "name": "_maxVariableFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1187,
                      "src": "21355:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21338:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1224,
                  "nodeType": "ExpressionStatement",
                  "src": "21338:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1225,
                      "name": "variableFeeNumerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1415,
                      "src": "21376:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1226,
                      "name": "_variableFeeNumerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1189,
                      "src": "21399:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21376:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1228,
                  "nodeType": "ExpressionStatement",
                  "src": "21376:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1230,
                        "name": "_fixedFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1183,
                        "src": "21445:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1231,
                        "name": "_minVariableFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1185,
                        "src": "21456:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1232,
                        "name": "_maxVariableFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1187,
                        "src": "21473:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1233,
                        "name": "_variableFeeNumerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1189,
                        "src": "21490:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1229,
                      "name": "FeeChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1435,
                      "src": "21427:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 1234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21427:85:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1235,
                  "nodeType": "ExpressionStatement",
                  "src": "21427:85:0"
                }
              ]
            },
            "documentation": "Set fee parameters.\n   * @param _fixedFee fixed fee in token units\n@param _minVariableFee minimum variable fee in token units\n@param _maxVariableFee maximum variable fee in token units\n@param _variableFeeNumerator variable fee numerator",
            "id": 1237,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1192,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1191,
                  "name": "delegatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 415,
                  "src": "21103:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "21103:11:0"
              }
            ],
            "name": "setFeeParameters",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1183,
                  "name": "_fixedFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1237,
                  "src": "20984:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20984:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1185,
                  "name": "_minVariableFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1237,
                  "src": "21007:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21007:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1187,
                  "name": "_maxVariableFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1237,
                  "src": "21036:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21036:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1189,
                  "name": "_variableFeeNumerator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1237,
                  "src": "21065:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21065:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20978:117:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 1193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21123:0:0"
            },
            "scope": 1440,
            "src": "20952:565:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1266,
              "nodeType": "Block",
              "src": "21771:158:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1250,
                      "name": "_fixedFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1242,
                      "src": "21777:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1251,
                      "name": "fixedFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1409,
                      "src": "21789:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21777:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1253,
                  "nodeType": "ExpressionStatement",
                  "src": "21777:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1254,
                      "name": "_minVariableFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1244,
                      "src": "21803:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1255,
                      "name": "minVariableFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1411,
                      "src": "21821:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21803:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1257,
                  "nodeType": "ExpressionStatement",
                  "src": "21803:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1258,
                      "name": "_maxVariableFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1246,
                      "src": "21841:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1259,
                      "name": "maxVariableFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1413,
                      "src": "21859:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21841:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1261,
                  "nodeType": "ExpressionStatement",
                  "src": "21841:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1262,
                      "name": "_variableFeeNumnerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1248,
                      "src": "21879:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1263,
                      "name": "variableFeeNumerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1415,
                      "src": "21904:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21879:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1265,
                  "nodeType": "ExpressionStatement",
                  "src": "21879:45:0"
                }
              ]
            },
            "documentation": "Get fee parameters.\n   * @return fee parameters",
            "id": 1267,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": null,
                "id": 1240,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1239,
                  "name": "delegatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 415,
                  "src": "21627:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "21627:11:0"
              }
            ],
            "name": "getFeeParameters",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21617:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 1249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1242,
                  "name": "_fixedFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1267,
                  "src": "21658:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21658:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1244,
                  "name": "_minVariableFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1267,
                  "src": "21681:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21681:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1246,
                  "name": "_maxVariableFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1267,
                  "src": "21710:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21710:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1248,
                  "name": "_variableFeeNumnerator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1267,
                  "src": "21739:30:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21739:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21652:118:0"
            },
            "scope": 1440,
            "src": "21591:338:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1314,
              "nodeType": "Block",
              "src": "22203:264:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1277,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1269,
                          "src": "22218:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1278,
                          "name": "MAX_TOKENS_COUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 386,
                          "src": "22229:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "22218:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1458,
                        1459
                      ],
                      "referencedDeclaration": 1458,
                      "src": "22209:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22209:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1281,
                  "nodeType": "ExpressionStatement",
                  "src": "22209:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1282,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1274,
                      "src": "22253:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1284,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1269,
                            "src": "22269:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1285,
                            "name": "variableFeeNumerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1415,
                            "src": "22278:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1283,
                          "name": "safeMul",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "22260:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22260:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 1287,
                        "name": "FEE_DENOMINATOR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 375,
                        "src": "22302:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "22260:57:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22253:64:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1290,
                  "nodeType": "ExpressionStatement",
                  "src": "22253:64:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1291,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1274,
                      "src": "22327:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1292,
                      "name": "minVariableFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1411,
                      "src": "22334:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22327:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1298,
                  "nodeType": "IfStatement",
                  "src": "22323:48:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 1294,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1274,
                        "src": "22350:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "id": 1295,
                        "name": "minVariableFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1411,
                        "src": "22357:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "22350:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1297,
                    "nodeType": "ExpressionStatement",
                    "src": "22350:21:0"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1299,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1274,
                      "src": "22381:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1300,
                      "name": "maxVariableFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1413,
                      "src": "22388:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22381:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1306,
                  "nodeType": "IfStatement",
                  "src": "22377:48:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 1302,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1274,
                        "src": "22404:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "id": 1303,
                        "name": "maxVariableFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1413,
                        "src": "22411:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "22404:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1305,
                    "nodeType": "ExpressionStatement",
                    "src": "22404:21:0"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1307,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1274,
                      "src": "22431:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1309,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1274,
                          "src": "22447:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1310,
                          "name": "fixedFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1409,
                          "src": "22453:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1308,
                        "name": "safeAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "22438:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22438:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22431:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1313,
                  "nodeType": "ExpressionStatement",
                  "src": "22431:31:0"
                }
              ]
            },
            "documentation": "Calculate fee for transfer of given number of tokens.\n   * @param _amount transfer amount to calculate fee for\n@return fee for transfer of given amount",
            "id": 1315,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": null,
                "id": 1272,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1271,
                  "name": "delegatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 415,
                  "src": "22163:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "22163:11:0"
              }
            ],
            "name": "calculateFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1269,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1315,
                  "src": "22135:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22135:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22134:17:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 1275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1274,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1315,
                  "src": "22189:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1273,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22189:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22188:14:0"
            },
            "scope": 1440,
            "src": "22112:355:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1337,
              "nodeType": "Block",
              "src": "22682:79:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1325,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1455,
                            "src": "22697:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "22697:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1327,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1397,
                          "src": "22711:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "22697:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1324,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1458,
                        1459
                      ],
                      "referencedDeclaration": 1458,
                      "src": "22688:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22688:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1330,
                  "nodeType": "ExpressionStatement",
                  "src": "22688:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1331,
                        "name": "addressFlags",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1419,
                        "src": "22724:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1333,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1332,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1317,
                        "src": "22738:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "22724:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1334,
                      "name": "_flags",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1319,
                      "src": "22750:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22724:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1336,
                  "nodeType": "ExpressionStatement",
                  "src": "22724:32:0"
                }
              ]
            },
            "documentation": "Set flags for given address.\n   * @param _address address to set flags for\n@param _flags flags to set",
            "id": 1338,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1322,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1321,
                  "name": "delegatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 415,
                  "src": "22662:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "22662:11:0"
              }
            ],
            "name": "setFlags",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1317,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "22619:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22619:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1319,
                  "name": "_flags",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "22637:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22637:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22618:34:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 1323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22682:0:0"
            },
            "scope": 1440,
            "src": "22600:161:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1351,
              "nodeType": "Block",
              "src": "22975:41:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1347,
                      "name": "addressFlags",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1419,
                      "src": "22988:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1349,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1348,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1340,
                      "src": "23002:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "22988:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1346,
                  "id": 1350,
                  "nodeType": "Return",
                  "src": "22981:30:0"
                }
              ]
            },
            "documentation": "Get flags for given address.\n   * @param _address address to get flags for\n@return flags for given address",
            "id": 1352,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": null,
                "id": 1343,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1342,
                  "name": "delegatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 415,
                  "src": "22940:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "22940:11:0"
              }
            ],
            "name": "flags",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1340,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 1352,
                  "src": "22915:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1339,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22915:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22914:18:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 1346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1345,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1352,
                  "src": "22966:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22966:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22965:9:0"
            },
            "scope": 1440,
            "src": "22899:117:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1377,
              "nodeType": "Block",
              "src": "23336:137:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1358,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1455,
                            "src": "23351:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "23351:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1360,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1397,
                          "src": "23365:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "23351:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1357,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1458,
                        1459
                      ],
                      "referencedDeclaration": 1458,
                      "src": "23342:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23342:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1363,
                  "nodeType": "ExpressionStatement",
                  "src": "23342:29:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1364,
                      "name": "delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1421,
                      "src": "23382:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1365,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1354,
                      "src": "23394:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "23382:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1376,
                  "nodeType": "IfStatement",
                  "src": "23378:91:0",
                  "trueBody": {
                    "id": 1375,
                    "nodeType": "Block",
                    "src": "23405:64:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1367,
                            "name": "delegate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1421,
                            "src": "23413:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1368,
                            "name": "_delegate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1354,
                            "src": "23424:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "23413:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1370,
                        "nodeType": "ExpressionStatement",
                        "src": "23413:20:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1372,
                              "name": "delegate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1421,
                              "src": "23453:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1371,
                            "name": "Delegation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1439,
                            "src": "23441:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23441:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1374,
                        "nodeType": "ExpressionStatement",
                        "src": "23441:21:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "Set address of smart contract to delegate execution of delegatable methods\nto.\n   * @param _delegate address of smart contract to delegate execution of\ndelegatable methods to, or zero to not delegate delegatable methods\nexecution.",
            "id": 1378,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setDelegate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1354,
                  "name": "_delegate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1378,
                  "src": "23310:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23310:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23309:19:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 1356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23336:0:0"
            },
            "scope": 1440,
            "src": "23288:185:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1385,
              "nodeType": "Block",
              "src": "23635:22:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1383,
                    "name": "this",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1474,
                    "src": "23648:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockEursToken_$1440",
                      "typeString": "contract MockEursToken"
                    }
                  },
                  "functionReturnParameters": 1382,
                  "id": 1384,
                  "nodeType": "Return",
                  "src": "23641:11:0"
                }
              ]
            },
            "documentation": "Get address of this smart contract.\n   * @return address of this smart contract",
            "id": 1386,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "thisAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23600:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 1382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1381,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1386,
                  "src": "23626:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23626:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23625:9:0"
            },
            "scope": 1440,
            "src": "23579:78:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1394,
              "nodeType": "Block",
              "src": "23823:28:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1391,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1455,
                      "src": "23836:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "23836:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1390,
                  "id": 1393,
                  "nodeType": "Return",
                  "src": "23829:17:0"
                }
              ]
            },
            "documentation": "Get address of message sender.\n   * @return address of this smart contract",
            "id": 1395,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "messageSenderAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23788:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 1390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1389,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1395,
                  "src": "23814:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23814:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23813:9:0"
            },
            "scope": 1440,
            "src": "23758:93:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1397,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 1440,
            "src": "23901:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1396,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "23901:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1399,
            "name": "feeCollector",
            "nodeType": "VariableDeclaration",
            "scope": 1440,
            "src": "23977:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1398,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "23977:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1401,
            "name": "tokensCount",
            "nodeType": "VariableDeclaration",
            "scope": 1440,
            "src": "24061:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1400,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "24061:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1403,
            "name": "frozen",
            "nodeType": "VariableDeclaration",
            "scope": 1440,
            "src": "24157:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1402,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "24157:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1407,
            "name": "nonces",
            "nodeType": "VariableDeclaration",
            "scope": 1440,
            "src": "24267:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1406,
              "keyType": {
                "id": 1404,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "24276:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "24267:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1405,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "24287:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1409,
            "name": "fixedFee",
            "nodeType": "VariableDeclaration",
            "scope": 1440,
            "src": "24366:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1408,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "24366:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1411,
            "name": "minVariableFee",
            "nodeType": "VariableDeclaration",
            "scope": 1440,
            "src": "24450:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1410,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "24450:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1413,
            "name": "maxVariableFee",
            "nodeType": "VariableDeclaration",
            "scope": 1440,
            "src": "24540:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1412,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "24540:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1415,
            "name": "variableFeeNumerator",
            "nodeType": "VariableDeclaration",
            "scope": 1440,
            "src": "24617:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1414,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "24617:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1419,
            "name": "addressFlags",
            "nodeType": "VariableDeclaration",
            "scope": 1440,
            "src": "24703:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1418,
              "keyType": {
                "id": 1416,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "24712:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "24703:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1417,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "24723:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1421,
            "name": "delegate",
            "nodeType": "VariableDeclaration",
            "scope": 1440,
            "src": "24910:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1420,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "24910:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "Logged when token transfers were frozen.",
            "id": 1423,
            "name": "Freeze",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25011:2:0"
            },
            "src": "24998:16:0"
          },
          {
            "anonymous": false,
            "documentation": "Logged when token transfers were unfrozen.",
            "id": 1425,
            "name": "Unfreeze",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25093:2:0"
            },
            "src": "25078:18:0"
          },
          {
            "anonymous": false,
            "documentation": "Logged when fee parameters were changed.\n   * @param fixedFee fixed fee in token units\n@param minVariableFee minimum variable fee in token units\n@param maxVariableFee maximum variable fee in token units\n@param variableFeeNumerator variable fee numerator",
            "id": 1435,
            "name": "FeeChange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1427,
                  "indexed": false,
                  "name": "fixedFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1435,
                  "src": "25413:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25413:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1429,
                  "indexed": false,
                  "name": "minVariableFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1435,
                  "src": "25435:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25435:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1431,
                  "indexed": false,
                  "name": "maxVariableFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1435,
                  "src": "25463:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25463:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1433,
                  "indexed": false,
                  "name": "variableFeeNumerator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1435,
                  "src": "25491:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25491:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25407:113:0"
            },
            "src": "25391:130:0"
          },
          {
            "anonymous": false,
            "documentation": "Logged when address of smart contract execution of delegatable methods is\ndelegated to was changed.\n   * @param delegate new address of smart contract execution of delegatable\nmethods is delegated to or zero if execution of delegatable methods is\noot delegated.",
            "id": 1439,
            "name": "Delegation",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1437,
                  "indexed": false,
                  "name": "delegate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1439,
                  "src": "25842:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1436,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25842:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25841:18:0"
            },
            "src": "25824:36:0"
          }
        ],
        "scope": 1441,
        "src": "9148:16714:0"
      }
    ],
    "src": "287:25575:0"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405160208061173083398101604052516101f4600755600060088190556009819055600a5560028054600160a060020a0319908116331790915560038054600160a060020a03909316929091169190911790556116bc806100746000396000f3006080604052600436106101325763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630150246081146101a657806306fdde03146101ae578063095ea7b31461023857806313af40351461026357806318160ddd1461028457806323b872dd146102ab578063313ce567146102c857806331c420d4146102f35780634722b4a5146102fb5780636d1b229d1461033657806370a082311461034157806370ae92d2146103625780637e1f2bb81461038357806395d89b411461038e57806399a5d747146103a35780639fef0c01146103bb578063a42dce80146103dc578063a9059cbb146103f0578063addd9cef14610407578063c97e84801461041e578063ca5eb5e114610447578063d5bf2dbe14610468578063dd62ed3e1461047c575b600c54600160a060020a0316151561015457341561014f57600080fd5b600080fd5b600254600c5460405136600082376000813683855af460025484146001811461017c57600080fd5b50600c5483146001811461018f57600080fd5b503d6000833e8080156101a0573d83f35b3d83fd5b005b6101a46104a3565b3480156101ba57600080fd5b506101c361051c565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101fd5781810151838201526020016101e5565b50505050905090810190601f16801561022a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61024f600160a060020a0360043516602435610575565b604080519115158252519081900360200190f35b34801561026f57600080fd5b506101a4600160a060020a03600435166105a8565b34801561029057600080fd5b506102996105ee565b60408051918252519081900360200190f35b61024f600160a060020a0360043581169060243516604435610617565b3480156102d457600080fd5b506102dd6107cd565b6040805160ff9092168252519081900360200190f35b6101a46107f5565b34801561030757600080fd5b5061031061086c565b604080519485526020850193909352838301919091526060830152519081900360800190f35b61024f6004356108a9565b34801561034d57600080fd5b50610299600160a060020a0360043516610978565b34801561036e57600080fd5b50610299600160a060020a03600435166109a8565b61024f6004356109e7565b34801561039a57600080fd5b506101c3610aa8565b3480156103af57600080fd5b50610299600435610b02565b3480156103c757600080fd5b50610299600160a060020a0360043516610b93565b6101a4600160a060020a0360043516610bd2565b61024f600160a060020a0360043516602435610c32565b6101a4600160a060020a0360043516602435610d64565b61024f600160a060020a036004351660243560443560643560ff6084351660a43560c435610db5565b34801561045357600080fd5b506101a4600160a060020a0360043516611126565b6101a46004356024356044356064356111b9565b34801561048857600080fd5b50610299600160a060020a036004358116906024351661126b565b600c54600160a060020a031615156101545734156104c057600080fd5b600254600160a060020a031633146104d757600080fd5b60055460ff16151561051a576005805460ff191660011790556040517f615acbaede366d76a8b8cb2a9ada6a71495f0786513d71aa97aaf0c3910b78de90600090a15b565b600c54606090600160a060020a0316151561015457341561053c57600080fd5b5060408051808201909152601181527f535441534953204555525320546f6b656e00000000000000000000000000000060208201525b90565b600c54600090600160a060020a0316151561015457341561059557600080fd5b61059f8383611295565b90505b92915050565b600254600160a060020a031633146105bf57600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600c54600090600160a060020a0316151561015457341561060e57600080fd5b50600454610572565b600c546000908190600160a060020a0316151561015457341561063957600080fd5b60055460ff161561064d57600091506107c5565b600160a060020a038085166000908152600b6020526040808220549288168252902054176001908116141561068557600091506107c5565b600160a060020a038085166000908152600b6020526040808220549288168252902054176002908116146106c1576106bc83610b02565b6106c4565b60005b600160a060020a038616600090815260016020908152604080832033845290915290205490915083118015906107275750600160a060020a038516600090815260016020908152604080832033845290915290205461072390846112fb565b8111155b801561074b5750600160a060020a0385166000908152602081905260409020548311155b80156107795750600160a060020a03851660009081526020819052604090205461077590846112fb565b8111155b156107c05761078985858561130d565b151561079457600080fd5b6003546107ac908690600160a060020a03168361130d565b15156107b757600080fd5b600191506107c5565b600091505b509392505050565b600c54600090600160a060020a031615156101545734156107ed57600080fd5b506002610572565b600c54600160a060020a0316151561015457341561081257600080fd5b600254600160a060020a0316331461082957600080fd5b60055460ff161561051a576005805460ff191690556040517f2f05ba71d0df11bf5fa562a6569d70c4f80da84284badbe015ce1456063d0ded90600090a161051a565b600c54600090819081908190600160a060020a0316151561015457341561089257600080fd5b5050600754600854600954600a5492959194509250565b600c54600090600160a060020a031615156101545734156108c957600080fd5b600254600160a060020a031633146108e057600080fd5b600082111561096f57336000908152602081905260409020548211610967573360009081526020819052604090205461091990836112fb565b3360009081526020819052604090205560045461093690836112fb565b60045560408051838152905160009133916000805160206116718339815191529181900360200190a3506001610973565b506000610973565b5060015b919050565b600c54600090600160a060020a0316151561015457341561099857600080fd5b6109a182611518565b9050610973565b600c54600090600160a060020a031615156101545734156109c857600080fd5b50600160a060020a038116600090815260066020526040902054610973565b600c54600090600160a060020a03161515610154573415610a0757600080fd5b600254600160a060020a03163314610a1e57600080fd5b600082111561096f57610a3a620186a0600019046004546112fb565b82116109675733600090815260208190526040902054610a5a9083611533565b33600090815260208190526040902055600454610a779083611533565b60045560408051838152905133916000916000805160206116718339815191529181900360200190a3506001610973565b600c54606090600160a060020a03161515610154573415610ac857600080fd5b5060408051808201909152600481527f45555253000000000000000000000000000000000000000000000000000000006020820152610572565b600c54600090600160a060020a03161515610154573415610b2257600080fd5b7da7c5ac471b4784230fcf80dc33721d53cddd6e04c059210385c67dfe32a0821115610b4d57600080fd5b620186a0610b5d83600a54611549565b811515610b6657fe5b049050600854811015610b7857506008545b600954811115610b8757506009545b6109a181600754611533565b600c54600090600160a060020a03161515610154573415610bb357600080fd5b50600160a060020a0381166000908152600b6020526040902054610973565b600c54600160a060020a03161515610154573415610bef57600080fd5b600254600160a060020a03163314610c0657600080fd5b6003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b600c546000908190600160a060020a03161515610154573415610c5457600080fd5b60055460ff1615610c685760009150610d5d565b600160a060020a0384166000908152600b6020526040808220543383529120541760019081161415610c9d5760009150610d5d565b600160a060020a0384166000908152600b60205260408082205433835291205417600290811614610cd657610cd183610b02565b610cd9565b60005b336000908152602081905260409020549091508311801590610d14575033600090815260208190526040902054610d1090846112fb565b8111155b15610d5857610d238484611576565b1515610d2e57600080fd5b600354610d4490600160a060020a031682611576565b1515610d4f57600080fd5b60019150610d5d565b600091505b5092915050565b600c54600160a060020a03161515610154573415610d8157600080fd5b600254600160a060020a03163314610d9857600080fd5b600160a060020a03919091166000908152600b6020526040902055565b600c54600090819081908190600160a060020a03161515610154573415610ddb57600080fd5b60055460ff1615610def5760009350611118565b6001610df961163d565b610e01611641565b604080516c01000000000000000000000000600160a060020a039485168102825292841683026014820152928f169091026028830152603c82018d9052605c82018c9052607c82018b9052805191829003609c018220600080845260208481018085529290925260ff8c1684840152606084018b9052608084018a9052915160a0808501949293601f198301938390039091019190865af1158015610eaa573d6000803e3d6000fd5b505060408051601f190151600160a060020a03811660009081526006602052919091205490945089149050610ee25760009350611118565b600160a060020a03808c166000908152600b60205260408082205492861682529020541760019081161415610f1a5760009350611118565b600160a060020a03808c166000908152600b602052604080822054928616825290205417600290811614610f5657610f518a610b02565b610f59565b60005b600160a060020a0384166000908152602081905260409020549092509050808a1115610f885760009350611118565b610f92818b6112fb565b905080821115610fa55760009350611118565b610faf81836112fb565b905080891115610fc25760009350611118565b610fcc818a6112fb565b600160a060020a03808516600090815260066020908152604080832060018e01905590829052808220849055918e168152205490915061100c908b611533565b600160a060020a03808d16600090815260208190526040808220939093556003549091168152205461103e9083611533565b600354600160a060020a031660009081526020819052604080822092909255338152205461106c908a611533565b33600090815260208181526040918290209290925580518c81529051600160a060020a038e81169390871692600080516020611671833981519152929081900390910190a3600354604080518481529051600160a060020a0392831692861691600080516020611671833981519152919081900360200190a3604080518a815290513391600160a060020a038616916000805160206116718339815191529181900360200190a3600193505b505050979650505050505050565b600254600160a060020a0316331461113d57600080fd5b600c54600160a060020a03828116911614610c2f57600c805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03838116919091179182905560408051929091168252517f600005b3559a025151f4a40f36d9939d94cf5194016895d4ef6362b211e4c3b5916020908290030190a150565b600c54600160a060020a031615156101545734156111d657600080fd5b600254600160a060020a031633146111ed57600080fd5b818311156111fa57600080fd5b620186a081111561120a57600080fd5b600784905560088390556009829055600a81905560408051858152602081018590528082018490526060810183905290517f650bf5314bb5924368ffebaf7dffcfaa4a0f99c2ab08264c26bf0547f8c459e99181900360800190a150505050565b600c54600090600160a060020a0316151561015457341561128b57600080fd5b61059f8383611645565b336000818152600160209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60008183101561130757fe5b50900390565b600160a060020a038316600090815260016020908152604080832033845290915281205481838210156113a157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f6e6f7420656e6f75676820616c6c6f77616e6365000000000000000000000000604482015290519081900360640190fd5b50600160a060020a0385166000908152602081905260409020548381101561142a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f7420656e6f7567682062616c616e63650000000000000000000000000000604482015290519081900360640190fd5b61143482856112fb565b600160a060020a03871660009081526001602090815260408083203384529091528120919091558411801561147b575084600160a060020a031686600160a060020a031614155b156114d35761148a81856112fb565b600160a060020a0380881660009081526020819052604080822093909355908716815220546114b99085611533565b600160a060020a0386166000908152602081905260409020555b84600160a060020a031686600160a060020a0316600080516020611671833981519152866040518082815260200191505060405180910390a350600195945050505050565b600160a060020a031660009081526020819052604090205490565b600060001982900383111561154457fe5b500190565b600081151561155a575060006105a2565b8160001981151561156757fe5b0483111561157157fe5b500290565b33600090815260208190526040812054828110156115975760009150610d5d565b6000831180156115b0575033600160a060020a03851614155b15611605576115bf81846112fb565b3360009081526020819052604080822092909255600160a060020a038616815220546115eb9084611533565b600160a060020a0385166000908152602081905260409020555b604080518481529051600160a060020a0386169133916000805160206116718339815191529181900360200190a35060019392505050565b3090565b3390565b600160a060020a039182166000908152600160209081526040808320939094168252919091522054905600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582004354358bbafc6f34dd5a6a6944719ba51dfd606561da380df4467a49fff3dc60029",
  "bytecodeSha1": "bc57770b15a0644216334b22d0b17253ce1760d6",
  "compiler": {
    "evm_version": "byzantium",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.4.26+commit.4563c3fc"
  },
  "contractName": "MockEursToken",
  "coverageMap": {
    "branches": {
      "0": {
        "AbstractToken.transfer": {
          "159": [
            6201,
            6221,
            false
          ],
          "160": [
            6245,
            6255,
            false
          ],
          "161": [
            6259,
            6276,
            false
          ]
        },
        "AbstractToken.transferFrom": {
          "154": [
            7036,
            7062,
            true
          ],
          "155": [
            7145,
            7166,
            true
          ],
          "156": [
            7284,
            7294,
            false
          ],
          "157": [
            7298,
            7310,
            false
          ]
        },
        "MockEursToken.burnTokens": {
          "124": [
            19051,
            19070,
            true
          ],
          "125": [
            19082,
            19092,
            false
          ],
          "126": [
            19106,
            19137,
            false
          ]
        },
        "MockEursToken.calculateFee": {
          "130": [
            22218,
            22245,
            true
          ],
          "131": [
            22327,
            22348,
            false
          ],
          "132": [
            22381,
            22402,
            false
          ]
        },
        "MockEursToken.createTokens": {
          "127": [
            18509,
            18528,
            true
          ],
          "128": [
            18540,
            18550,
            false
          ],
          "129": [
            18564,
            18613,
            false
          ]
        },
        "MockEursToken.delegatedTransfer": {
          "142": [
            17085,
            17091,
            false
          ],
          "143": [
            17283,
            17307,
            false
          ],
          "144": [
            17343,
            17431,
            false
          ],
          "145": [
            17484,
            17560,
            true
          ],
          "146": [
            17663,
            17679,
            false
          ],
          "147": [
            17748,
            17761,
            false
          ],
          "148": [
            17827,
            17841,
            false
          ]
        },
        "MockEursToken.freezeTransfers": {
          "110": [
            19511,
            19530,
            true
          ],
          "111": [
            19543,
            19549,
            false
          ]
        },
        "MockEursToken.setDelegate": {
          "149": [
            23351,
            23370,
            true
          ],
          "150": [
            23382,
            23403,
            false
          ]
        },
        "MockEursToken.setFeeCollector": {
          "133": [
            20223,
            20242,
            true
          ]
        },
        "MockEursToken.setFeeParameters": {
          "151": [
            21138,
            21157,
            true
          ],
          "152": [
            21174,
            21208,
            true
          ],
          "153": [
            21224,
            21266,
            true
          ]
        },
        "MockEursToken.setFlags": {
          "141": [
            22697,
            22716,
            true
          ]
        },
        "MockEursToken.setOwner": {
          "112": [
            19971,
            19990,
            true
          ]
        },
        "MockEursToken.transfer": {
          "134": [
            13469,
            13475,
            false
          ],
          "135": [
            13511,
            13602,
            false
          ],
          "136": [
            13663,
            13744,
            true
          ],
          "137": [
            13805,
            13836,
            false
          ],
          "138": [
            13850,
            13896,
            false
          ],
          "139": [
            13917,
            13953,
            true
          ],
          "140": [
            13973,
            14015,
            true
          ]
        },
        "MockEursToken.transferFrom": {
          "113": [
            14584,
            14590,
            false
          ],
          "114": [
            14626,
            14712,
            false
          ],
          "115": [
            14773,
            14849,
            true
          ],
          "116": [
            14910,
            14950,
            false
          ],
          "117": [
            14964,
            15019,
            false
          ],
          "118": [
            15033,
            15059,
            false
          ],
          "119": [
            15073,
            15114,
            false
          ],
          "120": [
            15135,
            15182,
            true
          ],
          "121": [
            15202,
            15255,
            true
          ]
        },
        "MockEursToken.unfreezeTransfers": {
          "122": [
            19720,
            19739,
            true
          ],
          "123": [
            19751,
            19757,
            false
          ]
        },
        "SafeMath.safeMul": {
          "158": [
            1397,
            1403,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "AbstractToken.allowance": {
          "109": [
            8576,
            8612
          ]
        },
        "AbstractToken.approve": {
          "84": [
            7926,
            7968
          ],
          "85": [
            7974,
            8013
          ],
          "86": [
            8020,
            8031
          ]
        },
        "AbstractToken.balanceOf": {
          "96": [
            5715,
            5739
          ]
        },
        "AbstractToken.transfer": {
          "102": [
            6223,
            6235
          ],
          "103": [
            6286,
            6339
          ],
          "104": [
            6347,
            6396
          ],
          "105": [
            6408,
            6442
          ],
          "106": [
            6448,
            6459
          ]
        },
        "AbstractToken.transferFrom": {
          "89": [
            7028,
            7087
          ],
          "90": [
            7137,
            7189
          ],
          "91": [
            7200,
            7273
          ],
          "92": [
            7320,
            7368
          ],
          "93": [
            7376,
            7425
          ],
          "94": [
            7437,
            7466
          ],
          "95": [
            7472,
            7483
          ]
        },
        "MockEursToken.<fallback>": {
          "0": [
            11866,
            11875
          ]
        },
        "MockEursToken.allowance": {
          "83": [
            16369,
            16418
          ]
        },
        "MockEursToken.approve": {
          "5": [
            15765,
            15812
          ]
        },
        "MockEursToken.balanceOf": {
          "30": [
            13013,
            13052
          ]
        },
        "MockEursToken.burnTokens": {
          "23": [
            19042,
            19071
          ],
          "24": [
            19149,
            19212
          ],
          "25": [
            19222,
            19265
          ],
          "26": [
            19276,
            19318
          ],
          "27": [
            19329,
            19340
          ],
          "28": [
            19355,
            19367
          ],
          "29": [
            19380,
            19391
          ]
        },
        "MockEursToken.calculateFee": {
          "38": [
            22209,
            22246
          ],
          "39": [
            22253,
            22317
          ],
          "40": [
            22350,
            22371
          ],
          "41": [
            22404,
            22425
          ],
          "42": [
            22431,
            22462
          ]
        },
        "MockEursToken.createTokens": {
          "32": [
            18500,
            18529
          ],
          "33": [
            18625,
            18688
          ],
          "34": [
            18698,
            18741
          ],
          "35": [
            18752,
            18794
          ],
          "36": [
            18805,
            18816
          ]
        },
        "MockEursToken.decimals": {
          "15": [
            12427,
            12435
          ]
        },
        "MockEursToken.delegatedTransfer": {
          "54": [
            17093,
            17105
          ],
          "55": [
            17309,
            17321
          ],
          "56": [
            17441,
            17453
          ],
          "57": [
            17681,
            17693
          ],
          "58": [
            17701,
            17736
          ],
          "59": [
            17763,
            17775
          ],
          "60": [
            17783,
            17815
          ],
          "61": [
            17843,
            17855
          ],
          "62": [
            17863,
            17896
          ],
          "63": [
            17905,
            17932
          ],
          "64": [
            17941,
            17967
          ],
          "65": [
            17975,
            18024
          ],
          "66": [
            18032,
            18096
          ],
          "67": [
            18104,
            18165
          ],
          "68": [
            18174,
            18203
          ],
          "69": [
            18211,
            18246
          ],
          "70": [
            18254,
            18288
          ],
          "71": [
            18297,
            18308
          ]
        },
        "MockEursToken.flags": {
          "43": [
            22981,
            23011
          ]
        },
        "MockEursToken.freezeTransfers": {
          "1": [
            19502,
            19531
          ],
          "2": [
            19559,
            19572
          ],
          "3": [
            19581,
            19590
          ]
        },
        "MockEursToken.getFeeParameters": {
          "19": [
            21777,
            21797
          ],
          "20": [
            21803,
            21835
          ],
          "21": [
            21841,
            21873
          ],
          "22": [
            21879,
            21924
          ]
        },
        "MockEursToken.messageSenderAddress": {
          "108": [
            23829,
            23846
          ]
        },
        "MockEursToken.name": {
          "4": [
            12051,
            12077
          ]
        },
        "MockEursToken.nonce": {
          "31": [
            20647,
            20669
          ]
        },
        "MockEursToken.setDelegate": {
          "72": [
            23342,
            23371
          ],
          "73": [
            23413,
            23433
          ],
          "74": [
            23441,
            23462
          ]
        },
        "MockEursToken.setFeeCollector": {
          "44": [
            20214,
            20243
          ],
          "45": [
            20250,
            20281
          ]
        },
        "MockEursToken.setFeeParameters": {
          "75": [
            21129,
            21158
          ],
          "76": [
            21165,
            21209
          ],
          "77": [
            21215,
            21267
          ],
          "78": [
            21274,
            21294
          ],
          "79": [
            21300,
            21332
          ],
          "80": [
            21338,
            21370
          ],
          "81": [
            21376,
            21420
          ],
          "82": [
            21427,
            21512
          ]
        },
        "MockEursToken.setFlags": {
          "52": [
            22688,
            22717
          ],
          "53": [
            22724,
            22756
          ]
        },
        "MockEursToken.setOwner": {
          "6": [
            19962,
            19991
          ],
          "7": [
            19998,
            20015
          ]
        },
        "MockEursToken.symbol": {
          "37": [
            12232,
            12245
          ]
        },
        "MockEursToken.thisAddress": {
          "107": [
            23641,
            23652
          ]
        },
        "MockEursToken.totalSupply": {
          "8": [
            12632,
            12650
          ]
        },
        "MockEursToken.transfer": {
          "46": [
            13477,
            13489
          ],
          "47": [
            13610,
            13622
          ],
          "48": [
            13908,
            13954
          ],
          "49": [
            13964,
            14016
          ],
          "50": [
            14026,
            14037
          ],
          "51": [
            14052,
            14064
          ]
        },
        "MockEursToken.transferFrom": {
          "9": [
            14592,
            14604
          ],
          "10": [
            14720,
            14732
          ],
          "11": [
            15126,
            15183
          ],
          "12": [
            15193,
            15256
          ],
          "13": [
            15266,
            15277
          ],
          "14": [
            15292,
            15304
          ]
        },
        "MockEursToken.unfreezeTransfers": {
          "16": [
            19711,
            19740
          ],
          "17": [
            19767,
            19781
          ],
          "18": [
            19790,
            19801
          ]
        },
        "SafeMath.safeAdd": {
          "97": [
            774,
            803
          ],
          "98": [
            809,
            821
          ]
        },
        "SafeMath.safeMul": {
          "99": [
            1405,
            1413
          ],
          "100": [
            1464,
            1493
          ],
          "101": [
            1499,
            1511
          ]
        },
        "SafeMath.safeSub": {
          "87": [
            1093,
            1108
          ],
          "88": [
            1114,
            1126
          ]
        }
      }
    }
  },
  "dependencies": [
    "AbstractToken",
    "SafeMath",
    "Token"
  ],
  "deployedBytecode": "6080604052600436106101325763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630150246081146101a657806306fdde03146101ae578063095ea7b31461023857806313af40351461026357806318160ddd1461028457806323b872dd146102ab578063313ce567146102c857806331c420d4146102f35780634722b4a5146102fb5780636d1b229d1461033657806370a082311461034157806370ae92d2146103625780637e1f2bb81461038357806395d89b411461038e57806399a5d747146103a35780639fef0c01146103bb578063a42dce80146103dc578063a9059cbb146103f0578063addd9cef14610407578063c97e84801461041e578063ca5eb5e114610447578063d5bf2dbe14610468578063dd62ed3e1461047c575b600c54600160a060020a0316151561015457341561014f57600080fd5b600080fd5b600254600c5460405136600082376000813683855af460025484146001811461017c57600080fd5b50600c5483146001811461018f57600080fd5b503d6000833e8080156101a0573d83f35b3d83fd5b005b6101a46104a3565b3480156101ba57600080fd5b506101c361051c565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101fd5781810151838201526020016101e5565b50505050905090810190601f16801561022a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61024f600160a060020a0360043516602435610575565b604080519115158252519081900360200190f35b34801561026f57600080fd5b506101a4600160a060020a03600435166105a8565b34801561029057600080fd5b506102996105ee565b60408051918252519081900360200190f35b61024f600160a060020a0360043581169060243516604435610617565b3480156102d457600080fd5b506102dd6107cd565b6040805160ff9092168252519081900360200190f35b6101a46107f5565b34801561030757600080fd5b5061031061086c565b604080519485526020850193909352838301919091526060830152519081900360800190f35b61024f6004356108a9565b34801561034d57600080fd5b50610299600160a060020a0360043516610978565b34801561036e57600080fd5b50610299600160a060020a03600435166109a8565b61024f6004356109e7565b34801561039a57600080fd5b506101c3610aa8565b3480156103af57600080fd5b50610299600435610b02565b3480156103c757600080fd5b50610299600160a060020a0360043516610b93565b6101a4600160a060020a0360043516610bd2565b61024f600160a060020a0360043516602435610c32565b6101a4600160a060020a0360043516602435610d64565b61024f600160a060020a036004351660243560443560643560ff6084351660a43560c435610db5565b34801561045357600080fd5b506101a4600160a060020a0360043516611126565b6101a46004356024356044356064356111b9565b34801561048857600080fd5b50610299600160a060020a036004358116906024351661126b565b600c54600160a060020a031615156101545734156104c057600080fd5b600254600160a060020a031633146104d757600080fd5b60055460ff16151561051a576005805460ff191660011790556040517f615acbaede366d76a8b8cb2a9ada6a71495f0786513d71aa97aaf0c3910b78de90600090a15b565b600c54606090600160a060020a0316151561015457341561053c57600080fd5b5060408051808201909152601181527f535441534953204555525320546f6b656e00000000000000000000000000000060208201525b90565b600c54600090600160a060020a0316151561015457341561059557600080fd5b61059f8383611295565b90505b92915050565b600254600160a060020a031633146105bf57600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600c54600090600160a060020a0316151561015457341561060e57600080fd5b50600454610572565b600c546000908190600160a060020a0316151561015457341561063957600080fd5b60055460ff161561064d57600091506107c5565b600160a060020a038085166000908152600b6020526040808220549288168252902054176001908116141561068557600091506107c5565b600160a060020a038085166000908152600b6020526040808220549288168252902054176002908116146106c1576106bc83610b02565b6106c4565b60005b600160a060020a038616600090815260016020908152604080832033845290915290205490915083118015906107275750600160a060020a038516600090815260016020908152604080832033845290915290205461072390846112fb565b8111155b801561074b5750600160a060020a0385166000908152602081905260409020548311155b80156107795750600160a060020a03851660009081526020819052604090205461077590846112fb565b8111155b156107c05761078985858561130d565b151561079457600080fd5b6003546107ac908690600160a060020a03168361130d565b15156107b757600080fd5b600191506107c5565b600091505b509392505050565b600c54600090600160a060020a031615156101545734156107ed57600080fd5b506002610572565b600c54600160a060020a0316151561015457341561081257600080fd5b600254600160a060020a0316331461082957600080fd5b60055460ff161561051a576005805460ff191690556040517f2f05ba71d0df11bf5fa562a6569d70c4f80da84284badbe015ce1456063d0ded90600090a161051a565b600c54600090819081908190600160a060020a0316151561015457341561089257600080fd5b5050600754600854600954600a5492959194509250565b600c54600090600160a060020a031615156101545734156108c957600080fd5b600254600160a060020a031633146108e057600080fd5b600082111561096f57336000908152602081905260409020548211610967573360009081526020819052604090205461091990836112fb565b3360009081526020819052604090205560045461093690836112fb565b60045560408051838152905160009133916000805160206116718339815191529181900360200190a3506001610973565b506000610973565b5060015b919050565b600c54600090600160a060020a0316151561015457341561099857600080fd5b6109a182611518565b9050610973565b600c54600090600160a060020a031615156101545734156109c857600080fd5b50600160a060020a038116600090815260066020526040902054610973565b600c54600090600160a060020a03161515610154573415610a0757600080fd5b600254600160a060020a03163314610a1e57600080fd5b600082111561096f57610a3a620186a0600019046004546112fb565b82116109675733600090815260208190526040902054610a5a9083611533565b33600090815260208190526040902055600454610a779083611533565b60045560408051838152905133916000916000805160206116718339815191529181900360200190a3506001610973565b600c54606090600160a060020a03161515610154573415610ac857600080fd5b5060408051808201909152600481527f45555253000000000000000000000000000000000000000000000000000000006020820152610572565b600c54600090600160a060020a03161515610154573415610b2257600080fd5b7da7c5ac471b4784230fcf80dc33721d53cddd6e04c059210385c67dfe32a0821115610b4d57600080fd5b620186a0610b5d83600a54611549565b811515610b6657fe5b049050600854811015610b7857506008545b600954811115610b8757506009545b6109a181600754611533565b600c54600090600160a060020a03161515610154573415610bb357600080fd5b50600160a060020a0381166000908152600b6020526040902054610973565b600c54600160a060020a03161515610154573415610bef57600080fd5b600254600160a060020a03163314610c0657600080fd5b6003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b600c546000908190600160a060020a03161515610154573415610c5457600080fd5b60055460ff1615610c685760009150610d5d565b600160a060020a0384166000908152600b6020526040808220543383529120541760019081161415610c9d5760009150610d5d565b600160a060020a0384166000908152600b60205260408082205433835291205417600290811614610cd657610cd183610b02565b610cd9565b60005b336000908152602081905260409020549091508311801590610d14575033600090815260208190526040902054610d1090846112fb565b8111155b15610d5857610d238484611576565b1515610d2e57600080fd5b600354610d4490600160a060020a031682611576565b1515610d4f57600080fd5b60019150610d5d565b600091505b5092915050565b600c54600160a060020a03161515610154573415610d8157600080fd5b600254600160a060020a03163314610d9857600080fd5b600160a060020a03919091166000908152600b6020526040902055565b600c54600090819081908190600160a060020a03161515610154573415610ddb57600080fd5b60055460ff1615610def5760009350611118565b6001610df961163d565b610e01611641565b604080516c01000000000000000000000000600160a060020a039485168102825292841683026014820152928f169091026028830152603c82018d9052605c82018c9052607c82018b9052805191829003609c018220600080845260208481018085529290925260ff8c1684840152606084018b9052608084018a9052915160a0808501949293601f198301938390039091019190865af1158015610eaa573d6000803e3d6000fd5b505060408051601f190151600160a060020a03811660009081526006602052919091205490945089149050610ee25760009350611118565b600160a060020a03808c166000908152600b60205260408082205492861682529020541760019081161415610f1a5760009350611118565b600160a060020a03808c166000908152600b602052604080822054928616825290205417600290811614610f5657610f518a610b02565b610f59565b60005b600160a060020a0384166000908152602081905260409020549092509050808a1115610f885760009350611118565b610f92818b6112fb565b905080821115610fa55760009350611118565b610faf81836112fb565b905080891115610fc25760009350611118565b610fcc818a6112fb565b600160a060020a03808516600090815260066020908152604080832060018e01905590829052808220849055918e168152205490915061100c908b611533565b600160a060020a03808d16600090815260208190526040808220939093556003549091168152205461103e9083611533565b600354600160a060020a031660009081526020819052604080822092909255338152205461106c908a611533565b33600090815260208181526040918290209290925580518c81529051600160a060020a038e81169390871692600080516020611671833981519152929081900390910190a3600354604080518481529051600160a060020a0392831692861691600080516020611671833981519152919081900360200190a3604080518a815290513391600160a060020a038616916000805160206116718339815191529181900360200190a3600193505b505050979650505050505050565b600254600160a060020a0316331461113d57600080fd5b600c54600160a060020a03828116911614610c2f57600c805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03838116919091179182905560408051929091168252517f600005b3559a025151f4a40f36d9939d94cf5194016895d4ef6362b211e4c3b5916020908290030190a150565b600c54600160a060020a031615156101545734156111d657600080fd5b600254600160a060020a031633146111ed57600080fd5b818311156111fa57600080fd5b620186a081111561120a57600080fd5b600784905560088390556009829055600a81905560408051858152602081018590528082018490526060810183905290517f650bf5314bb5924368ffebaf7dffcfaa4a0f99c2ab08264c26bf0547f8c459e99181900360800190a150505050565b600c54600090600160a060020a0316151561015457341561128b57600080fd5b61059f8383611645565b336000818152600160209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60008183101561130757fe5b50900390565b600160a060020a038316600090815260016020908152604080832033845290915281205481838210156113a157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f6e6f7420656e6f75676820616c6c6f77616e6365000000000000000000000000604482015290519081900360640190fd5b50600160a060020a0385166000908152602081905260409020548381101561142a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f7420656e6f7567682062616c616e63650000000000000000000000000000604482015290519081900360640190fd5b61143482856112fb565b600160a060020a03871660009081526001602090815260408083203384529091528120919091558411801561147b575084600160a060020a031686600160a060020a031614155b156114d35761148a81856112fb565b600160a060020a0380881660009081526020819052604080822093909355908716815220546114b99085611533565b600160a060020a0386166000908152602081905260409020555b84600160a060020a031686600160a060020a0316600080516020611671833981519152866040518082815260200191505060405180910390a350600195945050505050565b600160a060020a031660009081526020819052604090205490565b600060001982900383111561154457fe5b500190565b600081151561155a575060006105a2565b8160001981151561156757fe5b0483111561157157fe5b500290565b33600090815260208190526040812054828110156115975760009150610d5d565b6000831180156115b0575033600160a060020a03851614155b15611605576115bf81846112fb565b3360009081526020819052604080822092909255600160a060020a038616815220546115eb9084611533565b600160a060020a0385166000908152602081905260409020555b604080518481529051600160a060020a0386169133916000805160206116718339815191529181900360200190a35060019392505050565b3090565b3390565b600160a060020a039182166000908152600160209081526040808320939094168252919091522054905600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582004354358bbafc6f34dd5a6a6944719ba51dfd606561da380df4467a49fff3dc60029",
  "deployedSourceMap": "9148:16714:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10059:8;;-1:-1:-1;;;;;10059:8:0;:23;10055:1341;;;10101:9;:14;10092:24;;;;;;11866:9;;;10055:1341;10242:10;10235:18;10314:13;10307:21;10434:4;10427:12;10520;10517:1;10509:6;10495:38;10653:1;10645:6;10631:12;10623:6;10610:11;10605:3;10591:64;10737:10;10730:18;10720:8;10716:33;10763:1;10758:9;;;;10827:1;10824;10816:13;10758:9;10709:122;10949:13;10942:21;10929:11;10925:39;10978:1;10973:9;;;;11045:1;11042;11034:13;10973:9;10918:131;11162:14;11159:1;11151:6;11135:42;11223:6;11238:42;;;;11339:14;11331:6;11323:31;11238:42;11263:14;11255:6;11247:31;10187:1203;9148:16714;19441:160;;;;11987:95;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11987:95:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11987:95:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15655:162;;-1:-1:-1;;;;;15655:162:0;;;;;;;;;;;;;;;;;;;;;;;;;19911:109;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;19911:109:0;-1:-1:-1;;;;;19911:109:0;;;;;12560:95;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12560:95:0;;;;;;;;;;;;;;;;;;;;14463:852;;-1:-1:-1;;;;;14463:852:0;;;;;;;;;;;;12360:80;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12360:80:0;;;;;;;;;;;;;;;;;;;;;;;19648:164;;;;21591:338;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21591:338:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18955:441;;;;;;12917:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12917:140:0;-1:-1:-1;;;;;12917:140:0;;;;;20567:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;20567:107:0;-1:-1:-1;;;;;20567:107:0;;;;;18411:461;;;;;;12166:84;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12166:84:0;;;;22112:355;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;22112:355:0;;;;;22899:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;22899:117:0;-1:-1:-1;;;;;22899:117:0;;;;;20127:159;;-1:-1:-1;;;;;20127:159:0;;;;;13367:708;;-1:-1:-1;;;;;13367:708:0;;;;;;;22600:161;;-1:-1:-1;;;;;22600:161:0;;;;;;;16901:1418;;-1:-1:-1;;;;;16901:1418:0;;;;;;;;;;;;;;;;;;;23288:185;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;23288:185:0;-1:-1:-1;;;;;23288:185:0;;;;;20952:565;;;;;;;;;;;;16255:168;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;16255:168:0;-1:-1:-1;;;;;16255:168:0;;;;;;;;;;19441:160;10059:8;;-1:-1:-1;;;;;10059:8:0;:23;10055:1341;;;10101:9;:14;10092:24;;;;;;19525:5;;-1:-1:-1;;;;;19525:5:0;19511:10;:19;19502:29;;;;;;19543:6;;;;19542:7;19538:59;;;19559:6;:13;;-1:-1:-1;;19559:13:0;19568:4;19559:13;;;19581:9;;;;19559:6;;19581:9;19538:59;19441:160::o;11987:95::-;10059:8;;12037:6;;-1:-1:-1;;;;;10059:8:0;:23;10055:1341;;;10101:9;:14;10092:24;;;;;;-1:-1:-1;12051:26:0;;;;;;;;;;;;;;;;;10187:1203;11987:95;:::o;15655:162::-;10059:8;;15745:12;;-1:-1:-1;;;;;10059:8:0;:23;10055:1341;;;10101:9;:14;10092:24;;;;;;15772:40;15795:8;15805:6;15772:21;:40::i;:::-;15765:47;;10187:1203;15655:162;;;;:::o;19911:109::-;19985:5;;-1:-1:-1;;;;;19985:5:0;19971:10;:19;19962:29;;;;;;19998:5;:17;;-1:-1:-1;;19998:17:0;-1:-1:-1;;;;;19998:17:0;;;;;;;;;;19911:109::o;12560:95::-;10059:8;;12617:7;;-1:-1:-1;;;;;10059:8:0;:23;10055:1341;;;10101:9;:14;10092:24;;;;;;-1:-1:-1;12639:11:0;;10055:1341;;14463:852;10059:8;;14568:4;;;;-1:-1:-1;;;;;10059:8:0;:23;10055:1341;;;10101:9;:14;10092:24;;;;;;14584:6;;;;14580:731;;;14599:5;14592:12;;;;14580:731;-1:-1:-1;;;;;14650:18:0;;;;;;;:12;:18;;;;;;;14627:20;;;;;;;;:41;9907:4;14626:61;;;:86;14615:696;;;14727:5;14720:12;;;;14615:696;-1:-1:-1;;;;;14797:18:0;;;;;;;:12;:18;;;;;;;14774:20;;;;;;;;:41;10019:4;14773:59;;;:76;:124;;14876:21;14890:6;14876:12;:21::i;:::-;14773:124;;;14862:1;14773:124;-1:-1:-1;;;;;14920:18:0;;;;;;:10;:18;;;;;;;;14939:10;14920:30;;;;;;;;14751:146;;-1:-1:-1;14910:40:0;;;;;:109;;-1:-1:-1;;;;;;14980:18:0;;;;;;:10;:18;;;;;;;;14999:10;14980:30;;;;;;;;14971:48;;15012:6;14971:7;:48::i;:::-;14964:3;:55;;14910:109;:149;;;;-1:-1:-1;;;;;;15043:16:0;;:8;:16;;;;;;;;;;;15033:26;;;14910:149;:204;;;;-1:-1:-1;;;;;;15089:16:0;;:8;:16;;;;;;;;;;;15080:34;;15107:6;15080:7;:34::i;:::-;15073:3;:41;;14910:204;14906:398;;;15135:47;15163:5;15170:3;15175:6;15135:26;:47::i;:::-;15126:57;;;;;;;;15237:12;;15202:53;;15230:5;;-1:-1:-1;;;;;15237:12:0;15251:3;15202:26;:53::i;:::-;15193:63;;;;;;;;15273:4;15266:11;;;;14906:398;15299:5;15292:12;;14906:398;14463:852;;;;;;:::o;12360:80::-;10059:8;;12414:5;;-1:-1:-1;;;;;10059:8:0;:23;10055:1341;;;10101:9;:14;10092:24;;;;;;-1:-1:-1;12434:1:0;10055:1341;;19648:164;10059:8;;-1:-1:-1;;;;;10059:8:0;:23;10055:1341;;;10101:9;:14;10092:24;;;;;;19734:5;;-1:-1:-1;;;;;19734:5:0;19720:10;:19;19711:29;;;;;;19751:6;;;;19747:61;;;19767:6;:14;;-1:-1:-1;;19767:14:0;;;19790:11;;;;19776:5;;19790:11;10055:1341;;21591:338;10059:8;;21658:17;;;;;;;;-1:-1:-1;;;;;10059:8:0;:23;10055:1341;;;10101:9;:14;10092:24;;;;;;-1:-1:-1;;21789:8:0;;21821:14;;21859;;21904:20;;21789:8;;21821:14;;-1:-1:-1;21859:14:0;-1:-1:-1;21591:338:0:o;18955:441::-;10059:8;;19030:4;;-1:-1:-1;;;;;10059:8:0;:23;10055:1341;;;10101:9;:14;10092:24;;;;;;19065:5;;-1:-1:-1;;;;;19065:5:0;19051:10;:19;19042:29;;;;;;19091:1;19082:6;:10;19078:313;;;19126:10;19116:8;:21;;;;;;;;;;;19106:31;;19102:265;;19192:10;19182:8;:21;;;;;;;;;;;19173:39;;19205:6;19173:7;:39::i;:::-;19159:10;19149:8;:21;;;;;;;;;;:63;19245:11;;19236:29;;19258:6;19236:7;:29::i;:::-;19222:11;:43;19276:42;;;;;;;;19307:1;;19286:10;;-1:-1:-1;;;;;;;;;;;19276:42:0;;;;;;;;-1:-1:-1;19336:4:0;19329:11;;19102:265;-1:-1:-1;19362:5:0;19355:12;;19078:313;-1:-1:-1;19387:4:0;19078:313;18955:441;;;:::o;12917:140::-;10059:8;;12990:15;;-1:-1:-1;;;;;10059:8:0;:23;10055:1341;;;10101:9;:14;10092:24;;;;;;13020:32;13045:6;13020:23;:32::i;:::-;13013:39;;10055:1341;;20567:107;10059:8;;20632:7;;-1:-1:-1;;;;;10059:8:0;:23;10055:1341;;;10101:9;:14;10092:24;;;;;;-1:-1:-1;;;;;;20654:15:0;;;;;;:6;:15;;;;;;10055:1341;;18411:461;10059:8;;18488:4;;-1:-1:-1;;;;;10059:8:0;:23;10055:1341;;;10101:9;:14;10092:24;;;;;;18523:5;;-1:-1:-1;;;;;18523:5:0;18509:10;:19;18500:29;;;;;;18549:1;18540:6;:10;18536:331;;;18574:39;9279:6;-1:-1:-1;;9616:90:0;18601:11;;18574:7;:39::i;:::-;18564:49;;18560:283;;18668:10;18658:8;:21;;;;;;;;;;;18649:39;;18681:6;18649:7;:39::i;:::-;18635:10;18625:8;:21;;;;;;;;;;:63;18721:11;;18712:29;;18734:6;18712:7;:29::i;:::-;18698:11;:43;18752:42;;;;;;;;18775:10;;18771:1;;-1:-1:-1;;;;;;;;;;;18752:42:0;;;;;;;;-1:-1:-1;18812:4:0;18805:11;;12166:84;10059:8;;12218:6;;-1:-1:-1;;;;;10059:8:0;:23;10055:1341;;;10101:9;:14;10092:24;;;;;;-1:-1:-1;12232:13:0;;;;;;;;;;;;;;;;;10055:1341;;22112:355;10059:8;;22189:12;;-1:-1:-1;;;;;10059:8:0;:23;10055:1341;;;10101:9;:14;10092:24;;;;;;9616:90;22218:27;;;22209:37;;;;;;9279:6;22260:39;22269:7;22278:20;;22260:7;:39::i;:::-;:57;;;;;;;;22253:64;;22334:14;;22327:4;:21;22323:48;;;-1:-1:-1;22357:14:0;;22323:48;22388:14;;22381:4;:21;22377:48;;;-1:-1:-1;22411:14:0;;22377:48;22438:24;22447:4;22453:8;;22438:7;:24::i;22899:117::-;10059:8;;22966:7;;-1:-1:-1;;;;;10059:8:0;:23;10055:1341;;;10101:9;:14;10092:24;;;;;;-1:-1:-1;;;;;;22988:23:0;;;;;;:12;:23;;;;;;10055:1341;;20127:159;10059:8;;-1:-1:-1;;;;;10059:8:0;:23;10055:1341;;;10101:9;:14;10092:24;;;;;;20237:5;;-1:-1:-1;;;;;20237:5:0;20223:10;:19;20214:29;;;;;;20250:12;:31;;-1:-1:-1;;20250:31:0;-1:-1:-1;;;;;20250:31:0;;;;;10187:1203;20127:159;:::o;13367:708::-;10059:8;;13453:4;;;;-1:-1:-1;;;;;10059:8:0;:23;10055:1341;;;10101:9;:14;10092:24;;;;;;13469:6;;;;13465:606;;;13484:5;13477:12;;;;13465:606;-1:-1:-1;;;;;13540:18:0;;;;;;:12;:18;;;;;;;13526:10;13512:25;;;;;:46;9907:4;13511:66;;;:91;13500:571;;;13617:5;13610:12;;;;13500:571;-1:-1:-1;;;;;13692:18:0;;;;;;:12;:18;;;;;;;13678:10;13664:25;;;;;:46;10019:4;13663:64;;;:81;:129;;13771:21;13785:6;13771:12;:21::i;:::-;13663:129;;;13757:1;13663:129;13825:10;13815:8;:21;;;;;;;;;;;13641:151;;-1:-1:-1;13805:31:0;;;;;:91;;-1:-1:-1;13876:10:0;13866:8;:21;;;;;;;;;;;13857:39;;13889:6;13857:7;:39::i;:::-;13850:3;:46;;13805:91;13801:263;;;13917:36;13941:3;13946:6;13917:22;:36::i;:::-;13908:46;;;;;;;;13997:12;;13973:42;;-1:-1:-1;;;;;13997:12:0;14011:3;13973:22;:42::i;:::-;13964:52;;;;;;;;14033:4;14026:11;;;;13801:263;14059:5;14052:12;;13801:263;13367:708;;;;;:::o;22600:161::-;10059:8;;-1:-1:-1;;;;;10059:8:0;:23;10055:1341;;;10101:9;:14;10092:24;;;;;;22711:5;;-1:-1:-1;;;;;22711:5:0;22697:10;:19;22688:29;;;;;;-1:-1:-1;;;;;22724:23:0;;;;;;;;:12;:23;;;;;:32;22600:161::o;16901:1418::-;10059:8;;17069:4;;;;;;;;-1:-1:-1;;;;;10059:8:0;:23;10055:1341;;;10101:9;:14;10092:24;;;;;;17085:6;;;;17081:1234;;;17100:5;17093:12;;;;17081:1234;17140:130;17182:14;:11;:14::i;:::-;17198:23;:20;:23::i;:::-;17160:89;;;;-1:-1:-1;;;;;17160:89:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17140:130:0;;;17160:89;17140:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17160:89;;-1:-1:-1;;17140:130:0;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;17140:130:0;;;-1:-1:-1;;17140:130:0;;-1:-1:-1;;;;;17293:14:0;;;;;;:6;17140:130;17293:14;;;;;;17140:130;;-1:-1:-1;17283:24:0;;;-1:-1:-1;17279:42:0;;17316:5;17309:12;;;;17279:42;-1:-1:-1;;;;;17367:18:0;;;;;;;:12;:18;;;;;;;17344:20;;;;;;;;:41;9907:4;17343:61;;;:88;17330:123;;;17448:5;17441:12;;;;17330:123;-1:-1:-1;;;;;17508:18:0;;;;;;;:12;:18;;;;;;;17485:20;;;;;;;;:41;10019:4;17484:59;;;:76;:124;;17587:21;17601:6;17587:12;:21::i;:::-;17484:124;;;17573:1;17484:124;-1:-1:-1;;;;;17635:16:0;;:8;:16;;;;;;;;;;;17462:146;;-1:-1:-1;17635:16:0;-1:-1:-1;17663:16:0;;;17659:34;;;17688:5;17681:12;;;;17659:34;17711:25;17720:7;17729:6;17711:7;:25::i;:::-;17701:35;;17754:7;17748:3;:13;17744:31;;;17770:5;17763:12;;;;17744:31;17793:22;17802:7;17811:3;17793:7;:22::i;:::-;17783:32;;17834:7;17827:4;:14;17823:32;;;17850:5;17843:12;;;;17823:32;17873:23;17882:7;17891:4;17873:7;:23::i;:::-;-1:-1:-1;;;;;17905:14:0;;;;;;;:6;:14;;;;;;;;17931:1;17922:10;;17905:27;;17941:16;;;;;;;:26;;;18001:14;;;;;;;17863:33;;-1:-1:-1;17992:32:0;;18017:6;17992:7;:32::i;:::-;-1:-1:-1;;;;;17975:14:0;;;:8;:14;;;;;;;;;;;:49;;;;18077:12;;;;;18067:23;;;;18058:38;;18092:3;18058:7;:38::i;:::-;18042:12;;-1:-1:-1;;;;;18042:12:0;18032:8;:23;;;;;;;;;;;:64;;;;18147:10;18137:21;;;;18128:37;;18160:4;18128:7;:37::i;:::-;18114:10;18104:8;:21;;;;;;;;;;;;:61;;;;18174:29;;;;;;;-1:-1:-1;;;;;18174:29:0;;;;;;;;-1:-1:-1;;;;;;;;;;;18174:29:0;;;;;;;;;;18228:12;;18211:35;;;;;;;;-1:-1:-1;;;;;18228:12:0;;;;18211:35;;;-1:-1:-1;;;;;;;;;;;18211:35:0;;;;;;;;;18254:34;;;;;;;;18271:10;;-1:-1:-1;;;;;18254:34:0;;;-1:-1:-1;;;;;;;;;;;18254:34:0;;;;;;;;18304:4;18297:11;;17081:1234;16901:1418;;;;;;;;;;;;:::o;23288:185::-;23365:5;;-1:-1:-1;;;;;23365:5:0;23351:10;:19;23342:29;;;;;;23382:8;;-1:-1:-1;;;;;23382:21:0;;;:8;;:21;23378:91;;23413:8;:20;;-1:-1:-1;;23413:20:0;-1:-1:-1;;;;;23413:20:0;;;;;;;;;;;23441:21;;;23453:8;;;;23441:21;;;;;;;;;;;;;23288:185;:::o;20952:565::-;10059:8;;-1:-1:-1;;;;;10059:8:0;:23;10055:1341;;;10101:9;:14;10092:24;;;;;;21152:5;;-1:-1:-1;;;;;21152:5:0;21138:10;:19;21129:29;;;;;;21174:34;;;;21165:44;;;;;;9279:6;21224:42;;;21215:52;;;;;;21274:8;:20;;;21300:14;:32;;;21338:14;:32;;;21376:20;:44;;;21427:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20952:565;;;;:::o;16255:168::-;10059:8;;16344:17;;-1:-1:-1;;;;;10059:8:0;:23;10055:1341;;;10101:9;:14;10092:24;;;;;;16376:42;16401:6;16409:8;16376:23;:42::i;7828:208::-;7938:10;7906:12;7926:23;;;:10;:23;;;;;;;;-1:-1:-1;;;;;7926:33:0;;;;;;;;;;;:42;;;7974:39;;;;;;;7906:12;;7926:33;;7938:10;;7974:39;;;;;;;;-1:-1:-1;8027:4:0;7828:208;;;;:::o;1009:122::-;1076:9;1101:6;;;;1093:15;;;;-1:-1:-1;1121:5:0;;;1009:122::o;6852:636::-;-1:-1:-1;;;;;6992:18:0;;6945:12;6992:18;;;:10;:18;;;;;;;;7011:10;6992:30;;;;;;;;6945:12;7036:26;;;;7028:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7115:16:0;;:8;:16;;;;;;;;;;;7145:21;;;;7137:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7239:34;7248:16;7266:6;7239:7;:34::i;:::-;-1:-1:-1;;;;;7200:18:0;;;;;;:10;:18;;;;;;;;7219:10;7200:30;;;;;;;:73;;;;7284:10;;:26;;;;;7307:3;-1:-1:-1;;;;;7298:12:0;:5;-1:-1:-1;;;;;7298:12:0;;;7284:26;7280:152;;;7339:29;7348:11;7361:6;7339:7;:29::i;:::-;-1:-1:-1;;;;;7320:16:0;;;:8;:16;;;;;;;;;;;:48;;;;7402:14;;;;;;;7393:32;;7418:6;7393:7;:32::i;:::-;-1:-1:-1;;;;;7376:14:0;;:8;:14;;;;;;;;;;:49;7280:152;7454:3;-1:-1:-1;;;;;7437:29:0;7447:5;-1:-1:-1;;;;;7437:29:0;-1:-1:-1;;;;;;;;;;;7459:6:0;7437:29;;;;;;;;;;;;;;;;;;-1:-1:-1;7479:4:0;;6852:636;-1:-1:-1;;;;;6852:636:0:o;5635:109::-;-1:-1:-1;;;;;5722:17:0;5692:15;5722:17;;;;;;;;;;;;5635:109::o;690:136::-;757:9;-1:-1:-1;;787:15:0;;;782:20;;;774:29;;;;-1:-1:-1;816:5:0;;690:136::o;1309:207::-;1376:9;1397:6;;1393:20;;;-1:-1:-1;1412:1:0;1405:8;;1393:20;1491:1;-1:-1:-1;;1477:15:0;;;;;;;;1472:20;;;1464:29;;;;-1:-1:-1;1506:5:0;;1309:207::o;6054:410::-;6180:10;6128:12;6170:21;;;;;;;;;;;6201:20;;;6197:38;;;6230:5;6223:12;;;;6197:38;6254:1;6245:6;:10;:31;;;;-1:-1:-1;6259:10:0;-1:-1:-1;;;;;6259:17:0;;;;6245:31;6241:162;;;6310:29;6319:11;6332:6;6310:7;:29::i;:::-;6296:10;6286:8;:21;;;;;;;;;;;:53;;;;-1:-1:-1;;;;;6373:14:0;;;;;;6364:32;;6389:6;6364:7;:32::i;:::-;-1:-1:-1;;;;;6347:14:0;;:8;:14;;;;;;;;;;:49;6241:162;6408:34;;;;;;;;-1:-1:-1;;;;;6408:34:0;;;6418:10;;-1:-1:-1;;;;;;;;;;;6408:34:0;;;;;;;;-1:-1:-1;6455:4:0;;6054:410;-1:-1:-1;;;6054:410:0:o;23579:78::-;23648:4;23579:78;:::o;23758:93::-;23836:10;23758:93;:::o;8474:143::-;-1:-1:-1;;;;;8583:19:0;;;8551:17;8583:19;;;:10;:19;;;;;;;;:29;;;;;;;;;;;;;8474:143::o",
  "language": "Solidity",
  "natspec": {
    "methods": {
      "allowance(address,address)": {
        "notice": "Tell how many tokens given spender is currently allowed to transfer from given owner.",
        "params": {
          "_owner": "address to get number of tokens allowed to be transferred       from the owner of",
          "_spender": "address to get number of tokens allowed to be transferred       by the owner of"
        },
        "return": "number of tokens given spender is currently allowed to transfer        from given owner"
      },
      "approve(address,uint256)": {
        "notice": "Allow given spender to transfer given number of tokens from message sender.",
        "params": {
          "_spender": "address to allow the owner of to transfer tokens from       message sender",
          "_value": "number of tokens to allow to transfer"
        },
        "return": "true if token transfer was successfully approved, false otherwise"
      },
      "balanceOf(address)": {
        "notice": "Get number of tokens currently belonging to given owner.",
        "params": {
          "_owner": "address to get number of tokens currently belonging to the       owner of"
        },
        "return": "number of tokens currently belonging to the owner of given address"
      },
      "burnTokens(uint256)": {
        "notice": "Burn tokens.",
        "params": {
          "_value": "number of tokens to burn"
        }
      },
      "calculateFee(uint256)": {
        "notice": "Calculate fee for transfer of given number of tokens.",
        "params": {
          "_amount": "transfer amount to calculate fee for"
        },
        "return": "fee for transfer of given amount"
      },
      "createTokens(uint256)": {
        "notice": "Create tokens.",
        "params": {
          "_value": "number of tokens to be created."
        }
      },
      "decimals()": {
        "notice": "Get number of decimals for the token.",
        "return": "number of decimals for the token"
      },
      "delegatedTransfer(address,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Transfer given number of token from the signed defined by digital signature to given recipient.",
        "params": {
          "_fee": "number of tokens to give to message sender",
          "_nonce": "nonce of the transfer",
          "_r": "parameter R of digital signature",
          "_s": "parameter S of digital signature",
          "_to": "address to transfer token to the owner of",
          "_v": "parameter V of digital signature",
          "_value": "number of tokens to transfer"
        }
      },
      "flags(address)": {
        "notice": "Get flags for given address.",
        "params": {
          "_address": "address to get flags for"
        },
        "return": "flags for given address"
      },
      "freezeTransfers()": {
        "notice": "Freeze token transfers."
      },
      "getFeeParameters()": {
        "notice": "Get fee parameters.",
        "return": "fee parameters"
      },
      "name()": {
        "notice": "Get name of the token.",
        "return": "name of the token"
      },
      "nonce(address)": {
        "notice": "Get current nonce for token holder with given address, i.e. nonce this token holder should use for next delegated transfer.",
        "params": {
          "_owner": "address of the token holder to get nonce for"
        },
        "return": "current nonce for token holder with give address"
      },
      "setDelegate(address)": {
        "notice": "Set address of smart contract to delegate execution of delegatable methods to.",
        "params": {
          "_delegate": "address of smart contract to delegate execution of delegatable methods to, or zero to not delegate delegatable methods execution."
        }
      },
      "setFeeCollector(address)": {
        "notice": "Set fee collector.",
        "params": {
          "_newFeeCollector": "address of the new fee collector"
        }
      },
      "setFeeParameters(uint256,uint256,uint256,uint256)": {
        "notice": "Set fee parameters.",
        "params": {
          "_fixedFee": "fixed fee in token units",
          "_maxVariableFee": "maximum variable fee in token units",
          "_minVariableFee": "minimum variable fee in token units",
          "_variableFeeNumerator": "variable fee numerator"
        }
      },
      "setFlags(address,uint256)": {
        "notice": "Set flags for given address.",
        "params": {
          "_address": "address to set flags for",
          "_flags": "flags to set"
        }
      },
      "setOwner(address)": {
        "notice": "Set smart contract owner.",
        "params": {
          "_newOwner": "address of the new owner"
        }
      },
      "symbol()": {
        "notice": "Get symbol of the token.",
        "return": "symbol of the token"
      },
      "totalSupply()": {
        "notice": "Get total number of tokens in circulation.",
        "return": "total number of tokens in circulation"
      },
      "transfer(address,uint256)": {
        "notice": "Transfer given number of tokens from message sender to given recipient.",
        "params": {
          "_to": "address to transfer tokens to the owner of",
          "_value": "number of tokens to transfer to the owner of given address"
        },
        "return": "true if tokens were transferred successfully, false otherwise"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfer given number of tokens from given owner to given recipient.",
        "params": {
          "_from": "address to transfer tokens from the owner of",
          "_to": "address to transfer tokens to the owner of",
          "_value": "number of tokens to transfer from given owner to given       recipient"
        },
        "return": "true if tokens were transferred successfully, false otherwise"
      },
      "unfreezeTransfers()": {
        "notice": "Unfreeze token transfers."
      }
    }
  },
  "offset": [
    9148,
    25862
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x132 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x1502460 DUP2 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x31C420D4 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x4722B4A5 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x6D1B229D EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x70AE92D2 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x7E1F2BB8 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x99A5D747 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x9FEF0C01 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xA42DCE80 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xADDD9CEF EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xC97E8480 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0xCA5EB5E1 EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0xD5BF2DBE EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x47C JUMPI JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x154 JUMPI CALLVALUE ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD CALLDATASIZE PUSH1 0x0 DUP3 CALLDATACOPY PUSH1 0x0 DUP2 CALLDATASIZE DUP4 DUP6 GAS DELEGATECALL PUSH1 0x2 SLOAD DUP5 EQ PUSH1 0x1 DUP2 EQ PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD DUP4 EQ PUSH1 0x1 DUP2 EQ PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x1A0 JUMPI RETURNDATASIZE DUP4 RETURN JUMPDEST RETURNDATASIZE DUP4 REVERT JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH2 0x4A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x22A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x5A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x617 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH2 0x7F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x86C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 CALLDATALOAD PUSH2 0x8A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x978 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x24F PUSH1 0x4 CALLDATALOAD PUSH2 0x9E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH2 0xAA8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH1 0x4 CALLDATALOAD PUSH2 0xB02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xB93 JUMP JUMPDEST PUSH2 0x1A4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xBD2 JUMP JUMPDEST PUSH2 0x24F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0xC32 JUMP JUMPDEST PUSH2 0x1A4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x24F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH1 0xFF PUSH1 0x84 CALLDATALOAD AND PUSH1 0xA4 CALLDATALOAD PUSH1 0xC4 CALLDATALOAD PUSH2 0xDB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1126 JUMP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH2 0x11B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0x126B JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x154 JUMPI CALLVALUE ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x51A JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x615ACBAEDE366D76A8B8CB2A9ADA6A71495F0786513D71AA97AAF0C3910B78DE SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x154 JUMPI CALLVALUE ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH32 0x535441534953204555525320546F6B656E000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x154 JUMPI CALLVALUE ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59F DUP4 DUP4 PUSH2 0x1295 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x5BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x154 JUMPI CALLVALUE ISZERO PUSH2 0x60E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x572 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x154 JUMPI CALLVALUE ISZERO PUSH2 0x639 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x64D JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x7C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP9 AND DUP3 MSTORE SWAP1 KECCAK256 SLOAD OR PUSH1 0x1 SWAP1 DUP2 AND EQ ISZERO PUSH2 0x685 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x7C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP9 AND DUP3 MSTORE SWAP1 KECCAK256 SLOAD OR PUSH1 0x2 SWAP1 DUP2 AND EQ PUSH2 0x6C1 JUMPI PUSH2 0x6BC DUP4 PUSH2 0xB02 JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP4 GT DUP1 ISZERO SWAP1 PUSH2 0x727 JUMPI POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x723 SWAP1 DUP5 PUSH2 0x12FB JUMP JUMPDEST DUP2 GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x74B JUMPI POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x779 JUMPI POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x775 SWAP1 DUP5 PUSH2 0x12FB JUMP JUMPDEST DUP2 GT ISZERO JUMPDEST ISZERO PUSH2 0x7C0 JUMPI PUSH2 0x789 DUP6 DUP6 DUP6 PUSH2 0x130D JUMP JUMPDEST ISZERO ISZERO PUSH2 0x794 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x7AC SWAP1 DUP7 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 PUSH2 0x130D JUMP JUMPDEST ISZERO ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 POP PUSH2 0x7C5 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x154 JUMPI CALLVALUE ISZERO PUSH2 0x7ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 PUSH2 0x572 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x154 JUMPI CALLVALUE ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x51A JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2F05BA71D0DF11BF5FA562A6569D70C4F80DA84284BADBE015CE1456063D0DED SWAP1 PUSH1 0x0 SWAP1 LOG1 PUSH2 0x51A JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x154 JUMPI CALLVALUE ISZERO PUSH2 0x892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x154 JUMPI CALLVALUE ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x8E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x96F JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT PUSH2 0x967 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x919 SWAP1 DUP4 PUSH2 0x12FB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x4 SLOAD PUSH2 0x936 SWAP1 DUP4 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1671 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP PUSH1 0x1 PUSH2 0x973 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x973 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x154 JUMPI CALLVALUE ISZERO PUSH2 0x998 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9A1 DUP3 PUSH2 0x1518 JUMP JUMPDEST SWAP1 POP PUSH2 0x973 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x154 JUMPI CALLVALUE ISZERO PUSH2 0x9C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x973 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x154 JUMPI CALLVALUE ISZERO PUSH2 0xA07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xA1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x96F JUMPI PUSH2 0xA3A PUSH3 0x186A0 PUSH1 0x0 NOT DIV PUSH1 0x4 SLOAD PUSH2 0x12FB JUMP JUMPDEST DUP3 GT PUSH2 0x967 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA5A SWAP1 DUP4 PUSH2 0x1533 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x4 SLOAD PUSH2 0xA77 SWAP1 DUP4 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1671 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP PUSH1 0x1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x154 JUMPI CALLVALUE ISZERO PUSH2 0xAC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH32 0x4555525300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x572 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x154 JUMPI CALLVALUE ISZERO PUSH2 0xB22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH30 0xA7C5AC471B4784230FCF80DC33721D53CDDD6E04C059210385C67DFE32A0 DUP3 GT ISZERO PUSH2 0xB4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x186A0 PUSH2 0xB5D DUP4 PUSH1 0xA SLOAD PUSH2 0x1549 JUMP JUMPDEST DUP2 ISZERO ISZERO PUSH2 0xB66 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0xB78 JUMPI POP PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x9 SLOAD DUP2 GT ISZERO PUSH2 0xB87 JUMPI POP PUSH1 0x9 SLOAD JUMPDEST PUSH2 0x9A1 DUP2 PUSH1 0x7 SLOAD PUSH2 0x1533 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x154 JUMPI CALLVALUE ISZERO PUSH2 0xBB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x973 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x154 JUMPI CALLVALUE ISZERO PUSH2 0xBEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xC06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x154 JUMPI CALLVALUE ISZERO PUSH2 0xC54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC68 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD CALLER DUP4 MSTORE SWAP2 KECCAK256 SLOAD OR PUSH1 0x1 SWAP1 DUP2 AND EQ ISZERO PUSH2 0xC9D JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD CALLER DUP4 MSTORE SWAP2 KECCAK256 SLOAD OR PUSH1 0x2 SWAP1 DUP2 AND EQ PUSH2 0xCD6 JUMPI PUSH2 0xCD1 DUP4 PUSH2 0xB02 JUMP JUMPDEST PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP4 GT DUP1 ISZERO SWAP1 PUSH2 0xD14 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD10 SWAP1 DUP5 PUSH2 0x12FB JUMP JUMPDEST DUP2 GT ISZERO JUMPDEST ISZERO PUSH2 0xD58 JUMPI PUSH2 0xD23 DUP5 DUP5 PUSH2 0x1576 JUMP JUMPDEST ISZERO ISZERO PUSH2 0xD2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xD44 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP3 PUSH2 0x1576 JUMP JUMPDEST ISZERO ISZERO PUSH2 0xD4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 POP PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x154 JUMPI CALLVALUE ISZERO PUSH2 0xD81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xD98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x154 JUMPI CALLVALUE ISZERO PUSH2 0xDDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDEF JUMPI PUSH1 0x0 SWAP4 POP PUSH2 0x1118 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xDF9 PUSH2 0x163D JUMP JUMPDEST PUSH2 0xE01 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH13 0x1000000000000000000000000 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP5 DUP6 AND DUP2 MUL DUP3 MSTORE SWAP3 DUP5 AND DUP4 MUL PUSH1 0x14 DUP3 ADD MSTORE SWAP3 DUP16 AND SWAP1 SWAP2 MUL PUSH1 0x28 DUP4 ADD MSTORE PUSH1 0x3C DUP3 ADD DUP14 SWAP1 MSTORE PUSH1 0x5C DUP3 ADD DUP13 SWAP1 MSTORE PUSH1 0x7C DUP3 ADD DUP12 SWAP1 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x9C ADD DUP3 KECCAK256 PUSH1 0x0 DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 DUP2 ADD DUP1 DUP6 MSTORE SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF DUP13 AND DUP5 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD DUP12 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD DUP11 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0xA0 DUP1 DUP6 ADD SWAP5 SWAP3 SWAP4 PUSH1 0x1F NOT DUP4 ADD SWAP4 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP7 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP5 POP DUP10 EQ SWAP1 POP PUSH2 0xEE2 JUMPI PUSH1 0x0 SWAP4 POP PUSH2 0x1118 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP7 AND DUP3 MSTORE SWAP1 KECCAK256 SLOAD OR PUSH1 0x1 SWAP1 DUP2 AND EQ ISZERO PUSH2 0xF1A JUMPI PUSH1 0x0 SWAP4 POP PUSH2 0x1118 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP7 AND DUP3 MSTORE SWAP1 KECCAK256 SLOAD OR PUSH1 0x2 SWAP1 DUP2 AND EQ PUSH2 0xF56 JUMPI PUSH2 0xF51 DUP11 PUSH2 0xB02 JUMP JUMPDEST PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP SWAP1 POP DUP1 DUP11 GT ISZERO PUSH2 0xF88 JUMPI PUSH1 0x0 SWAP4 POP PUSH2 0x1118 JUMP JUMPDEST PUSH2 0xF92 DUP2 DUP12 PUSH2 0x12FB JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xFA5 JUMPI PUSH1 0x0 SWAP4 POP PUSH2 0x1118 JUMP JUMPDEST PUSH2 0xFAF DUP2 DUP4 PUSH2 0x12FB JUMP JUMPDEST SWAP1 POP DUP1 DUP10 GT ISZERO PUSH2 0xFC2 JUMPI PUSH1 0x0 SWAP4 POP PUSH2 0x1118 JUMP JUMPDEST PUSH2 0xFCC DUP2 DUP11 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP15 ADD SWAP1 SSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE SWAP2 DUP15 AND DUP2 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x100C SWAP1 DUP12 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP14 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x3 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x103E SWAP1 DUP4 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE CALLER DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x106C SWAP1 DUP11 PUSH2 0x1533 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP1 MLOAD DUP13 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP15 DUP2 AND SWAP4 SWAP1 DUP8 AND SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1671 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 DUP4 AND SWAP3 DUP7 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1671 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 PUSH1 0x40 DUP1 MLOAD DUP11 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1671 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 PUSH1 0x1 SWAP4 POP JUMPDEST POP POP POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x113D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 DUP2 AND SWAP2 AND EQ PUSH2 0xC2F JUMPI PUSH1 0xC DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 SWAP2 AND DUP3 MSTORE MLOAD PUSH32 0x600005B3559A025151F4A40F36D9939D94CF5194016895D4EF6362B211E4C3B5 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x154 JUMPI CALLVALUE ISZERO PUSH2 0x11D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x11ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 GT ISZERO PUSH2 0x11FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x186A0 DUP2 GT ISZERO PUSH2 0x120A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP5 SWAP1 SSTORE PUSH1 0x8 DUP4 SWAP1 SSTORE PUSH1 0x9 DUP3 SWAP1 SSTORE PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE DUP1 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x650BF5314BB5924368FFEBAF7DFFCFAA4A0F99C2AB08264C26BF0547F8C459E9 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0x154 JUMPI CALLVALUE ISZERO PUSH2 0x128B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59F DUP4 DUP4 PUSH2 0x1645 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP2 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT ISZERO PUSH2 0x1307 JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP2 DUP4 DUP3 LT ISZERO PUSH2 0x13A1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420656E6F75676820616C6C6F77616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x142A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420656E6F7567682062616C616E63650000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1434 DUP3 DUP6 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP5 GT DUP1 ISZERO PUSH2 0x147B JUMPI POP DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x14D3 JUMPI PUSH2 0x148A DUP2 DUP6 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x14B9 SWAP1 DUP6 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1671 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 SWAP1 SUB DUP4 GT ISZERO PUSH2 0x1544 JUMPI INVALID JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO PUSH2 0x155A JUMPI POP PUSH1 0x0 PUSH2 0x5A2 JUMP JUMPDEST DUP2 PUSH1 0x0 NOT DUP2 ISZERO ISZERO PUSH2 0x1567 JUMPI INVALID JUMPDEST DIV DUP4 GT ISZERO PUSH2 0x1571 JUMPI INVALID JUMPDEST POP MUL SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x1597 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x0 DUP4 GT DUP1 ISZERO PUSH2 0x15B0 JUMPI POP CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1605 JUMPI PUSH2 0x15BF DUP2 DUP5 PUSH2 0x12FB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x15EB SWAP1 DUP5 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND SWAP2 CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1671 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST ADDRESS SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP STOP 0xdd CALLCODE MSTORE 0xad SHL 0xe2 0xc8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 0xf5 GAS 0x4d 0xf5 0x23 0xb3 0xef LOG1 PUSH6 0x627A7A723058 KECCAK256 DIV CALLDATALOAD NUMBER PC 0xbb 0xaf 0xc6 RETURN 0x4d 0xd5 0xa6 0xa6 SWAP5 0x47 NOT 0xba MLOAD 0xdf 0xd6 MOD JUMP SAR LOG3 DUP1 0xdf DIFFICULTY PUSH8 0xA49FFF3DC6002900 ",
  "pcMap": {
    "0": {
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x132"
    },
    "12": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "18": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH29",
      "path": "0",
      "value": "0x100000000000000000000000000000000000000000000000000000000"
    },
    "48": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "50": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "51": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DIV",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "AND",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1502460"
    },
    "58": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DUP2",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "EQ",
      "path": "0"
    },
    "60": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A6"
    },
    "63": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "70": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "EQ",
      "path": "0"
    },
    "71": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AE"
    },
    "74": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "81": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "EQ",
      "path": "0"
    },
    "82": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x238"
    },
    "85": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x13AF4035"
    },
    "92": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "EQ",
      "path": "0"
    },
    "93": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x263"
    },
    "96": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "97": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "103": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "EQ",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x284"
    },
    "107": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "114": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "EQ",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AB"
    },
    "118": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "119": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "120": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "125": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "EQ",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C8"
    },
    "129": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "130": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "131": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x31C420D4"
    },
    "136": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "EQ",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F3"
    },
    "140": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "141": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "142": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4722B4A5"
    },
    "147": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "EQ",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FB"
    },
    "151": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "153": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6D1B229D"
    },
    "158": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "EQ",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x336"
    },
    "162": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "169": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "EQ",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x341"
    },
    "173": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70AE92D2"
    },
    "180": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "EQ",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x362"
    },
    "184": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7E1F2BB8"
    },
    "191": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "EQ",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x383"
    },
    "195": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "202": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "EQ",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38E"
    },
    "206": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x99A5D747"
    },
    "213": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "EQ",
      "path": "0"
    },
    "214": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A3"
    },
    "217": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "218": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9FEF0C01"
    },
    "224": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "EQ",
      "path": "0"
    },
    "225": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BB"
    },
    "228": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "229": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "230": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA42DCE80"
    },
    "235": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "EQ",
      "path": "0"
    },
    "236": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DC"
    },
    "239": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "240": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "241": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "246": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "EQ",
      "path": "0"
    },
    "247": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F0"
    },
    "250": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "251": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "252": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xADDD9CEF"
    },
    "257": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "EQ",
      "path": "0"
    },
    "258": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x407"
    },
    "261": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "262": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "263": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC97E8480"
    },
    "268": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "EQ",
      "path": "0"
    },
    "269": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41E"
    },
    "272": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "273": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "274": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCA5EB5E1"
    },
    "279": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "EQ",
      "path": "0"
    },
    "280": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x447"
    },
    "283": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "284": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "285": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD5BF2DBE"
    },
    "290": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "EQ",
      "path": "0"
    },
    "291": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x468"
    },
    "294": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "295": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "296": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "301": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "EQ",
      "path": "0"
    },
    "302": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47C"
    },
    "305": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "306": {
      "fn": null,
      "offset": [
        9148,
        25862
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "307": {
      "offset": [
        10059,
        10067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "309": {
      "fn": null,
      "offset": [
        10059,
        10067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "314": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "316": {
      "op": "EXP"
    },
    "317": {
      "op": "SUB"
    },
    "318": {
      "offset": [
        10059,
        10067
      ],
      "op": "AND",
      "path": "0"
    },
    "319": {
      "offset": [
        10059,
        10082
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "320": {
      "offset": [
        10055,
        11396
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "321": {
      "fn": null,
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "324": {
      "offset": [
        10055,
        11396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "325": {
      "offset": [
        10101,
        10110
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "326": {
      "offset": [
        10101,
        10115
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "327": {
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "330": {
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "331": {
      "fn": null,
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "333": {
      "fn": null,
      "offset": [
        10092,
        10116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "334": {
      "fn": null,
      "offset": [
        10092,
        10116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "335": {
      "fn": null,
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "336": {
      "fn": "MockEursToken.<fallback>",
      "offset": [
        11866,
        11875
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "338": {
      "fn": "MockEursToken.<fallback>",
      "offset": [
        11866,
        11875
      ],
      "op": "DUP1",
      "path": "0"
    },
    "339": {
      "fn": "MockEursToken.<fallback>",
      "offset": [
        11866,
        11875
      ],
      "op": "REVERT",
      "path": "0"
    },
    "340": {
      "offset": [
        10055,
        11396
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "341": {
      "offset": [
        10242,
        10252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "343": {
      "offset": [
        10235,
        10253
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "344": {
      "offset": [
        10314,
        10327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "346": {
      "offset": [
        10307,
        10328
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "347": {
      "offset": [
        10434,
        10438
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "349": {
      "offset": [
        10427,
        10439
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "350": {
      "offset": [
        10520,
        10532
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "351": {
      "offset": [
        10517,
        10518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "353": {
      "offset": [
        10509,
        10515
      ],
      "op": "DUP3",
      "path": "0"
    },
    "354": {
      "offset": [
        10495,
        10533
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "355": {
      "offset": [
        10653,
        10654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "357": {
      "offset": [
        10645,
        10651
      ],
      "op": "DUP2",
      "path": "0"
    },
    "358": {
      "offset": [
        10631,
        10643
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "359": {
      "offset": [
        10623,
        10629
      ],
      "op": "DUP4",
      "path": "0"
    },
    "360": {
      "offset": [
        10610,
        10621
      ],
      "op": "DUP6",
      "path": "0"
    },
    "361": {
      "offset": [
        10605,
        10608
      ],
      "op": "GAS",
      "path": "0"
    },
    "362": {
      "offset": [
        10591,
        10655
      ],
      "op": "DELEGATECALL",
      "path": "0"
    },
    "363": {
      "offset": [
        10737,
        10747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "365": {
      "offset": [
        10730,
        10748
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "366": {
      "offset": [
        10720,
        10728
      ],
      "op": "DUP5",
      "path": "0"
    },
    "367": {
      "offset": [
        10716,
        10749
      ],
      "op": "EQ",
      "path": "0"
    },
    "368": {
      "offset": [
        10763,
        10764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "370": {
      "offset": [
        10758,
        10767
      ],
      "op": "DUP2",
      "path": "0"
    },
    "371": {
      "fn": "MockEursToken.<fallback>",
      "offset": [
        10758,
        10767
      ],
      "op": "EQ",
      "path": "0"
    },
    "372": {
      "fn": "MockEursToken.<fallback>",
      "offset": [
        10758,
        10767
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17C"
    },
    "375": {
      "fn": "MockEursToken.<fallback>",
      "offset": [
        10758,
        10767
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "376": {
      "offset": [
        10827,
        10828
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "378": {
      "offset": [
        10824,
        10825
      ],
      "op": "DUP1",
      "path": "0"
    },
    "379": {
      "offset": [
        10816,
        10829
      ],
      "op": "REVERT",
      "path": "0"
    },
    "380": {
      "offset": [
        10758,
        10767
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "381": {
      "offset": [
        10709,
        10831
      ],
      "op": "POP",
      "path": "0"
    },
    "382": {
      "offset": [
        10949,
        10962
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "384": {
      "offset": [
        10942,
        10963
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "385": {
      "offset": [
        10929,
        10940
      ],
      "op": "DUP4",
      "path": "0"
    },
    "386": {
      "offset": [
        10925,
        10964
      ],
      "op": "EQ",
      "path": "0"
    },
    "387": {
      "offset": [
        10978,
        10979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "389": {
      "offset": [
        10973,
        10982
      ],
      "op": "DUP2",
      "path": "0"
    },
    "390": {
      "fn": "MockEursToken.<fallback>",
      "offset": [
        10973,
        10982
      ],
      "op": "EQ",
      "path": "0"
    },
    "391": {
      "fn": "MockEursToken.<fallback>",
      "offset": [
        10973,
        10982
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18F"
    },
    "394": {
      "fn": "MockEursToken.<fallback>",
      "offset": [
        10973,
        10982
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "395": {
      "offset": [
        11045,
        11046
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "397": {
      "offset": [
        11042,
        11043
      ],
      "op": "DUP1",
      "path": "0"
    },
    "398": {
      "offset": [
        11034,
        11047
      ],
      "op": "REVERT",
      "path": "0"
    },
    "399": {
      "offset": [
        10973,
        10982
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "400": {
      "offset": [
        10918,
        11049
      ],
      "op": "POP",
      "path": "0"
    },
    "401": {
      "offset": [
        11162,
        11176
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "402": {
      "offset": [
        11159,
        11160
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "404": {
      "offset": [
        11151,
        11157
      ],
      "op": "DUP4",
      "path": "0"
    },
    "405": {
      "offset": [
        11135,
        11177
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "406": {
      "offset": [
        11223,
        11229
      ],
      "op": "DUP1",
      "path": "0"
    },
    "407": {
      "offset": [
        11238,
        11280
      ],
      "op": "DUP1",
      "path": "0"
    },
    "408": {
      "fn": "MockEursToken.<fallback>",
      "offset": [
        11238,
        11280
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "409": {
      "fn": "MockEursToken.<fallback>",
      "offset": [
        11238,
        11280
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "412": {
      "fn": "MockEursToken.<fallback>",
      "offset": [
        11238,
        11280
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "413": {
      "offset": [
        11339,
        11353
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "414": {
      "offset": [
        11331,
        11337
      ],
      "op": "DUP4",
      "path": "0"
    },
    "415": {
      "offset": [
        11323,
        11354
      ],
      "op": "RETURN",
      "path": "0"
    },
    "416": {
      "offset": [
        11238,
        11280
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "417": {
      "offset": [
        11263,
        11277
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "418": {
      "offset": [
        11255,
        11261
      ],
      "op": "DUP4",
      "path": "0"
    },
    "419": {
      "offset": [
        11247,
        11278
      ],
      "op": "REVERT",
      "path": "0"
    },
    "420": {
      "offset": [
        10187,
        11390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "421": {
      "offset": [
        9148,
        25862
      ],
      "op": "STOP",
      "path": "0"
    },
    "422": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19441,
        19601
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "423": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19441,
        19601
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A4"
    },
    "426": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19441,
        19601
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A3"
    },
    "429": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19441,
        19601
      ],
      "op": "JUMP",
      "path": "0"
    },
    "430": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "431": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "432": {
      "op": "DUP1"
    },
    "433": {
      "op": "ISZERO"
    },
    "434": {
      "op": "PUSH2",
      "value": "0x1BA"
    },
    "437": {
      "op": "JUMPI"
    },
    "438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "440": {
      "op": "DUP1"
    },
    "441": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "REVERT",
      "path": "0"
    },
    "442": {
      "op": "JUMPDEST"
    },
    "443": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "POP",
      "path": "0"
    },
    "444": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C3"
    },
    "447": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51C"
    },
    "450": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "JUMP",
      "path": "0"
    },
    "451": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "452": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "454": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "DUP1",
      "path": "0"
    },
    "455": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "456": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "458": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "DUP1",
      "path": "0"
    },
    "459": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "DUP3",
      "path": "0"
    },
    "460": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "461": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "DUP4",
      "path": "0"
    },
    "462": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "463": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "DUP2",
      "path": "0"
    },
    "464": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "DUP4",
      "path": "0"
    },
    "465": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "ADD",
      "path": "0"
    },
    "466": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "467": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "DUP4",
      "path": "0"
    },
    "468": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "469": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "470": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "471": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "DUP4",
      "path": "0"
    },
    "472": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "473": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "474": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "DUP4",
      "path": "0"
    },
    "475": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "ADD",
      "path": "0"
    },
    "476": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "477": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "DUP6",
      "path": "0"
    },
    "478": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "ADD",
      "path": "0"
    },
    "479": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "480": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "DUP1",
      "path": "0"
    },
    "481": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "DUP4",
      "path": "0"
    },
    "482": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "DUP4",
      "path": "0"
    },
    "483": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "485": {
      "op": "JUMPDEST"
    },
    "486": {
      "op": "DUP4"
    },
    "487": {
      "op": "DUP2"
    },
    "488": {
      "op": "LT"
    },
    "489": {
      "op": "ISZERO"
    },
    "490": {
      "op": "PUSH2",
      "value": "0x1FD"
    },
    "493": {
      "op": "JUMPI"
    },
    "494": {
      "op": "DUP2"
    },
    "495": {
      "op": "DUP2"
    },
    "496": {
      "op": "ADD"
    },
    "497": {
      "op": "MLOAD"
    },
    "498": {
      "op": "DUP4"
    },
    "499": {
      "op": "DUP3"
    },
    "500": {
      "op": "ADD"
    },
    "501": {
      "op": "MSTORE"
    },
    "502": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "504": {
      "op": "ADD"
    },
    "505": {
      "op": "PUSH2",
      "value": "0x1E5"
    },
    "508": {
      "op": "JUMP"
    },
    "509": {
      "op": "JUMPDEST"
    },
    "510": {
      "op": "POP"
    },
    "511": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "POP",
      "path": "0"
    },
    "512": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "POP",
      "path": "0"
    },
    "513": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "POP",
      "path": "0"
    },
    "514": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "515": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "POP",
      "path": "0"
    },
    "516": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "517": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "DUP2",
      "path": "0"
    },
    "518": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "ADD",
      "path": "0"
    },
    "519": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "520": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "522": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "AND",
      "path": "0"
    },
    "523": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "DUP1",
      "path": "0"
    },
    "524": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "525": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22A"
    },
    "528": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "529": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "DUP1",
      "path": "0"
    },
    "530": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "DUP3",
      "path": "0"
    },
    "531": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "SUB",
      "path": "0"
    },
    "532": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "DUP1",
      "path": "0"
    },
    "533": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "534": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "536": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "DUP4",
      "path": "0"
    },
    "537": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "539": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "SUB",
      "path": "0"
    },
    "540": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "543": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "EXP",
      "path": "0"
    },
    "544": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "SUB",
      "path": "0"
    },
    "545": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "NOT",
      "path": "0"
    },
    "546": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "AND",
      "path": "0"
    },
    "547": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "DUP2",
      "path": "0"
    },
    "548": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "549": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "551": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "ADD",
      "path": "0"
    },
    "552": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "553": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "POP",
      "path": "0"
    },
    "554": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "555": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "POP",
      "path": "0"
    },
    "556": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "557": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "POP",
      "path": "0"
    },
    "558": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "POP",
      "path": "0"
    },
    "559": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "POP",
      "path": "0"
    },
    "560": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "562": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "563": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "DUP1",
      "path": "0"
    },
    "564": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "565": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "SUB",
      "path": "0"
    },
    "566": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "567": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "RETURN",
      "path": "0"
    },
    "568": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "569": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24F"
    },
    "572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "576": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "578": {
      "op": "EXP"
    },
    "579": {
      "op": "SUB"
    },
    "580": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "582": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "583": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "AND",
      "path": "0"
    },
    "584": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "586": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "587": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x575"
    },
    "590": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "JUMP",
      "path": "0"
    },
    "591": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "592": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "594": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "595": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "596": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "597": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "598": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "599": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "DUP3",
      "path": "0"
    },
    "600": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "601": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "602": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "603": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "604": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "605": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "SUB",
      "path": "0"
    },
    "606": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "608": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "ADD",
      "path": "0"
    },
    "609": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "610": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "RETURN",
      "path": "0"
    },
    "611": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19911,
        20020
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "612": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19911,
        20020
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "613": {
      "op": "DUP1"
    },
    "614": {
      "op": "ISZERO"
    },
    "615": {
      "op": "PUSH2",
      "value": "0x26F"
    },
    "618": {
      "op": "JUMPI"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "621": {
      "op": "DUP1"
    },
    "622": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MockEursToken.setOwner",
      "offset": [
        19911,
        20020
      ],
      "op": "REVERT",
      "path": "0"
    },
    "623": {
      "op": "JUMPDEST"
    },
    "624": {
      "op": "POP"
    },
    "625": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19911,
        20020
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A4"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "632": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "634": {
      "op": "EXP"
    },
    "635": {
      "op": "SUB"
    },
    "636": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19911,
        20020
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "638": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19911,
        20020
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "639": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19911,
        20020
      ],
      "op": "AND",
      "path": "0"
    },
    "640": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19911,
        20020
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A8"
    },
    "643": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19911,
        20020
      ],
      "op": "JUMP",
      "path": "0"
    },
    "644": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "645": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "646": {
      "op": "DUP1"
    },
    "647": {
      "op": "ISZERO"
    },
    "648": {
      "op": "PUSH2",
      "value": "0x290"
    },
    "651": {
      "op": "JUMPI"
    },
    "652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "654": {
      "op": "DUP1"
    },
    "655": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "REVERT",
      "path": "0"
    },
    "656": {
      "op": "JUMPDEST"
    },
    "657": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "POP",
      "path": "0"
    },
    "658": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x299"
    },
    "661": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5EE"
    },
    "664": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "JUMP",
      "path": "0"
    },
    "665": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "666": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "668": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "DUP1",
      "path": "0"
    },
    "669": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "670": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "671": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "DUP3",
      "path": "0"
    },
    "672": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "673": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "674": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "675": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "DUP2",
      "path": "0"
    },
    "676": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "677": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "SUB",
      "path": "0"
    },
    "678": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "680": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "ADD",
      "path": "0"
    },
    "681": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "682": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "RETURN",
      "path": "0"
    },
    "683": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14463,
        15315
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "684": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14463,
        15315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24F"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "689": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "691": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "693": {
      "op": "EXP"
    },
    "694": {
      "op": "SUB"
    },
    "695": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14463,
        15315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "697": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14463,
        15315
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "698": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14463,
        15315
      ],
      "op": "DUP2",
      "path": "0"
    },
    "699": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14463,
        15315
      ],
      "op": "AND",
      "path": "0"
    },
    "700": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14463,
        15315
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "701": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14463,
        15315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "703": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14463,
        15315
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "704": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14463,
        15315
      ],
      "op": "AND",
      "path": "0"
    },
    "705": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14463,
        15315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "707": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14463,
        15315
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "708": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14463,
        15315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x617"
    },
    "711": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14463,
        15315
      ],
      "op": "JUMP",
      "path": "0"
    },
    "712": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "713": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "714": {
      "op": "DUP1"
    },
    "715": {
      "op": "ISZERO"
    },
    "716": {
      "op": "PUSH2",
      "value": "0x2D4"
    },
    "719": {
      "op": "JUMPI"
    },
    "720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "722": {
      "op": "DUP1"
    },
    "723": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "REVERT",
      "path": "0"
    },
    "724": {
      "op": "JUMPDEST"
    },
    "725": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "POP",
      "path": "0"
    },
    "726": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DD"
    },
    "729": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7CD"
    },
    "732": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "JUMP",
      "path": "0"
    },
    "733": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "734": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "736": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "DUP1",
      "path": "0"
    },
    "737": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "738": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "740": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "741": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "742": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "AND",
      "path": "0"
    },
    "743": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "DUP3",
      "path": "0"
    },
    "744": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "745": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "746": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "747": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "DUP2",
      "path": "0"
    },
    "748": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "749": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "SUB",
      "path": "0"
    },
    "750": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "752": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "ADD",
      "path": "0"
    },
    "753": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "754": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "RETURN",
      "path": "0"
    },
    "755": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19648,
        19812
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "756": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19648,
        19812
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A4"
    },
    "759": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19648,
        19812
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F5"
    },
    "762": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19648,
        19812
      ],
      "op": "JUMP",
      "path": "0"
    },
    "763": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "764": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "765": {
      "op": "DUP1"
    },
    "766": {
      "op": "ISZERO"
    },
    "767": {
      "op": "PUSH2",
      "value": "0x307"
    },
    "770": {
      "op": "JUMPI"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "773": {
      "op": "DUP1"
    },
    "774": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "REVERT",
      "path": "0"
    },
    "775": {
      "op": "JUMPDEST"
    },
    "776": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "POP",
      "path": "0"
    },
    "777": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x310"
    },
    "780": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86C"
    },
    "783": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "JUMP",
      "path": "0"
    },
    "784": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "785": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "787": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "DUP1",
      "path": "0"
    },
    "788": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "789": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "790": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "DUP6",
      "path": "0"
    },
    "791": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "792": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "794": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "DUP6",
      "path": "0"
    },
    "795": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "ADD",
      "path": "0"
    },
    "796": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "797": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "798": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "799": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "800": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "DUP4",
      "path": "0"
    },
    "801": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "DUP4",
      "path": "0"
    },
    "802": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "ADD",
      "path": "0"
    },
    "803": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "804": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "805": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "806": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "807": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "809": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "DUP4",
      "path": "0"
    },
    "810": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "ADD",
      "path": "0"
    },
    "811": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "812": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "813": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "814": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "DUP2",
      "path": "0"
    },
    "815": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "816": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "SUB",
      "path": "0"
    },
    "817": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "819": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "ADD",
      "path": "0"
    },
    "820": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "821": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "RETURN",
      "path": "0"
    },
    "822": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        18955,
        19396
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "823": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        18955,
        19396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24F"
    },
    "826": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        18955,
        19396
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "828": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        18955,
        19396
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "829": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        18955,
        19396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A9"
    },
    "832": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        18955,
        19396
      ],
      "op": "JUMP",
      "path": "0"
    },
    "833": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        12917,
        13057
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "834": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        12917,
        13057
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "835": {
      "op": "DUP1"
    },
    "836": {
      "op": "ISZERO"
    },
    "837": {
      "op": "PUSH2",
      "value": "0x34D"
    },
    "840": {
      "op": "JUMPI"
    },
    "841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "843": {
      "op": "DUP1"
    },
    "844": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MockEursToken.balanceOf",
      "offset": [
        12917,
        13057
      ],
      "op": "REVERT",
      "path": "0"
    },
    "845": {
      "op": "JUMPDEST"
    },
    "846": {
      "op": "POP"
    },
    "847": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        12917,
        13057
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x299"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "856": {
      "op": "EXP"
    },
    "857": {
      "op": "SUB"
    },
    "858": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        12917,
        13057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "860": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        12917,
        13057
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "861": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        12917,
        13057
      ],
      "op": "AND",
      "path": "0"
    },
    "862": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        12917,
        13057
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x978"
    },
    "865": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        12917,
        13057
      ],
      "op": "JUMP",
      "path": "0"
    },
    "866": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20567,
        20674
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "867": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20567,
        20674
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "868": {
      "op": "DUP1"
    },
    "869": {
      "op": "ISZERO"
    },
    "870": {
      "op": "PUSH2",
      "value": "0x36E"
    },
    "873": {
      "op": "JUMPI"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "876": {
      "op": "DUP1"
    },
    "877": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MockEursToken.nonce",
      "offset": [
        20567,
        20674
      ],
      "op": "REVERT",
      "path": "0"
    },
    "878": {
      "op": "JUMPDEST"
    },
    "879": {
      "op": "POP"
    },
    "880": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20567,
        20674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x299"
    },
    "883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "887": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "889": {
      "op": "EXP"
    },
    "890": {
      "op": "SUB"
    },
    "891": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20567,
        20674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "893": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20567,
        20674
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "894": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20567,
        20674
      ],
      "op": "AND",
      "path": "0"
    },
    "895": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20567,
        20674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A8"
    },
    "898": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20567,
        20674
      ],
      "op": "JUMP",
      "path": "0"
    },
    "899": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18411,
        18872
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "900": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18411,
        18872
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24F"
    },
    "903": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18411,
        18872
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "905": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18411,
        18872
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "906": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18411,
        18872
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E7"
    },
    "909": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18411,
        18872
      ],
      "op": "JUMP",
      "path": "0"
    },
    "910": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12166,
        12250
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "911": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12166,
        12250
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "912": {
      "op": "DUP1"
    },
    "913": {
      "op": "ISZERO"
    },
    "914": {
      "op": "PUSH2",
      "value": "0x39A"
    },
    "917": {
      "op": "JUMPI"
    },
    "918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "920": {
      "op": "DUP1"
    },
    "921": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MockEursToken.symbol",
      "offset": [
        12166,
        12250
      ],
      "op": "REVERT",
      "path": "0"
    },
    "922": {
      "op": "JUMPDEST"
    },
    "923": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12166,
        12250
      ],
      "op": "POP",
      "path": "0"
    },
    "924": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12166,
        12250
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C3"
    },
    "927": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12166,
        12250
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA8"
    },
    "930": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12166,
        12250
      ],
      "op": "JUMP",
      "path": "0"
    },
    "931": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22112,
        22467
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "932": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22112,
        22467
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "933": {
      "op": "DUP1"
    },
    "934": {
      "op": "ISZERO"
    },
    "935": {
      "op": "PUSH2",
      "value": "0x3AF"
    },
    "938": {
      "op": "JUMPI"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "941": {
      "op": "DUP1"
    },
    "942": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22112,
        22467
      ],
      "op": "REVERT",
      "path": "0"
    },
    "943": {
      "op": "JUMPDEST"
    },
    "944": {
      "op": "POP"
    },
    "945": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22112,
        22467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x299"
    },
    "948": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22112,
        22467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "950": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22112,
        22467
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "951": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22112,
        22467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB02"
    },
    "954": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22112,
        22467
      ],
      "op": "JUMP",
      "path": "0"
    },
    "955": {
      "fn": "MockEursToken.flags",
      "offset": [
        22899,
        23016
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "956": {
      "fn": "MockEursToken.flags",
      "offset": [
        22899,
        23016
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "957": {
      "op": "DUP1"
    },
    "958": {
      "op": "ISZERO"
    },
    "959": {
      "op": "PUSH2",
      "value": "0x3C7"
    },
    "962": {
      "op": "JUMPI"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "965": {
      "op": "DUP1"
    },
    "966": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MockEursToken.flags",
      "offset": [
        22899,
        23016
      ],
      "op": "REVERT",
      "path": "0"
    },
    "967": {
      "op": "JUMPDEST"
    },
    "968": {
      "op": "POP"
    },
    "969": {
      "fn": "MockEursToken.flags",
      "offset": [
        22899,
        23016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x299"
    },
    "972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "978": {
      "op": "EXP"
    },
    "979": {
      "op": "SUB"
    },
    "980": {
      "fn": "MockEursToken.flags",
      "offset": [
        22899,
        23016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "982": {
      "fn": "MockEursToken.flags",
      "offset": [
        22899,
        23016
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "983": {
      "fn": "MockEursToken.flags",
      "offset": [
        22899,
        23016
      ],
      "op": "AND",
      "path": "0"
    },
    "984": {
      "fn": "MockEursToken.flags",
      "offset": [
        22899,
        23016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB93"
    },
    "987": {
      "fn": "MockEursToken.flags",
      "offset": [
        22899,
        23016
      ],
      "op": "JUMP",
      "path": "0"
    },
    "988": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20127,
        20286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "989": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20127,
        20286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A4"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "998": {
      "op": "EXP"
    },
    "999": {
      "op": "SUB"
    },
    "1000": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20127,
        20286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1002": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20127,
        20286
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1003": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20127,
        20286
      ],
      "op": "AND",
      "path": "0"
    },
    "1004": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20127,
        20286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBD2"
    },
    "1007": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20127,
        20286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1008": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13367,
        14075
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1009": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13367,
        14075
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24F"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1018": {
      "op": "EXP"
    },
    "1019": {
      "op": "SUB"
    },
    "1020": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13367,
        14075
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1022": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13367,
        14075
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1023": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13367,
        14075
      ],
      "op": "AND",
      "path": "0"
    },
    "1024": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13367,
        14075
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1026": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13367,
        14075
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1027": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13367,
        14075
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC32"
    },
    "1030": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13367,
        14075
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1031": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22600,
        22761
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1032": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22600,
        22761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A4"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1041": {
      "op": "EXP"
    },
    "1042": {
      "op": "SUB"
    },
    "1043": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22600,
        22761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1045": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22600,
        22761
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1046": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22600,
        22761
      ],
      "op": "AND",
      "path": "0"
    },
    "1047": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22600,
        22761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1049": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22600,
        22761
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1050": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22600,
        22761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD64"
    },
    "1053": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22600,
        22761
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1054": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1055": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24F"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1064": {
      "op": "EXP"
    },
    "1065": {
      "op": "SUB"
    },
    "1066": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1068": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1069": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "AND",
      "path": "0"
    },
    "1070": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1072": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1073": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "1075": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1076": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "1078": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1079": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1081": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x84"
    },
    "1083": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1084": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "AND",
      "path": "0"
    },
    "1085": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA4"
    },
    "1087": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1088": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC4"
    },
    "1090": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1091": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDB5"
    },
    "1094": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1095": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23288,
        23473
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1096": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23288,
        23473
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1097": {
      "op": "DUP1"
    },
    "1098": {
      "op": "ISZERO"
    },
    "1099": {
      "op": "PUSH2",
      "value": "0x453"
    },
    "1102": {
      "op": "JUMPI"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1105": {
      "op": "DUP1"
    },
    "1106": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23288,
        23473
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1107": {
      "op": "JUMPDEST"
    },
    "1108": {
      "op": "POP"
    },
    "1109": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23288,
        23473
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A4"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1118": {
      "op": "EXP"
    },
    "1119": {
      "op": "SUB"
    },
    "1120": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23288,
        23473
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1122": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23288,
        23473
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1123": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23288,
        23473
      ],
      "op": "AND",
      "path": "0"
    },
    "1124": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23288,
        23473
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1126"
    },
    "1127": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23288,
        23473
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1128": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        20952,
        21517
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1129": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        20952,
        21517
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A4"
    },
    "1132": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        20952,
        21517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1134": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        20952,
        21517
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1135": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        20952,
        21517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1137": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        20952,
        21517
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1138": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        20952,
        21517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "1140": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        20952,
        21517
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1141": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        20952,
        21517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "1143": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        20952,
        21517
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1144": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        20952,
        21517
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11B9"
    },
    "1147": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        20952,
        21517
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1148": {
      "fn": "MockEursToken.allowance",
      "offset": [
        16255,
        16423
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1149": {
      "fn": "MockEursToken.allowance",
      "offset": [
        16255,
        16423
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1150": {
      "op": "DUP1"
    },
    "1151": {
      "op": "ISZERO"
    },
    "1152": {
      "op": "PUSH2",
      "value": "0x488"
    },
    "1155": {
      "op": "JUMPI"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1158": {
      "op": "DUP1"
    },
    "1159": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MockEursToken.allowance",
      "offset": [
        16255,
        16423
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1160": {
      "op": "JUMPDEST"
    },
    "1161": {
      "op": "POP"
    },
    "1162": {
      "fn": "MockEursToken.allowance",
      "offset": [
        16255,
        16423
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x299"
    },
    "1165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1171": {
      "op": "EXP"
    },
    "1172": {
      "op": "SUB"
    },
    "1173": {
      "fn": "MockEursToken.allowance",
      "offset": [
        16255,
        16423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1175": {
      "fn": "MockEursToken.allowance",
      "offset": [
        16255,
        16423
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1176": {
      "fn": "MockEursToken.allowance",
      "offset": [
        16255,
        16423
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1177": {
      "fn": "MockEursToken.allowance",
      "offset": [
        16255,
        16423
      ],
      "op": "AND",
      "path": "0"
    },
    "1178": {
      "fn": "MockEursToken.allowance",
      "offset": [
        16255,
        16423
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1179": {
      "fn": "MockEursToken.allowance",
      "offset": [
        16255,
        16423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1181": {
      "fn": "MockEursToken.allowance",
      "offset": [
        16255,
        16423
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1182": {
      "fn": "MockEursToken.allowance",
      "offset": [
        16255,
        16423
      ],
      "op": "AND",
      "path": "0"
    },
    "1183": {
      "fn": "MockEursToken.allowance",
      "offset": [
        16255,
        16423
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x126B"
    },
    "1186": {
      "fn": "MockEursToken.allowance",
      "offset": [
        16255,
        16423
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1187": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19441,
        19601
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1188": {
      "offset": [
        10059,
        10067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "1190": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        10059,
        10067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1197": {
      "op": "EXP"
    },
    "1198": {
      "op": "SUB"
    },
    "1199": {
      "offset": [
        10059,
        10067
      ],
      "op": "AND",
      "path": "0"
    },
    "1200": {
      "offset": [
        10059,
        10082
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1201": {
      "offset": [
        10055,
        11396
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1202": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "1205": {
      "offset": [
        10055,
        11396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1206": {
      "offset": [
        10101,
        10110
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1207": {
      "offset": [
        10101,
        10115
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1208": {
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C0"
    },
    "1211": {
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1212": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1214": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        10092,
        10116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1215": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        10092,
        10116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1216": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1217": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19525,
        19530
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x2"
    },
    "1219": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19525,
        19530
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1226": {
      "op": "EXP"
    },
    "1227": {
      "op": "SUB"
    },
    "1228": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19525,
        19530
      ],
      "op": "AND",
      "path": "0"
    },
    "1229": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19511,
        19521
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1230": {
      "branch": 110,
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19511,
        19530
      ],
      "op": "EQ",
      "path": "0"
    },
    "1231": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19502,
        19531
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D7"
    },
    "1234": {
      "branch": 110,
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19502,
        19531
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1235": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19502,
        19531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1237": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19502,
        19531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1238": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19502,
        19531
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1239": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19502,
        19531
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1240": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19543,
        19549
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1242": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19543,
        19549
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1243": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19543,
        19549
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1245": {
      "branch": 111,
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19543,
        19549
      ],
      "op": "AND",
      "path": "0"
    },
    "1246": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19542,
        19549
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1247": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19538,
        19597
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1248": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19538,
        19597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51A"
    },
    "1251": {
      "branch": 111,
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19538,
        19597
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1252": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19559,
        19565
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x5"
    },
    "1254": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19559,
        19572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1255": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19559,
        19572
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1258": {
      "op": "NOT"
    },
    "1259": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19559,
        19572
      ],
      "op": "AND",
      "path": "0"
    },
    "1260": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19568,
        19572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1262": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19559,
        19572
      ],
      "op": "OR",
      "path": "0"
    },
    "1263": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19559,
        19572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1264": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19559,
        19572
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1265": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19581,
        19590
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x40"
    },
    "1267": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19581,
        19590
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1268": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19581,
        19590
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x615ACBAEDE366D76A8B8CB2A9ADA6A71495F0786513D71AA97AAF0C3910B78DE"
    },
    "1301": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19581,
        19590
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1302": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19559,
        19565
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1304": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19559,
        19565
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1305": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19581,
        19590
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1306": {
      "fn": "MockEursToken.freezeTransfers",
      "offset": [
        19538,
        19597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1307": {
      "fn": "MockEursToken.freezeTransfers",
      "jump": "o",
      "offset": [
        19441,
        19601
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1308": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1309": {
      "offset": [
        10059,
        10067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "1311": {
      "fn": "MockEursToken.name",
      "offset": [
        10059,
        10067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1312": {
      "fn": "MockEursToken.name",
      "offset": [
        12037,
        12043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1314": {
      "fn": "MockEursToken.name",
      "offset": [
        12037,
        12043
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1321": {
      "op": "EXP"
    },
    "1322": {
      "op": "SUB"
    },
    "1323": {
      "offset": [
        10059,
        10067
      ],
      "op": "AND",
      "path": "0"
    },
    "1324": {
      "offset": [
        10059,
        10082
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1325": {
      "offset": [
        10055,
        11396
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1326": {
      "fn": "MockEursToken.name",
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "1329": {
      "offset": [
        10055,
        11396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1330": {
      "offset": [
        10101,
        10110
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1331": {
      "offset": [
        10101,
        10115
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1332": {
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x53C"
    },
    "1335": {
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1336": {
      "fn": "MockEursToken.name",
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1338": {
      "fn": "MockEursToken.name",
      "offset": [
        10092,
        10116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1339": {
      "fn": "MockEursToken.name",
      "offset": [
        10092,
        10116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1340": {
      "fn": "MockEursToken.name",
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1341": {
      "op": "POP"
    },
    "1342": {
      "fn": "MockEursToken.name",
      "offset": [
        12051,
        12077
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x40"
    },
    "1344": {
      "fn": "MockEursToken.name",
      "offset": [
        12051,
        12077
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1345": {
      "fn": "MockEursToken.name",
      "offset": [
        12051,
        12077
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1346": {
      "fn": "MockEursToken.name",
      "offset": [
        12051,
        12077
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1347": {
      "fn": "MockEursToken.name",
      "offset": [
        12051,
        12077
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1348": {
      "fn": "MockEursToken.name",
      "offset": [
        12051,
        12077
      ],
      "op": "ADD",
      "path": "0"
    },
    "1349": {
      "fn": "MockEursToken.name",
      "offset": [
        12051,
        12077
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1350": {
      "fn": "MockEursToken.name",
      "offset": [
        12051,
        12077
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1351": {
      "fn": "MockEursToken.name",
      "offset": [
        12051,
        12077
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1352": {
      "fn": "MockEursToken.name",
      "offset": [
        12051,
        12077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "1354": {
      "fn": "MockEursToken.name",
      "offset": [
        12051,
        12077
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1355": {
      "fn": "MockEursToken.name",
      "offset": [
        12051,
        12077
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1356": {
      "fn": "MockEursToken.name",
      "offset": [
        12051,
        12077
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x535441534953204555525320546F6B656E000000000000000000000000000000"
    },
    "1389": {
      "fn": "MockEursToken.name",
      "offset": [
        12051,
        12077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1391": {
      "fn": "MockEursToken.name",
      "offset": [
        12051,
        12077
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1392": {
      "fn": "MockEursToken.name",
      "offset": [
        12051,
        12077
      ],
      "op": "ADD",
      "path": "0"
    },
    "1393": {
      "fn": "MockEursToken.name",
      "offset": [
        12051,
        12077
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1394": {
      "offset": [
        10187,
        11390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1395": {
      "fn": "MockEursToken.name",
      "offset": [
        11987,
        12082
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1396": {
      "fn": "MockEursToken.name",
      "jump": "o",
      "offset": [
        11987,
        12082
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1397": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1398": {
      "offset": [
        10059,
        10067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "1400": {
      "fn": "MockEursToken.approve",
      "offset": [
        10059,
        10067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1401": {
      "fn": "MockEursToken.approve",
      "offset": [
        15745,
        15757
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1403": {
      "fn": "MockEursToken.approve",
      "offset": [
        15745,
        15757
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1410": {
      "op": "EXP"
    },
    "1411": {
      "op": "SUB"
    },
    "1412": {
      "offset": [
        10059,
        10067
      ],
      "op": "AND",
      "path": "0"
    },
    "1413": {
      "offset": [
        10059,
        10082
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1414": {
      "offset": [
        10055,
        11396
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1415": {
      "fn": "MockEursToken.approve",
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "1418": {
      "offset": [
        10055,
        11396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1419": {
      "offset": [
        10101,
        10110
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1420": {
      "offset": [
        10101,
        10115
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1421": {
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x595"
    },
    "1424": {
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1425": {
      "fn": "MockEursToken.approve",
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1427": {
      "fn": "MockEursToken.approve",
      "offset": [
        10092,
        10116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1428": {
      "fn": "MockEursToken.approve",
      "offset": [
        10092,
        10116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1429": {
      "fn": "MockEursToken.approve",
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1430": {
      "fn": "MockEursToken.approve",
      "offset": [
        15772,
        15812
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x59F"
    },
    "1433": {
      "fn": "MockEursToken.approve",
      "offset": [
        15795,
        15803
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1434": {
      "fn": "MockEursToken.approve",
      "offset": [
        15805,
        15811
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1435": {
      "fn": "MockEursToken.approve",
      "offset": [
        15772,
        15793
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1295"
    },
    "1438": {
      "fn": "MockEursToken.approve",
      "jump": "i",
      "offset": [
        15772,
        15812
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1439": {
      "fn": "MockEursToken.approve",
      "offset": [
        15772,
        15812
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1440": {
      "fn": "MockEursToken.approve",
      "offset": [
        15765,
        15812
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1441": {
      "fn": "MockEursToken.approve",
      "offset": [
        15765,
        15812
      ],
      "op": "POP",
      "path": "0"
    },
    "1442": {
      "offset": [
        10187,
        11390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1443": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1444": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1445": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "POP",
      "path": "0"
    },
    "1446": {
      "fn": "MockEursToken.approve",
      "offset": [
        15655,
        15817
      ],
      "op": "POP",
      "path": "0"
    },
    "1447": {
      "fn": "MockEursToken.approve",
      "jump": "o",
      "offset": [
        15655,
        15817
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1448": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19911,
        20020
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1449": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19985,
        19990
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x2"
    },
    "1451": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19985,
        19990
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1458": {
      "op": "EXP"
    },
    "1459": {
      "op": "SUB"
    },
    "1460": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19985,
        19990
      ],
      "op": "AND",
      "path": "0"
    },
    "1461": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19971,
        19981
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1462": {
      "branch": 112,
      "fn": "MockEursToken.setOwner",
      "offset": [
        19971,
        19990
      ],
      "op": "EQ",
      "path": "0"
    },
    "1463": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19962,
        19991
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5BF"
    },
    "1466": {
      "branch": 112,
      "fn": "MockEursToken.setOwner",
      "offset": [
        19962,
        19991
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1467": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19962,
        19991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1469": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19962,
        19991
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1470": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19962,
        19991
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1471": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19962,
        19991
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1472": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19998,
        20003
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x2"
    },
    "1474": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19998,
        20015
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1475": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19998,
        20015
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1476": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1497": {
      "op": "NOT"
    },
    "1498": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19998,
        20015
      ],
      "op": "AND",
      "path": "0"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1505": {
      "op": "EXP"
    },
    "1506": {
      "op": "SUB"
    },
    "1507": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19998,
        20015
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1508": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19998,
        20015
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1509": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19998,
        20015
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1510": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19998,
        20015
      ],
      "op": "AND",
      "path": "0"
    },
    "1511": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19998,
        20015
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1512": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19998,
        20015
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1513": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19998,
        20015
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1514": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19998,
        20015
      ],
      "op": "OR",
      "path": "0"
    },
    "1515": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19998,
        20015
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1516": {
      "fn": "MockEursToken.setOwner",
      "offset": [
        19998,
        20015
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1517": {
      "fn": "MockEursToken.setOwner",
      "jump": "o",
      "offset": [
        19911,
        20020
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1518": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12560,
        12655
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1519": {
      "offset": [
        10059,
        10067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "1521": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        10059,
        10067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1522": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12617,
        12624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1524": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12617,
        12624
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1531": {
      "op": "EXP"
    },
    "1532": {
      "op": "SUB"
    },
    "1533": {
      "offset": [
        10059,
        10067
      ],
      "op": "AND",
      "path": "0"
    },
    "1534": {
      "offset": [
        10059,
        10082
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1535": {
      "offset": [
        10055,
        11396
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1536": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "1539": {
      "offset": [
        10055,
        11396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1540": {
      "offset": [
        10101,
        10110
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1541": {
      "offset": [
        10101,
        10115
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1542": {
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x60E"
    },
    "1545": {
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1546": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1548": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        10092,
        10116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1549": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        10092,
        10116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1550": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1551": {
      "op": "POP"
    },
    "1552": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12639,
        12650
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x4"
    },
    "1554": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        12639,
        12650
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1555": {
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x572"
    },
    "1558": {
      "fn": "MockEursToken.totalSupply",
      "offset": [
        10055,
        11396
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1559": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14463,
        15315
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1560": {
      "offset": [
        10059,
        10067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "1562": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        10059,
        10067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1563": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14568,
        14572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1565": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14568,
        14572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1566": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14568,
        14572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1567": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14568,
        14572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1574": {
      "op": "EXP"
    },
    "1575": {
      "op": "SUB"
    },
    "1576": {
      "offset": [
        10059,
        10067
      ],
      "op": "AND",
      "path": "0"
    },
    "1577": {
      "offset": [
        10059,
        10082
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1578": {
      "offset": [
        10055,
        11396
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1579": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "1582": {
      "offset": [
        10055,
        11396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1583": {
      "offset": [
        10101,
        10110
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1584": {
      "offset": [
        10101,
        10115
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1585": {
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x639"
    },
    "1588": {
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1589": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1591": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        10092,
        10116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1592": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        10092,
        10116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1593": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1594": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14584,
        14590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1596": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14584,
        14590
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1597": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14584,
        14590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1599": {
      "branch": 113,
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14584,
        14590
      ],
      "op": "AND",
      "path": "0"
    },
    "1600": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14580,
        15311
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1601": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14580,
        15311
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64D"
    },
    "1604": {
      "branch": 113,
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14580,
        15311
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1605": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14599,
        14604
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x0"
    },
    "1607": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14592,
        14604
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1608": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14592,
        14604
      ],
      "op": "POP",
      "path": "0"
    },
    "1609": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14592,
        14604
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C5"
    },
    "1612": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14592,
        14604
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1613": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14580,
        15311
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1620": {
      "op": "EXP"
    },
    "1621": {
      "op": "SUB"
    },
    "1622": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14650,
        14668
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1623": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14650,
        14668
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1624": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14650,
        14668
      ],
      "op": "AND",
      "path": "0"
    },
    "1625": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14650,
        14668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1627": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14650,
        14668
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1628": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14650,
        14668
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1629": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14650,
        14668
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1630": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14650,
        14662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "1632": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14650,
        14668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1634": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14650,
        14668
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1635": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14650,
        14668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1637": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14650,
        14668
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1638": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14650,
        14668
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1639": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14650,
        14668
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1640": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14650,
        14668
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1641": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14627,
        14647
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1642": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14627,
        14647
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1643": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14627,
        14647
      ],
      "op": "AND",
      "path": "0"
    },
    "1644": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14627,
        14647
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1645": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14627,
        14647
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1646": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14627,
        14647
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1647": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14627,
        14647
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1648": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14627,
        14647
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1649": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14627,
        14668
      ],
      "op": "OR",
      "path": "0"
    },
    "1650": {
      "offset": [
        9907,
        9911
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1652": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14626,
        14687
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1653": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14626,
        14687
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1654": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14626,
        14687
      ],
      "op": "AND",
      "path": "0"
    },
    "1655": {
      "branch": 114,
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14626,
        14712
      ],
      "op": "EQ",
      "path": "0"
    },
    "1656": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14615,
        15311
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1657": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14615,
        15311
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x685"
    },
    "1660": {
      "branch": 114,
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14615,
        15311
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1661": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14727,
        14732
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x0"
    },
    "1663": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14720,
        14732
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1664": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14720,
        14732
      ],
      "op": "POP",
      "path": "0"
    },
    "1665": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14720,
        14732
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C5"
    },
    "1668": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14720,
        14732
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1669": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14615,
        15311
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1676": {
      "op": "EXP"
    },
    "1677": {
      "op": "SUB"
    },
    "1678": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14797,
        14815
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1679": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14797,
        14815
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1680": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14797,
        14815
      ],
      "op": "AND",
      "path": "0"
    },
    "1681": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14797,
        14815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1683": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14797,
        14815
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1684": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14797,
        14815
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1685": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14797,
        14815
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1686": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14797,
        14809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "1688": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14797,
        14815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1690": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14797,
        14815
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1691": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14797,
        14815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1693": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14797,
        14815
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1694": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14797,
        14815
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1695": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14797,
        14815
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1696": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14797,
        14815
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1697": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14774,
        14794
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1698": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14774,
        14794
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1699": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14774,
        14794
      ],
      "op": "AND",
      "path": "0"
    },
    "1700": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14774,
        14794
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1701": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14774,
        14794
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1702": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14774,
        14794
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1703": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14774,
        14794
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1704": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14774,
        14794
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1705": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14774,
        14815
      ],
      "op": "OR",
      "path": "0"
    },
    "1706": {
      "offset": [
        10019,
        10023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1708": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14773,
        14832
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1709": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14773,
        14832
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1710": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14773,
        14832
      ],
      "op": "AND",
      "path": "0"
    },
    "1711": {
      "branch": 115,
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14773,
        14849
      ],
      "op": "EQ",
      "path": "0"
    },
    "1712": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14773,
        14897
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C1"
    },
    "1715": {
      "branch": 115,
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14773,
        14897
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1716": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14876,
        14897
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BC"
    },
    "1719": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14890,
        14896
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1720": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14876,
        14888
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB02"
    },
    "1723": {
      "fn": "MockEursToken.transferFrom",
      "jump": "i",
      "offset": [
        14876,
        14897
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1724": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14876,
        14897
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1725": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14773,
        14897
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C4"
    },
    "1728": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14773,
        14897
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1729": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14773,
        14897
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1730": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14862,
        14863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1732": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14773,
        14897
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1739": {
      "op": "EXP"
    },
    "1740": {
      "op": "SUB"
    },
    "1741": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14920,
        14938
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1742": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14920,
        14938
      ],
      "op": "AND",
      "path": "0"
    },
    "1743": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14920,
        14938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1745": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14920,
        14938
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1746": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14920,
        14938
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1747": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14920,
        14938
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1748": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14920,
        14930
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1750": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14920,
        14938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1752": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14920,
        14938
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1753": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14920,
        14938
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1754": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14920,
        14938
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1755": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14920,
        14938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1757": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14920,
        14938
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1758": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14920,
        14938
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1759": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14920,
        14938
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1760": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14939,
        14949
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1761": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14920,
        14950
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1762": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14920,
        14950
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1763": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14920,
        14950
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1764": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14920,
        14950
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1765": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14920,
        14950
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1766": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14920,
        14950
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1767": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14920,
        14950
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1768": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14920,
        14950
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1769": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14751,
        14897
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1770": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14751,
        14897
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1771": {
      "op": "POP"
    },
    "1772": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14910,
        14950
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1773": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14910,
        14950
      ],
      "op": "GT",
      "path": "0"
    },
    "1774": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14910,
        14950
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1775": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14910,
        14950
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1776": {
      "branch": 116,
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14910,
        14950
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1777": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14910,
        15019
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x727"
    },
    "1780": {
      "branch": 116,
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14910,
        15019
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1781": {
      "op": "POP"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1788": {
      "op": "EXP"
    },
    "1789": {
      "op": "SUB"
    },
    "1790": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14980,
        14998
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1791": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14980,
        14998
      ],
      "op": "AND",
      "path": "0"
    },
    "1792": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14980,
        14998
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1794": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14980,
        14998
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1795": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14980,
        14998
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1796": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14980,
        14998
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1797": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14980,
        14990
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1799": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14980,
        14998
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1801": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14980,
        14998
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1802": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14980,
        14998
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1803": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14980,
        14998
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1804": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14980,
        14998
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1806": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14980,
        14998
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1807": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14980,
        14998
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1808": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14980,
        14998
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1809": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14999,
        15009
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1810": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14980,
        15010
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1811": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14980,
        15010
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1812": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14980,
        15010
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1813": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14980,
        15010
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1814": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14980,
        15010
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1815": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14980,
        15010
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1816": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14980,
        15010
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1817": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14980,
        15010
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1818": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14971,
        15019
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x723"
    },
    "1821": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14971,
        15019
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1822": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15012,
        15018
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1823": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14971,
        14978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12FB"
    },
    "1826": {
      "fn": "MockEursToken.transferFrom",
      "jump": "i",
      "offset": [
        14971,
        15019
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1827": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14971,
        15019
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1828": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14964,
        14967
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1829": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14964,
        15019
      ],
      "op": "GT",
      "path": "0"
    },
    "1830": {
      "branch": 117,
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14964,
        15019
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1831": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14910,
        15019
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1832": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14910,
        15059
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1833": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14910,
        15059
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1834": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14910,
        15059
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x74B"
    },
    "1837": {
      "branch": 117,
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14910,
        15059
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1838": {
      "op": "POP"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1845": {
      "op": "EXP"
    },
    "1846": {
      "op": "SUB"
    },
    "1847": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15043,
        15059
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1848": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15043,
        15059
      ],
      "op": "AND",
      "path": "0"
    },
    "1849": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15043,
        15051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1851": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15043,
        15059
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1852": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15043,
        15059
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1853": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15043,
        15059
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1854": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15043,
        15059
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1856": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15043,
        15059
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1857": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15043,
        15059
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1858": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15043,
        15059
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1859": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15043,
        15059
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1861": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15043,
        15059
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1862": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15043,
        15059
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1863": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15043,
        15059
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1864": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15033,
        15059
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1865": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15033,
        15059
      ],
      "op": "GT",
      "path": "0"
    },
    "1866": {
      "branch": 118,
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15033,
        15059
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1867": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14910,
        15059
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1868": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14910,
        15114
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1869": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14910,
        15114
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1870": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14910,
        15114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x779"
    },
    "1873": {
      "branch": 118,
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14910,
        15114
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1874": {
      "op": "POP"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1881": {
      "op": "EXP"
    },
    "1882": {
      "op": "SUB"
    },
    "1883": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15089,
        15105
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1884": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15089,
        15105
      ],
      "op": "AND",
      "path": "0"
    },
    "1885": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15089,
        15097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1887": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15089,
        15105
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1888": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15089,
        15105
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1889": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15089,
        15105
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1890": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15089,
        15105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1892": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15089,
        15105
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1893": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15089,
        15105
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1894": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15089,
        15105
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1895": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15089,
        15105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1897": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15089,
        15105
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1898": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15089,
        15105
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1899": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15089,
        15105
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1900": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15080,
        15114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x775"
    },
    "1903": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15080,
        15114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1904": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15107,
        15113
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1905": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15080,
        15087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12FB"
    },
    "1908": {
      "fn": "MockEursToken.transferFrom",
      "jump": "i",
      "offset": [
        15080,
        15114
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1909": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15080,
        15114
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1910": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15073,
        15076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1911": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15073,
        15114
      ],
      "op": "GT",
      "path": "0"
    },
    "1912": {
      "branch": 119,
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15073,
        15114
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1913": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14910,
        15114
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1914": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14906,
        15304
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1915": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14906,
        15304
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C0"
    },
    "1918": {
      "branch": 119,
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14906,
        15304
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1919": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15135,
        15182
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 11,
      "value": "0x789"
    },
    "1922": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15163,
        15168
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1923": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15170,
        15173
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1924": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15175,
        15181
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1925": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15135,
        15161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x130D"
    },
    "1928": {
      "fn": "MockEursToken.transferFrom",
      "jump": "i",
      "offset": [
        15135,
        15182
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1929": {
      "branch": 120,
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15135,
        15182
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1930": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15126,
        15183
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1931": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15126,
        15183
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1932": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15126,
        15183
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x794"
    },
    "1935": {
      "branch": 120,
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15126,
        15183
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1936": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15126,
        15183
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1938": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15126,
        15183
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1939": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15126,
        15183
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1940": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15126,
        15183
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1941": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15237,
        15249
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x3"
    },
    "1943": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15237,
        15249
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1944": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15202,
        15255
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7AC"
    },
    "1947": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15202,
        15255
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1948": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15230,
        15235
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1949": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15230,
        15235
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1956": {
      "op": "EXP"
    },
    "1957": {
      "op": "SUB"
    },
    "1958": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15237,
        15249
      ],
      "op": "AND",
      "path": "0"
    },
    "1959": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15251,
        15254
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1960": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15202,
        15228
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x130D"
    },
    "1963": {
      "fn": "MockEursToken.transferFrom",
      "jump": "i",
      "offset": [
        15202,
        15255
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1964": {
      "branch": 121,
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15202,
        15255
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1965": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15193,
        15256
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1966": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15193,
        15256
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1967": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15193,
        15256
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B7"
    },
    "1970": {
      "branch": 121,
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15193,
        15256
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1971": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15193,
        15256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1973": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15193,
        15256
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1974": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15193,
        15256
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1975": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15193,
        15256
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1976": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15273,
        15277
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x1"
    },
    "1978": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15266,
        15277
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1979": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15266,
        15277
      ],
      "op": "POP",
      "path": "0"
    },
    "1980": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15266,
        15277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C5"
    },
    "1983": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15266,
        15277
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1984": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14906,
        15304
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1985": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15299,
        15304
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x0"
    },
    "1987": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15292,
        15304
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1988": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        15292,
        15304
      ],
      "op": "POP",
      "path": "0"
    },
    "1989": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14906,
        15304
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1990": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14463,
        15315
      ],
      "op": "POP",
      "path": "0"
    },
    "1991": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14463,
        15315
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1992": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14463,
        15315
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1993": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14463,
        15315
      ],
      "op": "POP",
      "path": "0"
    },
    "1994": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14463,
        15315
      ],
      "op": "POP",
      "path": "0"
    },
    "1995": {
      "fn": "MockEursToken.transferFrom",
      "offset": [
        14463,
        15315
      ],
      "op": "POP",
      "path": "0"
    },
    "1996": {
      "fn": "MockEursToken.transferFrom",
      "jump": "o",
      "offset": [
        14463,
        15315
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1997": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12360,
        12440
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1998": {
      "offset": [
        10059,
        10067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "2000": {
      "fn": "MockEursToken.decimals",
      "offset": [
        10059,
        10067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2001": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12414,
        12419
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2003": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12414,
        12419
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2010": {
      "op": "EXP"
    },
    "2011": {
      "op": "SUB"
    },
    "2012": {
      "offset": [
        10059,
        10067
      ],
      "op": "AND",
      "path": "0"
    },
    "2013": {
      "offset": [
        10059,
        10082
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2014": {
      "offset": [
        10055,
        11396
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2015": {
      "fn": "MockEursToken.decimals",
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "2018": {
      "offset": [
        10055,
        11396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2019": {
      "offset": [
        10101,
        10110
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2020": {
      "offset": [
        10101,
        10115
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2021": {
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7ED"
    },
    "2024": {
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2025": {
      "fn": "MockEursToken.decimals",
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2027": {
      "fn": "MockEursToken.decimals",
      "offset": [
        10092,
        10116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2028": {
      "fn": "MockEursToken.decimals",
      "offset": [
        10092,
        10116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2029": {
      "fn": "MockEursToken.decimals",
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2030": {
      "op": "POP"
    },
    "2031": {
      "fn": "MockEursToken.decimals",
      "offset": [
        12434,
        12435
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x2"
    },
    "2033": {
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x572"
    },
    "2036": {
      "fn": "MockEursToken.decimals",
      "offset": [
        10055,
        11396
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2037": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19648,
        19812
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2038": {
      "offset": [
        10059,
        10067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "2040": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        10059,
        10067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2047": {
      "op": "EXP"
    },
    "2048": {
      "op": "SUB"
    },
    "2049": {
      "offset": [
        10059,
        10067
      ],
      "op": "AND",
      "path": "0"
    },
    "2050": {
      "offset": [
        10059,
        10082
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2051": {
      "offset": [
        10055,
        11396
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2052": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "2055": {
      "offset": [
        10055,
        11396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2056": {
      "offset": [
        10101,
        10110
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2057": {
      "offset": [
        10101,
        10115
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2058": {
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x812"
    },
    "2061": {
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2062": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2064": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        10092,
        10116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2065": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        10092,
        10116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2066": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2067": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19734,
        19739
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x2"
    },
    "2069": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19734,
        19739
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2076": {
      "op": "EXP"
    },
    "2077": {
      "op": "SUB"
    },
    "2078": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19734,
        19739
      ],
      "op": "AND",
      "path": "0"
    },
    "2079": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19720,
        19730
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2080": {
      "branch": 122,
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19720,
        19739
      ],
      "op": "EQ",
      "path": "0"
    },
    "2081": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19711,
        19740
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x829"
    },
    "2084": {
      "branch": 122,
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19711,
        19740
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2085": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19711,
        19740
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2087": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19711,
        19740
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2088": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19711,
        19740
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2089": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19711,
        19740
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2090": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19751,
        19757
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2092": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19751,
        19757
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2093": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19751,
        19757
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2095": {
      "branch": 123,
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19751,
        19757
      ],
      "op": "AND",
      "path": "0"
    },
    "2096": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19747,
        19808
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2097": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19747,
        19808
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51A"
    },
    "2100": {
      "branch": 123,
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19747,
        19808
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2101": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19767,
        19773
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x5"
    },
    "2103": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19767,
        19781
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2104": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19767,
        19781
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2107": {
      "op": "NOT"
    },
    "2108": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19767,
        19781
      ],
      "op": "AND",
      "path": "0"
    },
    "2109": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19767,
        19781
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2110": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19767,
        19781
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2111": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19790,
        19801
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x40"
    },
    "2113": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19790,
        19801
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2114": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19790,
        19801
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x2F05BA71D0DF11BF5FA562A6569D70C4F80DA84284BADBE015CE1456063D0DED"
    },
    "2147": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19790,
        19801
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2148": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19776,
        19781
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2150": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19776,
        19781
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2151": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        19790,
        19801
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2152": {
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51A"
    },
    "2155": {
      "fn": "MockEursToken.unfreezeTransfers",
      "offset": [
        10055,
        11396
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2156": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21591,
        21929
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2157": {
      "offset": [
        10059,
        10067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "2159": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        10059,
        10067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2160": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21658,
        21675
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2162": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21658,
        21675
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2163": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21658,
        21675
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2164": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21658,
        21675
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2165": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21658,
        21675
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2166": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21658,
        21675
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2167": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21658,
        21675
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2168": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21658,
        21675
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2175": {
      "op": "EXP"
    },
    "2176": {
      "op": "SUB"
    },
    "2177": {
      "offset": [
        10059,
        10067
      ],
      "op": "AND",
      "path": "0"
    },
    "2178": {
      "offset": [
        10059,
        10082
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2179": {
      "offset": [
        10055,
        11396
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2180": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "2183": {
      "offset": [
        10055,
        11396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2184": {
      "offset": [
        10101,
        10110
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2185": {
      "offset": [
        10101,
        10115
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2186": {
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x892"
    },
    "2189": {
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2190": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2192": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        10092,
        10116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2193": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        10092,
        10116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2194": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2195": {
      "op": "POP"
    },
    "2196": {
      "op": "POP"
    },
    "2197": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21789,
        21797
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x7"
    },
    "2199": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21789,
        21797
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2200": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21821,
        21835
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x8"
    },
    "2202": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21821,
        21835
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2203": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21859,
        21873
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x9"
    },
    "2205": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21859,
        21873
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2206": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21904,
        21924
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0xA"
    },
    "2208": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21904,
        21924
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2209": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21789,
        21797
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2210": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21789,
        21797
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2211": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21821,
        21835
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2212": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21821,
        21835
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2213": {
      "op": "POP"
    },
    "2214": {
      "fn": "MockEursToken.getFeeParameters",
      "offset": [
        21859,
        21873
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2215": {
      "op": "POP"
    },
    "2216": {
      "fn": "MockEursToken.getFeeParameters",
      "jump": "o",
      "offset": [
        21591,
        21929
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2217": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        18955,
        19396
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2218": {
      "offset": [
        10059,
        10067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "2220": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        10059,
        10067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2221": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19030,
        19034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2223": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19030,
        19034
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2230": {
      "op": "EXP"
    },
    "2231": {
      "op": "SUB"
    },
    "2232": {
      "offset": [
        10059,
        10067
      ],
      "op": "AND",
      "path": "0"
    },
    "2233": {
      "offset": [
        10059,
        10082
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2234": {
      "offset": [
        10055,
        11396
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2235": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "2238": {
      "offset": [
        10055,
        11396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2239": {
      "offset": [
        10101,
        10110
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2240": {
      "offset": [
        10101,
        10115
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2241": {
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C9"
    },
    "2244": {
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2245": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2247": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        10092,
        10116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2248": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        10092,
        10116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2249": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2250": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19065,
        19070
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x2"
    },
    "2252": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19065,
        19070
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2259": {
      "op": "EXP"
    },
    "2260": {
      "op": "SUB"
    },
    "2261": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19065,
        19070
      ],
      "op": "AND",
      "path": "0"
    },
    "2262": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19051,
        19061
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2263": {
      "branch": 124,
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19051,
        19070
      ],
      "op": "EQ",
      "path": "0"
    },
    "2264": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19042,
        19071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E0"
    },
    "2267": {
      "branch": 124,
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19042,
        19071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2268": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19042,
        19071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2270": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19042,
        19071
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2271": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19042,
        19071
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2272": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19042,
        19071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2273": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19091,
        19092
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2275": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19082,
        19088
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2276": {
      "branch": 125,
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19082,
        19092
      ],
      "op": "GT",
      "path": "0"
    },
    "2277": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19078,
        19391
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2278": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19078,
        19391
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x96F"
    },
    "2281": {
      "branch": 125,
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19078,
        19391
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2282": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19126,
        19136
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2283": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19116,
        19124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2285": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19116,
        19137
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2286": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19116,
        19137
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2287": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19116,
        19137
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2288": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19116,
        19137
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2290": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19116,
        19137
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2291": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19116,
        19137
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2292": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19116,
        19137
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2293": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19116,
        19137
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2295": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19116,
        19137
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2296": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19116,
        19137
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2297": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19116,
        19137
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2298": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19106,
        19137
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2299": {
      "branch": 126,
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19106,
        19137
      ],
      "op": "GT",
      "path": "0"
    },
    "2300": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19102,
        19367
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x967"
    },
    "2303": {
      "branch": 126,
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19102,
        19367
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2304": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19192,
        19202
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 24
    },
    "2305": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19182,
        19190
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2307": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19182,
        19203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2308": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19182,
        19203
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2309": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19182,
        19203
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2310": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19182,
        19203
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2312": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19182,
        19203
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2313": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19182,
        19203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2314": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19182,
        19203
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2315": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19182,
        19203
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2317": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19182,
        19203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2318": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19182,
        19203
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2319": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19182,
        19203
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2320": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19173,
        19212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x919"
    },
    "2323": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19173,
        19212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2324": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19205,
        19211
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2325": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19173,
        19180
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12FB"
    },
    "2328": {
      "fn": "MockEursToken.burnTokens",
      "jump": "i",
      "offset": [
        19173,
        19212
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2329": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19173,
        19212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2330": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19159,
        19169
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2331": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19149,
        19157
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2333": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19149,
        19170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2334": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19149,
        19170
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2335": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19149,
        19170
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2336": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19149,
        19170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2338": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19149,
        19170
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2339": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19149,
        19170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2340": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19149,
        19170
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2341": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19149,
        19170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2343": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19149,
        19170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2344": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19149,
        19170
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2345": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19149,
        19212
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2346": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19245,
        19256
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x4"
    },
    "2348": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19245,
        19256
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2349": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19236,
        19265
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x936"
    },
    "2352": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19236,
        19265
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2353": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19258,
        19264
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2354": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19236,
        19243
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12FB"
    },
    "2357": {
      "fn": "MockEursToken.burnTokens",
      "jump": "i",
      "offset": [
        19236,
        19265
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2358": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19236,
        19265
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2359": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19222,
        19233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2361": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19222,
        19265
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2362": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19276,
        19318
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0x40"
    },
    "2364": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19276,
        19318
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2365": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19276,
        19318
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2366": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19276,
        19318
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2367": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19276,
        19318
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2368": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19276,
        19318
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2369": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19276,
        19318
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2370": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19276,
        19318
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2371": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19307,
        19308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2373": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19307,
        19308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2374": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19286,
        19296
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2375": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19286,
        19296
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2378": {
      "op": "DUP1"
    },
    "2379": {
      "op": "MLOAD"
    },
    "2380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2382": {
      "op": "PUSH2",
      "value": "0x1671"
    },
    "2385": {
      "op": "DUP4"
    },
    "2386": {
      "op": "CODECOPY"
    },
    "2387": {
      "op": "DUP2"
    },
    "2388": {
      "op": "MLOAD"
    },
    "2389": {
      "op": "SWAP2"
    },
    "2390": {
      "op": "MSTORE"
    },
    "2391": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19276,
        19318
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2392": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19276,
        19318
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2393": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19276,
        19318
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2394": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19276,
        19318
      ],
      "op": "SUB",
      "path": "0"
    },
    "2395": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19276,
        19318
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2397": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19276,
        19318
      ],
      "op": "ADD",
      "path": "0"
    },
    "2398": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19276,
        19318
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2399": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19276,
        19318
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2400": {
      "op": "POP"
    },
    "2401": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19336,
        19340
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x1"
    },
    "2403": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19329,
        19340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x973"
    },
    "2406": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19329,
        19340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2407": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19102,
        19367
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2408": {
      "op": "POP"
    },
    "2409": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19362,
        19367
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 28,
      "value": "0x0"
    },
    "2411": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19355,
        19367
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x973"
    },
    "2414": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19355,
        19367
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2415": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19078,
        19391
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2416": {
      "op": "POP"
    },
    "2417": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19387,
        19391
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 29,
      "value": "0x1"
    },
    "2419": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        19078,
        19391
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2420": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        18955,
        19396
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2421": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        18955,
        19396
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2422": {
      "fn": "MockEursToken.burnTokens",
      "offset": [
        18955,
        19396
      ],
      "op": "POP",
      "path": "0"
    },
    "2423": {
      "fn": "MockEursToken.burnTokens",
      "jump": "o",
      "offset": [
        18955,
        19396
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2424": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        12917,
        13057
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2425": {
      "offset": [
        10059,
        10067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "2427": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        10059,
        10067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2428": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        12990,
        13005
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2430": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        12990,
        13005
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2437": {
      "op": "EXP"
    },
    "2438": {
      "op": "SUB"
    },
    "2439": {
      "offset": [
        10059,
        10067
      ],
      "op": "AND",
      "path": "0"
    },
    "2440": {
      "offset": [
        10059,
        10082
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2441": {
      "offset": [
        10055,
        11396
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2442": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "2445": {
      "offset": [
        10055,
        11396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2446": {
      "offset": [
        10101,
        10110
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2447": {
      "offset": [
        10101,
        10115
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2448": {
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x998"
    },
    "2451": {
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2452": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2454": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        10092,
        10116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2455": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        10092,
        10116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2456": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2457": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        13020,
        13052
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 30,
      "value": "0x9A1"
    },
    "2460": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        13045,
        13051
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2461": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        13020,
        13043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1518"
    },
    "2464": {
      "fn": "MockEursToken.balanceOf",
      "jump": "i",
      "offset": [
        13020,
        13052
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2465": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        13020,
        13052
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2466": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        13013,
        13052
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2467": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        13013,
        13052
      ],
      "op": "POP",
      "path": "0"
    },
    "2468": {
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x973"
    },
    "2471": {
      "fn": "MockEursToken.balanceOf",
      "offset": [
        10055,
        11396
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2472": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20567,
        20674
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2473": {
      "offset": [
        10059,
        10067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "2475": {
      "fn": "MockEursToken.nonce",
      "offset": [
        10059,
        10067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2476": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20632,
        20639
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2478": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20632,
        20639
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2485": {
      "op": "EXP"
    },
    "2486": {
      "op": "SUB"
    },
    "2487": {
      "offset": [
        10059,
        10067
      ],
      "op": "AND",
      "path": "0"
    },
    "2488": {
      "offset": [
        10059,
        10082
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2489": {
      "offset": [
        10055,
        11396
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2490": {
      "fn": "MockEursToken.nonce",
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "2493": {
      "offset": [
        10055,
        11396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2494": {
      "offset": [
        10101,
        10110
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2495": {
      "offset": [
        10101,
        10115
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2496": {
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C8"
    },
    "2499": {
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2500": {
      "fn": "MockEursToken.nonce",
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2502": {
      "fn": "MockEursToken.nonce",
      "offset": [
        10092,
        10116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2503": {
      "fn": "MockEursToken.nonce",
      "offset": [
        10092,
        10116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2504": {
      "fn": "MockEursToken.nonce",
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2505": {
      "op": "POP"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2512": {
      "op": "EXP"
    },
    "2513": {
      "op": "SUB"
    },
    "2514": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20654,
        20669
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 31
    },
    "2515": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20654,
        20669
      ],
      "op": "AND",
      "path": "0"
    },
    "2516": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20654,
        20669
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2518": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20654,
        20669
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2519": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20654,
        20669
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2520": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20654,
        20669
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2521": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20654,
        20660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2523": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20654,
        20669
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2525": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20654,
        20669
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2526": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20654,
        20669
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2528": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20654,
        20669
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2529": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20654,
        20669
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2530": {
      "fn": "MockEursToken.nonce",
      "offset": [
        20654,
        20669
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2531": {
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x973"
    },
    "2534": {
      "fn": "MockEursToken.nonce",
      "offset": [
        10055,
        11396
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2535": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18411,
        18872
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2536": {
      "offset": [
        10059,
        10067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "2538": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        10059,
        10067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2539": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18488,
        18492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2541": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18488,
        18492
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2544": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2548": {
      "op": "EXP"
    },
    "2549": {
      "op": "SUB"
    },
    "2550": {
      "offset": [
        10059,
        10067
      ],
      "op": "AND",
      "path": "0"
    },
    "2551": {
      "offset": [
        10059,
        10082
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2552": {
      "offset": [
        10055,
        11396
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2553": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "2556": {
      "offset": [
        10055,
        11396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2557": {
      "offset": [
        10101,
        10110
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2558": {
      "offset": [
        10101,
        10115
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2559": {
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA07"
    },
    "2562": {
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2563": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2565": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        10092,
        10116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2566": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        10092,
        10116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2567": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2568": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18523,
        18528
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 32,
      "value": "0x2"
    },
    "2570": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18523,
        18528
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2575": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2577": {
      "op": "EXP"
    },
    "2578": {
      "op": "SUB"
    },
    "2579": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18523,
        18528
      ],
      "op": "AND",
      "path": "0"
    },
    "2580": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18509,
        18519
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2581": {
      "branch": 127,
      "fn": "MockEursToken.createTokens",
      "offset": [
        18509,
        18528
      ],
      "op": "EQ",
      "path": "0"
    },
    "2582": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18500,
        18529
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1E"
    },
    "2585": {
      "branch": 127,
      "fn": "MockEursToken.createTokens",
      "offset": [
        18500,
        18529
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2586": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18500,
        18529
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2588": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18500,
        18529
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2589": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18500,
        18529
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2590": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18500,
        18529
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2591": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18549,
        18550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2593": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18540,
        18546
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2594": {
      "branch": 128,
      "fn": "MockEursToken.createTokens",
      "offset": [
        18540,
        18550
      ],
      "op": "GT",
      "path": "0"
    },
    "2595": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18536,
        18867
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2596": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18536,
        18867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x96F"
    },
    "2599": {
      "branch": 128,
      "fn": "MockEursToken.createTokens",
      "offset": [
        18536,
        18867
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2600": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18574,
        18613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3A"
    },
    "2603": {
      "offset": [
        9279,
        9285
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x186A0"
    },
    "2607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2609": {
      "op": "NOT"
    },
    "2610": {
      "offset": [
        9616,
        9706
      ],
      "op": "DIV",
      "path": "0"
    },
    "2611": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18601,
        18612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2613": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18601,
        18612
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2614": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18574,
        18581
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12FB"
    },
    "2617": {
      "fn": "MockEursToken.createTokens",
      "jump": "i",
      "offset": [
        18574,
        18613
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2618": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18574,
        18613
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2619": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18564,
        18613
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2620": {
      "branch": 129,
      "fn": "MockEursToken.createTokens",
      "offset": [
        18564,
        18613
      ],
      "op": "GT",
      "path": "0"
    },
    "2621": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18560,
        18843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x967"
    },
    "2624": {
      "branch": 129,
      "fn": "MockEursToken.createTokens",
      "offset": [
        18560,
        18843
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2625": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18668,
        18678
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 33
    },
    "2626": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18658,
        18666
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2628": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18658,
        18679
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2629": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18658,
        18679
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2630": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18658,
        18679
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2631": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18658,
        18679
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2633": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18658,
        18679
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2634": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18658,
        18679
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2635": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18658,
        18679
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2636": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18658,
        18679
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2638": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18658,
        18679
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2639": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18658,
        18679
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2640": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18658,
        18679
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2641": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18649,
        18688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA5A"
    },
    "2644": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18649,
        18688
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2645": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18681,
        18687
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2646": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18649,
        18656
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1533"
    },
    "2649": {
      "fn": "MockEursToken.createTokens",
      "jump": "i",
      "offset": [
        18649,
        18688
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2650": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18649,
        18688
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2651": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18635,
        18645
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2652": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18625,
        18633
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2654": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18625,
        18646
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2655": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18625,
        18646
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2656": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18625,
        18646
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2657": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18625,
        18646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2659": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18625,
        18646
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2660": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18625,
        18646
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2661": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18625,
        18646
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2662": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18625,
        18646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2664": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18625,
        18646
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2665": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18625,
        18646
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2666": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18625,
        18688
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2667": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18721,
        18732
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 34,
      "value": "0x4"
    },
    "2669": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18721,
        18732
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2670": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18712,
        18741
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA77"
    },
    "2673": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18712,
        18741
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2674": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18734,
        18740
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2675": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18712,
        18719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1533"
    },
    "2678": {
      "fn": "MockEursToken.createTokens",
      "jump": "i",
      "offset": [
        18712,
        18741
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2679": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18712,
        18741
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2680": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18698,
        18709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2682": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18698,
        18741
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2683": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18752,
        18794
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 35,
      "value": "0x40"
    },
    "2685": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18752,
        18794
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2686": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18752,
        18794
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2687": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18752,
        18794
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2688": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18752,
        18794
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2689": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18752,
        18794
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2690": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18752,
        18794
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2691": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18752,
        18794
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2692": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18775,
        18785
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2693": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18775,
        18785
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2694": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18771,
        18772
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2696": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18771,
        18772
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2699": {
      "op": "DUP1"
    },
    "2700": {
      "op": "MLOAD"
    },
    "2701": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2703": {
      "op": "PUSH2",
      "value": "0x1671"
    },
    "2706": {
      "op": "DUP4"
    },
    "2707": {
      "op": "CODECOPY"
    },
    "2708": {
      "op": "DUP2"
    },
    "2709": {
      "op": "MLOAD"
    },
    "2710": {
      "op": "SWAP2"
    },
    "2711": {
      "op": "MSTORE"
    },
    "2712": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18752,
        18794
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2713": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18752,
        18794
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2714": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18752,
        18794
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2715": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18752,
        18794
      ],
      "op": "SUB",
      "path": "0"
    },
    "2716": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18752,
        18794
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2718": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18752,
        18794
      ],
      "op": "ADD",
      "path": "0"
    },
    "2719": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18752,
        18794
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2720": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18752,
        18794
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2721": {
      "op": "POP"
    },
    "2722": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18812,
        18816
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 36,
      "value": "0x1"
    },
    "2724": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18805,
        18816
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x973"
    },
    "2727": {
      "fn": "MockEursToken.createTokens",
      "offset": [
        18805,
        18816
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2728": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12166,
        12250
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2729": {
      "offset": [
        10059,
        10067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "2731": {
      "fn": "MockEursToken.symbol",
      "offset": [
        10059,
        10067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2732": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12218,
        12224
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2734": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12218,
        12224
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2741": {
      "op": "EXP"
    },
    "2742": {
      "op": "SUB"
    },
    "2743": {
      "offset": [
        10059,
        10067
      ],
      "op": "AND",
      "path": "0"
    },
    "2744": {
      "offset": [
        10059,
        10082
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2745": {
      "offset": [
        10055,
        11396
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2746": {
      "fn": "MockEursToken.symbol",
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "2749": {
      "offset": [
        10055,
        11396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2750": {
      "offset": [
        10101,
        10110
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2751": {
      "offset": [
        10101,
        10115
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2752": {
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC8"
    },
    "2755": {
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2756": {
      "fn": "MockEursToken.symbol",
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2758": {
      "fn": "MockEursToken.symbol",
      "offset": [
        10092,
        10116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2759": {
      "fn": "MockEursToken.symbol",
      "offset": [
        10092,
        10116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2760": {
      "fn": "MockEursToken.symbol",
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2761": {
      "op": "POP"
    },
    "2762": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12232,
        12245
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 37,
      "value": "0x40"
    },
    "2764": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12232,
        12245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2765": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12232,
        12245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2766": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12232,
        12245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2767": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12232,
        12245
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2768": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12232,
        12245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2769": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12232,
        12245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2770": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12232,
        12245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2771": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12232,
        12245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2772": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12232,
        12245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2774": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12232,
        12245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2775": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12232,
        12245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2776": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12232,
        12245
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4555525300000000000000000000000000000000000000000000000000000000"
    },
    "2809": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12232,
        12245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2811": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12232,
        12245
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2812": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12232,
        12245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2813": {
      "fn": "MockEursToken.symbol",
      "offset": [
        12232,
        12245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2814": {
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x572"
    },
    "2817": {
      "fn": "MockEursToken.symbol",
      "offset": [
        10055,
        11396
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2818": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22112,
        22467
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2819": {
      "offset": [
        10059,
        10067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "2821": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        10059,
        10067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2822": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22189,
        22201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2824": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22189,
        22201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2827": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2831": {
      "op": "EXP"
    },
    "2832": {
      "op": "SUB"
    },
    "2833": {
      "offset": [
        10059,
        10067
      ],
      "op": "AND",
      "path": "0"
    },
    "2834": {
      "offset": [
        10059,
        10082
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2835": {
      "offset": [
        10055,
        11396
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2836": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "2839": {
      "offset": [
        10055,
        11396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2840": {
      "offset": [
        10101,
        10110
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2841": {
      "offset": [
        10101,
        10115
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2842": {
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB22"
    },
    "2845": {
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2846": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2848": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        10092,
        10116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2849": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        10092,
        10116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2850": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2851": {
      "offset": [
        9616,
        9706
      ],
      "op": "PUSH30",
      "path": "0",
      "value": "0xA7C5AC471B4784230FCF80DC33721D53CDDD6E04C059210385C67DFE32A0"
    },
    "2882": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22218,
        22245
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 38
    },
    "2883": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22218,
        22245
      ],
      "op": "GT",
      "path": "0"
    },
    "2884": {
      "branch": 130,
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22218,
        22245
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2885": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22209,
        22246
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB4D"
    },
    "2888": {
      "branch": 130,
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22209,
        22246
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2889": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22209,
        22246
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2891": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22209,
        22246
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2892": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22209,
        22246
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2893": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22209,
        22246
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2894": {
      "offset": [
        9279,
        9285
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x186A0"
    },
    "2898": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22260,
        22299
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 39,
      "value": "0xB5D"
    },
    "2901": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22269,
        22276
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2902": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22278,
        22298
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2904": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22278,
        22298
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2905": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22260,
        22267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1549"
    },
    "2908": {
      "fn": "MockEursToken.calculateFee",
      "jump": "i",
      "offset": [
        22260,
        22299
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2909": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22260,
        22299
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2910": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22260,
        22317
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2911": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22260,
        22317
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2912": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22260,
        22317
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2913": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22260,
        22317
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB66"
    },
    "2916": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22260,
        22317
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2917": {
      "dev": "Division by zero",
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22260,
        22317
      ],
      "op": "INVALID",
      "path": "0"
    },
    "2918": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22260,
        22317
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2919": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22260,
        22317
      ],
      "op": "DIV",
      "path": "0"
    },
    "2920": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22253,
        22317
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2921": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22253,
        22317
      ],
      "op": "POP",
      "path": "0"
    },
    "2922": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22334,
        22348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "2924": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22334,
        22348
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2925": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22327,
        22331
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2926": {
      "branch": 131,
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22327,
        22348
      ],
      "op": "LT",
      "path": "0"
    },
    "2927": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22323,
        22371
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2928": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22323,
        22371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB78"
    },
    "2931": {
      "branch": 131,
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22323,
        22371
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2932": {
      "op": "POP"
    },
    "2933": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22357,
        22371
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 40,
      "value": "0x8"
    },
    "2935": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22357,
        22371
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2936": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22323,
        22371
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2937": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22388,
        22402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "2939": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22388,
        22402
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2940": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22381,
        22385
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2941": {
      "branch": 132,
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22381,
        22402
      ],
      "op": "GT",
      "path": "0"
    },
    "2942": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22377,
        22425
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2943": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22377,
        22425
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB87"
    },
    "2946": {
      "branch": 132,
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22377,
        22425
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2947": {
      "op": "POP"
    },
    "2948": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22411,
        22425
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 41,
      "value": "0x9"
    },
    "2950": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22411,
        22425
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2951": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22377,
        22425
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2952": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22438,
        22462
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 42,
      "value": "0x9A1"
    },
    "2955": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22447,
        22451
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2956": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22453,
        22461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "2958": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22453,
        22461
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2959": {
      "fn": "MockEursToken.calculateFee",
      "offset": [
        22438,
        22445
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1533"
    },
    "2962": {
      "fn": "MockEursToken.calculateFee",
      "jump": "i",
      "offset": [
        22438,
        22462
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2963": {
      "fn": "MockEursToken.flags",
      "offset": [
        22899,
        23016
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2964": {
      "offset": [
        10059,
        10067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "2966": {
      "fn": "MockEursToken.flags",
      "offset": [
        10059,
        10067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2967": {
      "fn": "MockEursToken.flags",
      "offset": [
        22966,
        22973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2969": {
      "fn": "MockEursToken.flags",
      "offset": [
        22966,
        22973
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2976": {
      "op": "EXP"
    },
    "2977": {
      "op": "SUB"
    },
    "2978": {
      "offset": [
        10059,
        10067
      ],
      "op": "AND",
      "path": "0"
    },
    "2979": {
      "offset": [
        10059,
        10082
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2980": {
      "offset": [
        10055,
        11396
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2981": {
      "fn": "MockEursToken.flags",
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "2984": {
      "offset": [
        10055,
        11396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2985": {
      "offset": [
        10101,
        10110
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2986": {
      "offset": [
        10101,
        10115
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2987": {
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBB3"
    },
    "2990": {
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2991": {
      "fn": "MockEursToken.flags",
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2993": {
      "fn": "MockEursToken.flags",
      "offset": [
        10092,
        10116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2994": {
      "fn": "MockEursToken.flags",
      "offset": [
        10092,
        10116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2995": {
      "fn": "MockEursToken.flags",
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2996": {
      "op": "POP"
    },
    "2997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2999": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3003": {
      "op": "EXP"
    },
    "3004": {
      "op": "SUB"
    },
    "3005": {
      "fn": "MockEursToken.flags",
      "offset": [
        22988,
        23011
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 43
    },
    "3006": {
      "fn": "MockEursToken.flags",
      "offset": [
        22988,
        23011
      ],
      "op": "AND",
      "path": "0"
    },
    "3007": {
      "fn": "MockEursToken.flags",
      "offset": [
        22988,
        23011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3009": {
      "fn": "MockEursToken.flags",
      "offset": [
        22988,
        23011
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3010": {
      "fn": "MockEursToken.flags",
      "offset": [
        22988,
        23011
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3011": {
      "fn": "MockEursToken.flags",
      "offset": [
        22988,
        23011
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3012": {
      "fn": "MockEursToken.flags",
      "offset": [
        22988,
        23000
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "3014": {
      "fn": "MockEursToken.flags",
      "offset": [
        22988,
        23011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3016": {
      "fn": "MockEursToken.flags",
      "offset": [
        22988,
        23011
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3017": {
      "fn": "MockEursToken.flags",
      "offset": [
        22988,
        23011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3019": {
      "fn": "MockEursToken.flags",
      "offset": [
        22988,
        23011
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3020": {
      "fn": "MockEursToken.flags",
      "offset": [
        22988,
        23011
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3021": {
      "fn": "MockEursToken.flags",
      "offset": [
        22988,
        23011
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3022": {
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x973"
    },
    "3025": {
      "fn": "MockEursToken.flags",
      "offset": [
        10055,
        11396
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3026": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20127,
        20286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3027": {
      "offset": [
        10059,
        10067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "3029": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        10059,
        10067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3032": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3034": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3036": {
      "op": "EXP"
    },
    "3037": {
      "op": "SUB"
    },
    "3038": {
      "offset": [
        10059,
        10067
      ],
      "op": "AND",
      "path": "0"
    },
    "3039": {
      "offset": [
        10059,
        10082
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3040": {
      "offset": [
        10055,
        11396
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3041": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "3044": {
      "offset": [
        10055,
        11396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3045": {
      "offset": [
        10101,
        10110
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "3046": {
      "offset": [
        10101,
        10115
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3047": {
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBEF"
    },
    "3050": {
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3051": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3053": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        10092,
        10116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3054": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        10092,
        10116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3055": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3056": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20237,
        20242
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 44,
      "value": "0x2"
    },
    "3058": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20237,
        20242
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3065": {
      "op": "EXP"
    },
    "3066": {
      "op": "SUB"
    },
    "3067": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20237,
        20242
      ],
      "op": "AND",
      "path": "0"
    },
    "3068": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20223,
        20233
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3069": {
      "branch": 133,
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20223,
        20242
      ],
      "op": "EQ",
      "path": "0"
    },
    "3070": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20214,
        20243
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC06"
    },
    "3073": {
      "branch": 133,
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20214,
        20243
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3074": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20214,
        20243
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3076": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20214,
        20243
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3077": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20214,
        20243
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3078": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20214,
        20243
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3079": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20250,
        20262
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 45,
      "value": "0x3"
    },
    "3081": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20250,
        20281
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3082": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20250,
        20281
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3083": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3104": {
      "op": "NOT"
    },
    "3105": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20250,
        20281
      ],
      "op": "AND",
      "path": "0"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3112": {
      "op": "EXP"
    },
    "3113": {
      "op": "SUB"
    },
    "3114": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20250,
        20281
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3115": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20250,
        20281
      ],
      "op": "AND",
      "path": "0"
    },
    "3116": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20250,
        20281
      ],
      "op": "OR",
      "path": "0"
    },
    "3117": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20250,
        20281
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3118": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20250,
        20281
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3119": {
      "offset": [
        10187,
        11390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3120": {
      "fn": "MockEursToken.setFeeCollector",
      "offset": [
        20127,
        20286
      ],
      "op": "POP",
      "path": "0"
    },
    "3121": {
      "fn": "MockEursToken.setFeeCollector",
      "jump": "o",
      "offset": [
        20127,
        20286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3122": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13367,
        14075
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3123": {
      "offset": [
        10059,
        10067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "3125": {
      "fn": "MockEursToken.transfer",
      "offset": [
        10059,
        10067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3126": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13453,
        13457
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3128": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13453,
        13457
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3129": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13453,
        13457
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3130": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13453,
        13457
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3135": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3137": {
      "op": "EXP"
    },
    "3138": {
      "op": "SUB"
    },
    "3139": {
      "offset": [
        10059,
        10067
      ],
      "op": "AND",
      "path": "0"
    },
    "3140": {
      "offset": [
        10059,
        10082
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3141": {
      "offset": [
        10055,
        11396
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3142": {
      "fn": "MockEursToken.transfer",
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "3145": {
      "offset": [
        10055,
        11396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3146": {
      "offset": [
        10101,
        10110
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "3147": {
      "offset": [
        10101,
        10115
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3148": {
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC54"
    },
    "3151": {
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3152": {
      "fn": "MockEursToken.transfer",
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3154": {
      "fn": "MockEursToken.transfer",
      "offset": [
        10092,
        10116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3155": {
      "fn": "MockEursToken.transfer",
      "offset": [
        10092,
        10116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3156": {
      "fn": "MockEursToken.transfer",
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3157": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13469,
        13475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3159": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13469,
        13475
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3160": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13469,
        13475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3162": {
      "branch": 134,
      "fn": "MockEursToken.transfer",
      "offset": [
        13469,
        13475
      ],
      "op": "AND",
      "path": "0"
    },
    "3163": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13465,
        14071
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3164": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13465,
        14071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC68"
    },
    "3167": {
      "branch": 134,
      "fn": "MockEursToken.transfer",
      "offset": [
        13465,
        14071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3168": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13484,
        13489
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 46,
      "value": "0x0"
    },
    "3170": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13477,
        13489
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3171": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13477,
        13489
      ],
      "op": "POP",
      "path": "0"
    },
    "3172": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13477,
        13489
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD5D"
    },
    "3175": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13477,
        13489
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3176": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13465,
        14071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3183": {
      "op": "EXP"
    },
    "3184": {
      "op": "SUB"
    },
    "3185": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13540,
        13558
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3186": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13540,
        13558
      ],
      "op": "AND",
      "path": "0"
    },
    "3187": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13540,
        13558
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3189": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13540,
        13558
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3190": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13540,
        13558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3191": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13540,
        13558
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3192": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13540,
        13552
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "3194": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13540,
        13558
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3196": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13540,
        13558
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3197": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13540,
        13558
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3199": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13540,
        13558
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3200": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13540,
        13558
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3201": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13540,
        13558
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3202": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13540,
        13558
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3203": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13526,
        13536
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3204": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13512,
        13537
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3205": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13512,
        13537
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3206": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13512,
        13537
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3207": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13512,
        13537
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3208": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13512,
        13537
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3209": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13512,
        13558
      ],
      "op": "OR",
      "path": "0"
    },
    "3210": {
      "offset": [
        9907,
        9911
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3212": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13511,
        13577
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3213": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13511,
        13577
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3214": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13511,
        13577
      ],
      "op": "AND",
      "path": "0"
    },
    "3215": {
      "branch": 135,
      "fn": "MockEursToken.transfer",
      "offset": [
        13511,
        13602
      ],
      "op": "EQ",
      "path": "0"
    },
    "3216": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13500,
        14071
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3217": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13500,
        14071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC9D"
    },
    "3220": {
      "branch": 135,
      "fn": "MockEursToken.transfer",
      "offset": [
        13500,
        14071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3221": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13617,
        13622
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 47,
      "value": "0x0"
    },
    "3223": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13610,
        13622
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3224": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13610,
        13622
      ],
      "op": "POP",
      "path": "0"
    },
    "3225": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13610,
        13622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD5D"
    },
    "3228": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13610,
        13622
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3229": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13500,
        14071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3236": {
      "op": "EXP"
    },
    "3237": {
      "op": "SUB"
    },
    "3238": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13692,
        13710
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3239": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13692,
        13710
      ],
      "op": "AND",
      "path": "0"
    },
    "3240": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13692,
        13710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3242": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13692,
        13710
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3243": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13692,
        13710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3244": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13692,
        13710
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3245": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13692,
        13704
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "3247": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13692,
        13710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3249": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13692,
        13710
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3250": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13692,
        13710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3252": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13692,
        13710
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3253": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13692,
        13710
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3254": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13692,
        13710
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3255": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13692,
        13710
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3256": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13678,
        13688
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3257": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13664,
        13689
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3258": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13664,
        13689
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3259": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13664,
        13689
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3260": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13664,
        13689
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3261": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13664,
        13689
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3262": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13664,
        13710
      ],
      "op": "OR",
      "path": "0"
    },
    "3263": {
      "offset": [
        10019,
        10023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3265": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13663,
        13727
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3266": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13663,
        13727
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3267": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13663,
        13727
      ],
      "op": "AND",
      "path": "0"
    },
    "3268": {
      "branch": 136,
      "fn": "MockEursToken.transfer",
      "offset": [
        13663,
        13744
      ],
      "op": "EQ",
      "path": "0"
    },
    "3269": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13663,
        13792
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD6"
    },
    "3272": {
      "branch": 136,
      "fn": "MockEursToken.transfer",
      "offset": [
        13663,
        13792
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3273": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13771,
        13792
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD1"
    },
    "3276": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13785,
        13791
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3277": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13771,
        13783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB02"
    },
    "3280": {
      "fn": "MockEursToken.transfer",
      "jump": "i",
      "offset": [
        13771,
        13792
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3281": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13771,
        13792
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3282": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13663,
        13792
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD9"
    },
    "3285": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13663,
        13792
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3286": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13663,
        13792
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3287": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13757,
        13758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3289": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13663,
        13792
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3290": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13825,
        13835
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3291": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13815,
        13823
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3293": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13815,
        13836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3294": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13815,
        13836
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3295": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13815,
        13836
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3296": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13815,
        13836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3298": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13815,
        13836
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3299": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13815,
        13836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3300": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13815,
        13836
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3301": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13815,
        13836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3303": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13815,
        13836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3304": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13815,
        13836
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3305": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13815,
        13836
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3306": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13641,
        13792
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3307": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13641,
        13792
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3308": {
      "op": "POP"
    },
    "3309": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13805,
        13836
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3310": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13805,
        13836
      ],
      "op": "GT",
      "path": "0"
    },
    "3311": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13805,
        13836
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3312": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13805,
        13836
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3313": {
      "branch": 137,
      "fn": "MockEursToken.transfer",
      "offset": [
        13805,
        13836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3314": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13805,
        13896
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD14"
    },
    "3317": {
      "branch": 137,
      "fn": "MockEursToken.transfer",
      "offset": [
        13805,
        13896
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3318": {
      "op": "POP"
    },
    "3319": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13876,
        13886
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3320": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13866,
        13874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3322": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13866,
        13887
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3323": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13866,
        13887
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3324": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13866,
        13887
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3325": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13866,
        13887
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3327": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13866,
        13887
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3328": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13866,
        13887
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3329": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13866,
        13887
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3330": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13866,
        13887
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3332": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13866,
        13887
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3333": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13866,
        13887
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3334": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13866,
        13887
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3335": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13857,
        13896
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD10"
    },
    "3338": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13857,
        13896
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3339": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13889,
        13895
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3340": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13857,
        13864
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12FB"
    },
    "3343": {
      "fn": "MockEursToken.transfer",
      "jump": "i",
      "offset": [
        13857,
        13896
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3344": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13857,
        13896
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3345": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13850,
        13853
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3346": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13850,
        13896
      ],
      "op": "GT",
      "path": "0"
    },
    "3347": {
      "branch": 138,
      "fn": "MockEursToken.transfer",
      "offset": [
        13850,
        13896
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3348": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13805,
        13896
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3349": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13801,
        14064
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3350": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13801,
        14064
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD58"
    },
    "3353": {
      "branch": 138,
      "fn": "MockEursToken.transfer",
      "offset": [
        13801,
        14064
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3354": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13917,
        13953
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 48,
      "value": "0xD23"
    },
    "3357": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13941,
        13944
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3358": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13946,
        13952
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3359": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13917,
        13939
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1576"
    },
    "3362": {
      "fn": "MockEursToken.transfer",
      "jump": "i",
      "offset": [
        13917,
        13953
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3363": {
      "branch": 139,
      "fn": "MockEursToken.transfer",
      "offset": [
        13917,
        13953
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3364": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13908,
        13954
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3365": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13908,
        13954
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3366": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13908,
        13954
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD2E"
    },
    "3369": {
      "branch": 139,
      "fn": "MockEursToken.transfer",
      "offset": [
        13908,
        13954
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3370": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13908,
        13954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3372": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13908,
        13954
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3373": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13908,
        13954
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3374": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13908,
        13954
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3375": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13997,
        14009
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 49,
      "value": "0x3"
    },
    "3377": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13997,
        14009
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3378": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13973,
        14015
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD44"
    },
    "3381": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13973,
        14015
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3388": {
      "op": "EXP"
    },
    "3389": {
      "op": "SUB"
    },
    "3390": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13997,
        14009
      ],
      "op": "AND",
      "path": "0"
    },
    "3391": {
      "fn": "MockEursToken.transfer",
      "offset": [
        14011,
        14014
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3392": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13973,
        13995
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1576"
    },
    "3395": {
      "fn": "MockEursToken.transfer",
      "jump": "i",
      "offset": [
        13973,
        14015
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3396": {
      "branch": 140,
      "fn": "MockEursToken.transfer",
      "offset": [
        13973,
        14015
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3397": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13964,
        14016
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3398": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13964,
        14016
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3399": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13964,
        14016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD4F"
    },
    "3402": {
      "branch": 140,
      "fn": "MockEursToken.transfer",
      "offset": [
        13964,
        14016
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3403": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13964,
        14016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3405": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13964,
        14016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3406": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13964,
        14016
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3407": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13964,
        14016
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3408": {
      "fn": "MockEursToken.transfer",
      "offset": [
        14033,
        14037
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 50,
      "value": "0x1"
    },
    "3410": {
      "fn": "MockEursToken.transfer",
      "offset": [
        14026,
        14037
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3411": {
      "fn": "MockEursToken.transfer",
      "offset": [
        14026,
        14037
      ],
      "op": "POP",
      "path": "0"
    },
    "3412": {
      "fn": "MockEursToken.transfer",
      "offset": [
        14026,
        14037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD5D"
    },
    "3415": {
      "fn": "MockEursToken.transfer",
      "offset": [
        14026,
        14037
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3416": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13801,
        14064
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3417": {
      "fn": "MockEursToken.transfer",
      "offset": [
        14059,
        14064
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 51,
      "value": "0x0"
    },
    "3419": {
      "fn": "MockEursToken.transfer",
      "offset": [
        14052,
        14064
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3420": {
      "fn": "MockEursToken.transfer",
      "offset": [
        14052,
        14064
      ],
      "op": "POP",
      "path": "0"
    },
    "3421": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13801,
        14064
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3422": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13367,
        14075
      ],
      "op": "POP",
      "path": "0"
    },
    "3423": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13367,
        14075
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3424": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13367,
        14075
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3425": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13367,
        14075
      ],
      "op": "POP",
      "path": "0"
    },
    "3426": {
      "fn": "MockEursToken.transfer",
      "offset": [
        13367,
        14075
      ],
      "op": "POP",
      "path": "0"
    },
    "3427": {
      "fn": "MockEursToken.transfer",
      "jump": "o",
      "offset": [
        13367,
        14075
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3428": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22600,
        22761
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3429": {
      "offset": [
        10059,
        10067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "3431": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        10059,
        10067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3436": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3438": {
      "op": "EXP"
    },
    "3439": {
      "op": "SUB"
    },
    "3440": {
      "offset": [
        10059,
        10067
      ],
      "op": "AND",
      "path": "0"
    },
    "3441": {
      "offset": [
        10059,
        10082
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3442": {
      "offset": [
        10055,
        11396
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3443": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "3446": {
      "offset": [
        10055,
        11396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3447": {
      "offset": [
        10101,
        10110
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "3448": {
      "offset": [
        10101,
        10115
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3449": {
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD81"
    },
    "3452": {
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3453": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3455": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        10092,
        10116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3456": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        10092,
        10116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3457": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3458": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22711,
        22716
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 52,
      "value": "0x2"
    },
    "3460": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22711,
        22716
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3465": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3467": {
      "op": "EXP"
    },
    "3468": {
      "op": "SUB"
    },
    "3469": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22711,
        22716
      ],
      "op": "AND",
      "path": "0"
    },
    "3470": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22697,
        22707
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3471": {
      "branch": 141,
      "fn": "MockEursToken.setFlags",
      "offset": [
        22697,
        22716
      ],
      "op": "EQ",
      "path": "0"
    },
    "3472": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22688,
        22717
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD98"
    },
    "3475": {
      "branch": 141,
      "fn": "MockEursToken.setFlags",
      "offset": [
        22688,
        22717
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3476": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22688,
        22717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3478": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22688,
        22717
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3479": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22688,
        22717
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3480": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22688,
        22717
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3487": {
      "op": "EXP"
    },
    "3488": {
      "op": "SUB"
    },
    "3489": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22724,
        22747
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 53
    },
    "3490": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22724,
        22747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3491": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22724,
        22747
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3492": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22724,
        22747
      ],
      "op": "AND",
      "path": "0"
    },
    "3493": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22724,
        22747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3495": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22724,
        22747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3496": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22724,
        22747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3497": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22724,
        22747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3498": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22724,
        22736
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "3500": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22724,
        22747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3502": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22724,
        22747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3503": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22724,
        22747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3505": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22724,
        22747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3506": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22724,
        22747
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3507": {
      "fn": "MockEursToken.setFlags",
      "offset": [
        22724,
        22756
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3508": {
      "fn": "MockEursToken.setFlags",
      "jump": "o",
      "offset": [
        22600,
        22761
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3509": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3510": {
      "offset": [
        10059,
        10067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "3512": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        10059,
        10067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3513": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17069,
        17073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3515": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17069,
        17073
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3516": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17069,
        17073
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3517": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17069,
        17073
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3518": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17069,
        17073
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3519": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17069,
        17073
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3520": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17069,
        17073
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3521": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17069,
        17073
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3526": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3528": {
      "op": "EXP"
    },
    "3529": {
      "op": "SUB"
    },
    "3530": {
      "offset": [
        10059,
        10067
      ],
      "op": "AND",
      "path": "0"
    },
    "3531": {
      "offset": [
        10059,
        10082
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3532": {
      "offset": [
        10055,
        11396
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3533": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "3536": {
      "offset": [
        10055,
        11396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3537": {
      "offset": [
        10101,
        10110
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "3538": {
      "offset": [
        10101,
        10115
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3539": {
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDB"
    },
    "3542": {
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3543": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3545": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        10092,
        10116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3546": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        10092,
        10116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3547": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3548": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17085,
        17091
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3550": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17085,
        17091
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3551": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17085,
        17091
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3553": {
      "branch": 142,
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17085,
        17091
      ],
      "op": "AND",
      "path": "0"
    },
    "3554": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17081,
        18315
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3555": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17081,
        18315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDEF"
    },
    "3558": {
      "branch": 142,
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17081,
        18315
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3559": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17100,
        17105
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 54,
      "value": "0x0"
    },
    "3561": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17093,
        17105
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3562": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17093,
        17105
      ],
      "op": "POP",
      "path": "0"
    },
    "3563": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17093,
        17105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1118"
    },
    "3566": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17093,
        17105
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3567": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17081,
        18315
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3568": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3570": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17182,
        17196
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF9"
    },
    "3573": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17182,
        17193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x163D"
    },
    "3576": {
      "fn": "MockEursToken.delegatedTransfer",
      "jump": "i",
      "offset": [
        17182,
        17196
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3577": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17182,
        17196
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3578": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17198,
        17221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE01"
    },
    "3581": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17198,
        17218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1641"
    },
    "3584": {
      "fn": "MockEursToken.delegatedTransfer",
      "jump": "i",
      "offset": [
        17198,
        17221
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3585": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17198,
        17221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3586": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3588": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3589": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3590": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "PUSH13",
      "path": "0",
      "value": "0x1000000000000000000000000"
    },
    "3604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3606": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3610": {
      "op": "EXP"
    },
    "3611": {
      "op": "SUB"
    },
    "3612": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3613": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3614": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "AND",
      "path": "0"
    },
    "3615": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3616": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "MUL",
      "path": "0"
    },
    "3617": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3618": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3619": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3620": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3621": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "AND",
      "path": "0"
    },
    "3622": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3623": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "MUL",
      "path": "0"
    },
    "3624": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "3626": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3627": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "ADD",
      "path": "0"
    },
    "3628": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3629": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3630": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "DUP16",
      "path": "0"
    },
    "3631": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "AND",
      "path": "0"
    },
    "3632": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3633": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3634": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "MUL",
      "path": "0"
    },
    "3635": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x28"
    },
    "3637": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3638": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "ADD",
      "path": "0"
    },
    "3639": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3640": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3C"
    },
    "3642": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3643": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "ADD",
      "path": "0"
    },
    "3644": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "DUP14",
      "path": "0"
    },
    "3645": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3646": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3647": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5C"
    },
    "3649": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3650": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "ADD",
      "path": "0"
    },
    "3651": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "DUP13",
      "path": "0"
    },
    "3652": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3653": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3654": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7C"
    },
    "3656": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3657": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "ADD",
      "path": "0"
    },
    "3658": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "DUP12",
      "path": "0"
    },
    "3659": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3660": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3661": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3662": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3663": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3664": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3665": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3666": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "SUB",
      "path": "0"
    },
    "3667": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9C"
    },
    "3669": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "ADD",
      "path": "0"
    },
    "3670": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3671": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3674": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3675": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3676": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3677": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3679": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3680": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3681": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "ADD",
      "path": "0"
    },
    "3682": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3683": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3684": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3685": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3686": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3687": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3688": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3689": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3691": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "DUP13",
      "path": "0"
    },
    "3692": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "AND",
      "path": "0"
    },
    "3693": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3694": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3695": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "ADD",
      "path": "0"
    },
    "3696": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3697": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "3699": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3700": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "ADD",
      "path": "0"
    },
    "3701": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "DUP12",
      "path": "0"
    },
    "3702": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3703": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3704": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "3706": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3707": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "ADD",
      "path": "0"
    },
    "3708": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "DUP11",
      "path": "0"
    },
    "3709": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3710": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3711": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3712": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3713": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "3715": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3716": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3717": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "ADD",
      "path": "0"
    },
    "3718": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3719": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3720": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17160,
        17249
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3721": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3723": {
      "op": "NOT"
    },
    "3724": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3725": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "ADD",
      "path": "0"
    },
    "3726": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3727": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3728": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3729": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "SUB",
      "path": "0"
    },
    "3730": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3731": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3732": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "ADD",
      "path": "0"
    },
    "3733": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3734": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3735": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3736": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "GAS",
      "path": "0"
    },
    "3737": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "CALL",
      "path": "0"
    },
    "3738": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3739": {
      "op": "DUP1"
    },
    "3740": {
      "op": "ISZERO"
    },
    "3741": {
      "op": "PUSH2",
      "value": "0xEAA"
    },
    "3744": {
      "op": "JUMPI"
    },
    "3745": {
      "op": "RETURNDATASIZE"
    },
    "3746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3748": {
      "op": "DUP1"
    },
    "3749": {
      "op": "RETURNDATACOPY"
    },
    "3750": {
      "op": "RETURNDATASIZE"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3753": {
      "op": "REVERT"
    },
    "3754": {
      "op": "JUMPDEST"
    },
    "3755": {
      "op": "POP"
    },
    "3756": {
      "op": "POP"
    },
    "3757": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3759": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3760": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3763": {
      "op": "NOT"
    },
    "3764": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "ADD",
      "path": "0"
    },
    "3765": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3772": {
      "op": "EXP"
    },
    "3773": {
      "op": "SUB"
    },
    "3774": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17293,
        17307
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3775": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17293,
        17307
      ],
      "op": "AND",
      "path": "0"
    },
    "3776": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17293,
        17307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3778": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17293,
        17307
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3779": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17293,
        17307
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3780": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17293,
        17307
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3781": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17293,
        17299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3783": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3785": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17293,
        17307
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3786": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17293,
        17307
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3787": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17293,
        17307
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3788": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17293,
        17307
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3789": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17293,
        17307
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3790": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17293,
        17307
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3791": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3792": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17140,
        17270
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3793": {
      "op": "POP"
    },
    "3794": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17283,
        17307
      ],
      "op": "DUP10",
      "path": "0"
    },
    "3795": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17283,
        17307
      ],
      "op": "EQ",
      "path": "0"
    },
    "3796": {
      "branch": 143,
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17283,
        17307
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3797": {
      "op": "POP"
    },
    "3798": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17279,
        17321
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEE2"
    },
    "3801": {
      "branch": 143,
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17279,
        17321
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3802": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17316,
        17321
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 55,
      "value": "0x0"
    },
    "3804": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17309,
        17321
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3805": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17309,
        17321
      ],
      "op": "POP",
      "path": "0"
    },
    "3806": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17309,
        17321
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1118"
    },
    "3809": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17309,
        17321
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3810": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17279,
        17321
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3817": {
      "op": "EXP"
    },
    "3818": {
      "op": "SUB"
    },
    "3819": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17367,
        17385
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3820": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17367,
        17385
      ],
      "op": "DUP13",
      "path": "0"
    },
    "3821": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17367,
        17385
      ],
      "op": "AND",
      "path": "0"
    },
    "3822": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17367,
        17385
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3824": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17367,
        17385
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3825": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17367,
        17385
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3826": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17367,
        17385
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3827": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17367,
        17379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "3829": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17367,
        17385
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3831": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17367,
        17385
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3832": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17367,
        17385
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3834": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17367,
        17385
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3835": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17367,
        17385
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3836": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17367,
        17385
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3837": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17367,
        17385
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3838": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17344,
        17364
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3839": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17344,
        17364
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3840": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17344,
        17364
      ],
      "op": "AND",
      "path": "0"
    },
    "3841": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17344,
        17364
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3842": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17344,
        17364
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3843": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17344,
        17364
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3844": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17344,
        17364
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3845": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17344,
        17364
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3846": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17344,
        17385
      ],
      "op": "OR",
      "path": "0"
    },
    "3847": {
      "offset": [
        9907,
        9911
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3849": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17343,
        17404
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3850": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17343,
        17404
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3851": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17343,
        17404
      ],
      "op": "AND",
      "path": "0"
    },
    "3852": {
      "branch": 144,
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17343,
        17431
      ],
      "op": "EQ",
      "path": "0"
    },
    "3853": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17330,
        17453
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3854": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17330,
        17453
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1A"
    },
    "3857": {
      "branch": 144,
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17330,
        17453
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3858": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17448,
        17453
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 56,
      "value": "0x0"
    },
    "3860": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17441,
        17453
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3861": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17441,
        17453
      ],
      "op": "POP",
      "path": "0"
    },
    "3862": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17441,
        17453
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1118"
    },
    "3865": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17441,
        17453
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3866": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17330,
        17453
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3869": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3873": {
      "op": "EXP"
    },
    "3874": {
      "op": "SUB"
    },
    "3875": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17508,
        17526
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3876": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17508,
        17526
      ],
      "op": "DUP13",
      "path": "0"
    },
    "3877": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17508,
        17526
      ],
      "op": "AND",
      "path": "0"
    },
    "3878": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17508,
        17526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3880": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17508,
        17526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3881": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17508,
        17526
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3882": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17508,
        17526
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3883": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17508,
        17520
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "3885": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17508,
        17526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3887": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17508,
        17526
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3888": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17508,
        17526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3890": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17508,
        17526
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3891": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17508,
        17526
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3892": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17508,
        17526
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3893": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17508,
        17526
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3894": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17485,
        17505
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3895": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17485,
        17505
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3896": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17485,
        17505
      ],
      "op": "AND",
      "path": "0"
    },
    "3897": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17485,
        17505
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3898": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17485,
        17505
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3899": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17485,
        17505
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3900": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17485,
        17505
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3901": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17485,
        17505
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3902": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17485,
        17526
      ],
      "op": "OR",
      "path": "0"
    },
    "3903": {
      "offset": [
        10019,
        10023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3905": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17484,
        17543
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3906": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17484,
        17543
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3907": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17484,
        17543
      ],
      "op": "AND",
      "path": "0"
    },
    "3908": {
      "branch": 145,
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17484,
        17560
      ],
      "op": "EQ",
      "path": "0"
    },
    "3909": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17484,
        17608
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF56"
    },
    "3912": {
      "branch": 145,
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17484,
        17608
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3913": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17587,
        17608
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF51"
    },
    "3916": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17601,
        17607
      ],
      "op": "DUP11",
      "path": "0"
    },
    "3917": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17587,
        17599
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB02"
    },
    "3920": {
      "fn": "MockEursToken.delegatedTransfer",
      "jump": "i",
      "offset": [
        17587,
        17608
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3921": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17587,
        17608
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3922": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17484,
        17608
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF59"
    },
    "3925": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17484,
        17608
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3926": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17484,
        17608
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3927": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17573,
        17574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3929": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17484,
        17608
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3936": {
      "op": "EXP"
    },
    "3937": {
      "op": "SUB"
    },
    "3938": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17635,
        17651
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3939": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17635,
        17651
      ],
      "op": "AND",
      "path": "0"
    },
    "3940": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17635,
        17643
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3942": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17635,
        17651
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3943": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17635,
        17651
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3944": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17635,
        17651
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3945": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17635,
        17651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3947": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17635,
        17651
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3948": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17635,
        17651
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3949": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17635,
        17651
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3950": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17635,
        17651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3952": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17635,
        17651
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3953": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17635,
        17651
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3954": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17635,
        17651
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3955": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17462,
        17608
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3956": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17462,
        17608
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3957": {
      "op": "POP"
    },
    "3958": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17635,
        17651
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3959": {
      "op": "POP"
    },
    "3960": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17663,
        17679
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3961": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17663,
        17679
      ],
      "op": "DUP11",
      "path": "0"
    },
    "3962": {
      "branch": 146,
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17663,
        17679
      ],
      "op": "GT",
      "path": "0"
    },
    "3963": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17659,
        17693
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3964": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17659,
        17693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF88"
    },
    "3967": {
      "branch": 146,
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17659,
        17693
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3968": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17688,
        17693
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 57,
      "value": "0x0"
    },
    "3970": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17681,
        17693
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3971": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17681,
        17693
      ],
      "op": "POP",
      "path": "0"
    },
    "3972": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17681,
        17693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1118"
    },
    "3975": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17681,
        17693
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3976": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17659,
        17693
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3977": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17711,
        17736
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 58,
      "value": "0xF92"
    },
    "3980": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17720,
        17727
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3981": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17729,
        17735
      ],
      "op": "DUP12",
      "path": "0"
    },
    "3982": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17711,
        17718
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12FB"
    },
    "3985": {
      "fn": "MockEursToken.delegatedTransfer",
      "jump": "i",
      "offset": [
        17711,
        17736
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3986": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17711,
        17736
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3987": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17701,
        17736
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3988": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17701,
        17736
      ],
      "op": "POP",
      "path": "0"
    },
    "3989": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17754,
        17761
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3990": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17748,
        17751
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3991": {
      "branch": 147,
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17748,
        17761
      ],
      "op": "GT",
      "path": "0"
    },
    "3992": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17744,
        17775
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3993": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17744,
        17775
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFA5"
    },
    "3996": {
      "branch": 147,
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17744,
        17775
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3997": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17770,
        17775
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 59,
      "value": "0x0"
    },
    "3999": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17763,
        17775
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4000": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17763,
        17775
      ],
      "op": "POP",
      "path": "0"
    },
    "4001": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17763,
        17775
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1118"
    },
    "4004": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17763,
        17775
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4005": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17744,
        17775
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4006": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17793,
        17815
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 60,
      "value": "0xFAF"
    },
    "4009": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17802,
        17809
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4010": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17811,
        17814
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4011": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17793,
        17800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12FB"
    },
    "4014": {
      "fn": "MockEursToken.delegatedTransfer",
      "jump": "i",
      "offset": [
        17793,
        17815
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4015": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17793,
        17815
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4016": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17783,
        17815
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4017": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17783,
        17815
      ],
      "op": "POP",
      "path": "0"
    },
    "4018": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17834,
        17841
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4019": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17827,
        17831
      ],
      "op": "DUP10",
      "path": "0"
    },
    "4020": {
      "branch": 148,
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17827,
        17841
      ],
      "op": "GT",
      "path": "0"
    },
    "4021": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17823,
        17855
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4022": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17823,
        17855
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC2"
    },
    "4025": {
      "branch": 148,
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17823,
        17855
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4026": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17850,
        17855
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 61,
      "value": "0x0"
    },
    "4028": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17843,
        17855
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4029": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17843,
        17855
      ],
      "op": "POP",
      "path": "0"
    },
    "4030": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17843,
        17855
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1118"
    },
    "4033": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17843,
        17855
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4034": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17823,
        17855
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4035": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17873,
        17896
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 62,
      "value": "0xFCC"
    },
    "4038": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17882,
        17889
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4039": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17891,
        17895
      ],
      "op": "DUP11",
      "path": "0"
    },
    "4040": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17873,
        17880
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12FB"
    },
    "4043": {
      "fn": "MockEursToken.delegatedTransfer",
      "jump": "i",
      "offset": [
        17873,
        17896
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4044": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17873,
        17896
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4051": {
      "op": "EXP"
    },
    "4052": {
      "op": "SUB"
    },
    "4053": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17905,
        17919
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 63
    },
    "4054": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17905,
        17919
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4055": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17905,
        17919
      ],
      "op": "AND",
      "path": "0"
    },
    "4056": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17905,
        17919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4058": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17905,
        17919
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4059": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17905,
        17919
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4060": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17905,
        17919
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4061": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17905,
        17911
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4063": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17905,
        17919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4065": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17905,
        17919
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4066": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17905,
        17919
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4067": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17905,
        17919
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4068": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17905,
        17919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4070": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17905,
        17919
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4071": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17905,
        17919
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4072": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17905,
        17919
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4073": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17931,
        17932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4075": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17922,
        17932
      ],
      "op": "DUP15",
      "path": "0"
    },
    "4076": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17922,
        17932
      ],
      "op": "ADD",
      "path": "0"
    },
    "4077": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17905,
        17932
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4078": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17905,
        17932
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4079": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17941,
        17957
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 64
    },
    "4080": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17941,
        17957
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4081": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17941,
        17957
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4082": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17941,
        17957
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4083": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17941,
        17957
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4084": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17941,
        17957
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4085": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17941,
        17957
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4086": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17941,
        17967
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4087": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17941,
        17967
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4088": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17941,
        17967
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4089": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18001,
        18015
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 65
    },
    "4090": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18001,
        18015
      ],
      "op": "DUP15",
      "path": "0"
    },
    "4091": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18001,
        18015
      ],
      "op": "AND",
      "path": "0"
    },
    "4092": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18001,
        18015
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4093": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18001,
        18015
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4094": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18001,
        18015
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4095": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18001,
        18015
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4096": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17863,
        17896
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4097": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17863,
        17896
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4098": {
      "op": "POP"
    },
    "4099": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17992,
        18024
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100C"
    },
    "4102": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17992,
        18024
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4103": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18017,
        18023
      ],
      "op": "DUP12",
      "path": "0"
    },
    "4104": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17992,
        17999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1533"
    },
    "4107": {
      "fn": "MockEursToken.delegatedTransfer",
      "jump": "i",
      "offset": [
        17992,
        18024
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4108": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17992,
        18024
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4111": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4115": {
      "op": "EXP"
    },
    "4116": {
      "op": "SUB"
    },
    "4117": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17975,
        17989
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4118": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17975,
        17989
      ],
      "op": "DUP14",
      "path": "0"
    },
    "4119": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17975,
        17989
      ],
      "op": "AND",
      "path": "0"
    },
    "4120": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17975,
        17983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4122": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17975,
        17989
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4123": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17975,
        17989
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4124": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17975,
        17989
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4125": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17975,
        17989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4127": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17975,
        17989
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4128": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17975,
        17989
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4129": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17975,
        17989
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4130": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17975,
        17989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4132": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17975,
        17989
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4133": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17975,
        17989
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4134": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17975,
        17989
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4135": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17975,
        18024
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4136": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17975,
        18024
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4137": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17975,
        18024
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4138": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17975,
        18024
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4139": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18077,
        18089
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 66,
      "value": "0x3"
    },
    "4141": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18077,
        18089
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4142": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18077,
        18089
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4143": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18077,
        18089
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4144": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18077,
        18089
      ],
      "op": "AND",
      "path": "0"
    },
    "4145": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18067,
        18090
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4146": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18067,
        18090
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4147": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18067,
        18090
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4148": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18067,
        18090
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4149": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18058,
        18096
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103E"
    },
    "4152": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18058,
        18096
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4153": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18092,
        18095
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4154": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18058,
        18065
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1533"
    },
    "4157": {
      "fn": "MockEursToken.delegatedTransfer",
      "jump": "i",
      "offset": [
        18058,
        18096
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4158": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18058,
        18096
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4159": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18042,
        18054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4161": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18042,
        18054
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4168": {
      "op": "EXP"
    },
    "4169": {
      "op": "SUB"
    },
    "4170": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18042,
        18054
      ],
      "op": "AND",
      "path": "0"
    },
    "4171": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18032,
        18040
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4173": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18032,
        18055
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4174": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18032,
        18055
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4175": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18032,
        18055
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4176": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18032,
        18055
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4178": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18032,
        18055
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4179": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18032,
        18055
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4180": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18032,
        18055
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4181": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18032,
        18055
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4183": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18032,
        18055
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4184": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18032,
        18055
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4185": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18032,
        18055
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4186": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18032,
        18096
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4187": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18032,
        18096
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4188": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18032,
        18096
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4189": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18032,
        18096
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4190": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18147,
        18157
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 67
    },
    "4191": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18137,
        18158
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4192": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18137,
        18158
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4193": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18137,
        18158
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4194": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18137,
        18158
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4195": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18128,
        18165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x106C"
    },
    "4198": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18128,
        18165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4199": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18160,
        18164
      ],
      "op": "DUP11",
      "path": "0"
    },
    "4200": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18128,
        18135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1533"
    },
    "4203": {
      "fn": "MockEursToken.delegatedTransfer",
      "jump": "i",
      "offset": [
        18128,
        18165
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4204": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18128,
        18165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4205": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18114,
        18124
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4206": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18104,
        18112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4208": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18104,
        18125
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4209": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18104,
        18125
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4210": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18104,
        18125
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4211": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18104,
        18125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4213": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18104,
        18125
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4214": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18104,
        18125
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4215": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18104,
        18125
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4216": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18104,
        18125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4218": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18104,
        18125
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4219": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18104,
        18125
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4220": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18104,
        18125
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4221": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18104,
        18125
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4222": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18104,
        18165
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4223": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18104,
        18165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4224": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18104,
        18165
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4225": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18104,
        18165
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4226": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 68
    },
    "4227": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4228": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "DUP13",
      "path": "0"
    },
    "4229": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4230": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4231": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4232": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4237": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4239": {
      "op": "EXP"
    },
    "4240": {
      "op": "SUB"
    },
    "4241": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "DUP15",
      "path": "0"
    },
    "4242": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4243": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "AND",
      "path": "0"
    },
    "4244": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4245": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4246": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4247": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "AND",
      "path": "0"
    },
    "4248": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4251": {
      "op": "DUP1"
    },
    "4252": {
      "op": "MLOAD"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4255": {
      "op": "PUSH2",
      "value": "0x1671"
    },
    "4258": {
      "op": "DUP4"
    },
    "4259": {
      "op": "CODECOPY"
    },
    "4260": {
      "op": "DUP2"
    },
    "4261": {
      "op": "MLOAD"
    },
    "4262": {
      "op": "SWAP2"
    },
    "4263": {
      "op": "MSTORE"
    },
    "4264": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4265": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4266": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4267": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4268": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "SUB",
      "path": "0"
    },
    "4269": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4270": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4271": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "ADD",
      "path": "0"
    },
    "4272": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4273": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18174,
        18203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "4274": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18228,
        18240
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 69,
      "value": "0x3"
    },
    "4276": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18228,
        18240
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4277": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18211,
        18246
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4279": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18211,
        18246
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4280": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18211,
        18246
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4281": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18211,
        18246
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4282": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18211,
        18246
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4283": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18211,
        18246
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4284": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18211,
        18246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4285": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18211,
        18246
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4290": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4292": {
      "op": "EXP"
    },
    "4293": {
      "op": "SUB"
    },
    "4294": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18228,
        18240
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4295": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18228,
        18240
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4296": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18228,
        18240
      ],
      "op": "AND",
      "path": "0"
    },
    "4297": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18228,
        18240
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4298": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18211,
        18246
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4299": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18211,
        18246
      ],
      "op": "AND",
      "path": "0"
    },
    "4300": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18211,
        18246
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4303": {
      "op": "DUP1"
    },
    "4304": {
      "op": "MLOAD"
    },
    "4305": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4307": {
      "op": "PUSH2",
      "value": "0x1671"
    },
    "4310": {
      "op": "DUP4"
    },
    "4311": {
      "op": "CODECOPY"
    },
    "4312": {
      "op": "DUP2"
    },
    "4313": {
      "op": "MLOAD"
    },
    "4314": {
      "op": "SWAP2"
    },
    "4315": {
      "op": "MSTORE"
    },
    "4316": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18211,
        18246
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4317": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18211,
        18246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4318": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18211,
        18246
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4319": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18211,
        18246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4320": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18211,
        18246
      ],
      "op": "SUB",
      "path": "0"
    },
    "4321": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18211,
        18246
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4323": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18211,
        18246
      ],
      "op": "ADD",
      "path": "0"
    },
    "4324": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18211,
        18246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4325": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18211,
        18246
      ],
      "op": "LOG3",
      "path": "0"
    },
    "4326": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18254,
        18288
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 70,
      "value": "0x40"
    },
    "4328": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18254,
        18288
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4329": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18254,
        18288
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4330": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18254,
        18288
      ],
      "op": "DUP11",
      "path": "0"
    },
    "4331": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18254,
        18288
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4332": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18254,
        18288
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4333": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18254,
        18288
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4334": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18254,
        18288
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4335": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18271,
        18281
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4336": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18271,
        18281
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4341": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4343": {
      "op": "EXP"
    },
    "4344": {
      "op": "SUB"
    },
    "4345": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18254,
        18288
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4346": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18254,
        18288
      ],
      "op": "AND",
      "path": "0"
    },
    "4347": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18254,
        18288
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4350": {
      "op": "DUP1"
    },
    "4351": {
      "op": "MLOAD"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4354": {
      "op": "PUSH2",
      "value": "0x1671"
    },
    "4357": {
      "op": "DUP4"
    },
    "4358": {
      "op": "CODECOPY"
    },
    "4359": {
      "op": "DUP2"
    },
    "4360": {
      "op": "MLOAD"
    },
    "4361": {
      "op": "SWAP2"
    },
    "4362": {
      "op": "MSTORE"
    },
    "4363": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18254,
        18288
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4364": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18254,
        18288
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4365": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18254,
        18288
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4366": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18254,
        18288
      ],
      "op": "SUB",
      "path": "0"
    },
    "4367": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18254,
        18288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4369": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18254,
        18288
      ],
      "op": "ADD",
      "path": "0"
    },
    "4370": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18254,
        18288
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4371": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18254,
        18288
      ],
      "op": "LOG3",
      "path": "0"
    },
    "4372": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18304,
        18308
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 71,
      "value": "0x1"
    },
    "4374": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18297,
        18308
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4375": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        18297,
        18308
      ],
      "op": "POP",
      "path": "0"
    },
    "4376": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        17081,
        18315
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4377": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "POP",
      "path": "0"
    },
    "4378": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "POP",
      "path": "0"
    },
    "4379": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "POP",
      "path": "0"
    },
    "4380": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "4381": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "4382": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "POP",
      "path": "0"
    },
    "4383": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "POP",
      "path": "0"
    },
    "4384": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "POP",
      "path": "0"
    },
    "4385": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "POP",
      "path": "0"
    },
    "4386": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "POP",
      "path": "0"
    },
    "4387": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "POP",
      "path": "0"
    },
    "4388": {
      "fn": "MockEursToken.delegatedTransfer",
      "offset": [
        16901,
        18319
      ],
      "op": "POP",
      "path": "0"
    },
    "4389": {
      "fn": "MockEursToken.delegatedTransfer",
      "jump": "o",
      "offset": [
        16901,
        18319
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4390": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23288,
        23473
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4391": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23365,
        23370
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 72,
      "value": "0x2"
    },
    "4393": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23365,
        23370
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4400": {
      "op": "EXP"
    },
    "4401": {
      "op": "SUB"
    },
    "4402": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23365,
        23370
      ],
      "op": "AND",
      "path": "0"
    },
    "4403": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23351,
        23361
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4404": {
      "branch": 149,
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23351,
        23370
      ],
      "op": "EQ",
      "path": "0"
    },
    "4405": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23342,
        23371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x113D"
    },
    "4408": {
      "branch": 149,
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23342,
        23371
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4409": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23342,
        23371
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4411": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23342,
        23371
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4412": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23342,
        23371
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4413": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23342,
        23371
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4414": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23382,
        23390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "4416": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23382,
        23390
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4419": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4421": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4423": {
      "op": "EXP"
    },
    "4424": {
      "op": "SUB"
    },
    "4425": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23382,
        23403
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4426": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23382,
        23403
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4427": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23382,
        23403
      ],
      "op": "AND",
      "path": "0"
    },
    "4428": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23382,
        23390
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4429": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23382,
        23390
      ],
      "op": "AND",
      "path": "0"
    },
    "4430": {
      "branch": 150,
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23382,
        23403
      ],
      "op": "EQ",
      "path": "0"
    },
    "4431": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23378,
        23469
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC2F"
    },
    "4434": {
      "branch": 150,
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23378,
        23469
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4435": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23413,
        23421
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 73,
      "value": "0xC"
    },
    "4437": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23413,
        23433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4438": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23413,
        23433
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4439": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4460": {
      "op": "NOT"
    },
    "4461": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23413,
        23433
      ],
      "op": "AND",
      "path": "0"
    },
    "4462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4468": {
      "op": "EXP"
    },
    "4469": {
      "op": "SUB"
    },
    "4470": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23413,
        23433
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4471": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23413,
        23433
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4472": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23413,
        23433
      ],
      "op": "AND",
      "path": "0"
    },
    "4473": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23413,
        23433
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4474": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23413,
        23433
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4475": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23413,
        23433
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4476": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23413,
        23433
      ],
      "op": "OR",
      "path": "0"
    },
    "4477": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23413,
        23433
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4478": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23413,
        23433
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4479": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23413,
        23433
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4480": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23413,
        23433
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4481": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23441,
        23462
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 74,
      "value": "0x40"
    },
    "4483": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23441,
        23462
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4484": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23441,
        23462
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4485": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23453,
        23461
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4486": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23453,
        23461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4487": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23453,
        23461
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4488": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23453,
        23461
      ],
      "op": "AND",
      "path": "0"
    },
    "4489": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23441,
        23462
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4490": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23441,
        23462
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4491": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23441,
        23462
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4492": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23441,
        23462
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x600005B3559A025151F4A40F36D9939D94CF5194016895D4EF6362B211E4C3B5"
    },
    "4525": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23441,
        23462
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4526": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23441,
        23462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4528": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23441,
        23462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4529": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23441,
        23462
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4530": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23441,
        23462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4531": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23441,
        23462
      ],
      "op": "SUB",
      "path": "0"
    },
    "4532": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23441,
        23462
      ],
      "op": "ADD",
      "path": "0"
    },
    "4533": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23441,
        23462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4534": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23441,
        23462
      ],
      "op": "LOG1",
      "path": "0"
    },
    "4535": {
      "fn": "MockEursToken.setDelegate",
      "offset": [
        23288,
        23473
      ],
      "op": "POP",
      "path": "0"
    },
    "4536": {
      "fn": "MockEursToken.setDelegate",
      "jump": "o",
      "offset": [
        23288,
        23473
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4537": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        20952,
        21517
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4538": {
      "offset": [
        10059,
        10067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "4540": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        10059,
        10067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4545": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4547": {
      "op": "EXP"
    },
    "4548": {
      "op": "SUB"
    },
    "4549": {
      "offset": [
        10059,
        10067
      ],
      "op": "AND",
      "path": "0"
    },
    "4550": {
      "offset": [
        10059,
        10082
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4551": {
      "offset": [
        10055,
        11396
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4552": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "4555": {
      "offset": [
        10055,
        11396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4556": {
      "offset": [
        10101,
        10110
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "4557": {
      "offset": [
        10101,
        10115
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4558": {
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11D6"
    },
    "4561": {
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4562": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4564": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        10092,
        10116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4565": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        10092,
        10116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4566": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4567": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21152,
        21157
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 75,
      "value": "0x2"
    },
    "4569": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21152,
        21157
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4574": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4576": {
      "op": "EXP"
    },
    "4577": {
      "op": "SUB"
    },
    "4578": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21152,
        21157
      ],
      "op": "AND",
      "path": "0"
    },
    "4579": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21138,
        21148
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4580": {
      "branch": 151,
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21138,
        21157
      ],
      "op": "EQ",
      "path": "0"
    },
    "4581": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21129,
        21158
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11ED"
    },
    "4584": {
      "branch": 151,
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21129,
        21158
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4585": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21129,
        21158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4587": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21129,
        21158
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4588": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21129,
        21158
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4589": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21129,
        21158
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4590": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21174,
        21208
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 76
    },
    "4591": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21174,
        21208
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4592": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21174,
        21208
      ],
      "op": "GT",
      "path": "0"
    },
    "4593": {
      "branch": 152,
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21174,
        21208
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4594": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21165,
        21209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11FA"
    },
    "4597": {
      "branch": 152,
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21165,
        21209
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4598": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21165,
        21209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4600": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21165,
        21209
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4601": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21165,
        21209
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4602": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21165,
        21209
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4603": {
      "offset": [
        9279,
        9285
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x186A0"
    },
    "4607": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21224,
        21266
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 77
    },
    "4608": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21224,
        21266
      ],
      "op": "GT",
      "path": "0"
    },
    "4609": {
      "branch": 153,
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21224,
        21266
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4610": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21215,
        21267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120A"
    },
    "4613": {
      "branch": 153,
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21215,
        21267
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4614": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21215,
        21267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4616": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21215,
        21267
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4617": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21215,
        21267
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4618": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21215,
        21267
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4619": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21274,
        21282
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 78,
      "value": "0x7"
    },
    "4621": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21274,
        21294
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4622": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21274,
        21294
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4623": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21274,
        21294
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4624": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21300,
        21314
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 79,
      "value": "0x8"
    },
    "4626": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21300,
        21332
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4627": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21300,
        21332
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4628": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21300,
        21332
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4629": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21338,
        21352
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 80,
      "value": "0x9"
    },
    "4631": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21338,
        21370
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4632": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21338,
        21370
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4633": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21338,
        21370
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4634": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21376,
        21396
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 81,
      "value": "0xA"
    },
    "4636": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21376,
        21420
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4637": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21376,
        21420
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4638": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21376,
        21420
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4639": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 82,
      "value": "0x40"
    },
    "4641": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4642": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4643": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4644": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4645": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4646": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4648": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4649": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "ADD",
      "path": "0"
    },
    "4650": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4651": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4652": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4653": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4654": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4655": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "ADD",
      "path": "0"
    },
    "4656": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4657": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4658": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4659": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "4661": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4662": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "ADD",
      "path": "0"
    },
    "4663": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4664": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4665": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4666": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4667": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4668": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x650BF5314BB5924368FFEBAF7DFFCFAA4A0F99C2AB08264C26BF0547F8C459E9"
    },
    "4701": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4702": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4703": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4704": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "SUB",
      "path": "0"
    },
    "4705": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "4707": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "ADD",
      "path": "0"
    },
    "4708": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4709": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        21427,
        21512
      ],
      "op": "LOG1",
      "path": "0"
    },
    "4710": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        20952,
        21517
      ],
      "op": "POP",
      "path": "0"
    },
    "4711": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        20952,
        21517
      ],
      "op": "POP",
      "path": "0"
    },
    "4712": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        20952,
        21517
      ],
      "op": "POP",
      "path": "0"
    },
    "4713": {
      "fn": "MockEursToken.setFeeParameters",
      "offset": [
        20952,
        21517
      ],
      "op": "POP",
      "path": "0"
    },
    "4714": {
      "fn": "MockEursToken.setFeeParameters",
      "jump": "o",
      "offset": [
        20952,
        21517
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4715": {
      "fn": "MockEursToken.allowance",
      "offset": [
        16255,
        16423
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4716": {
      "offset": [
        10059,
        10067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "4718": {
      "fn": "MockEursToken.allowance",
      "offset": [
        10059,
        10067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4719": {
      "fn": "MockEursToken.allowance",
      "offset": [
        16344,
        16361
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4721": {
      "fn": "MockEursToken.allowance",
      "offset": [
        16344,
        16361
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4724": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4726": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4728": {
      "op": "EXP"
    },
    "4729": {
      "op": "SUB"
    },
    "4730": {
      "offset": [
        10059,
        10067
      ],
      "op": "AND",
      "path": "0"
    },
    "4731": {
      "offset": [
        10059,
        10082
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4732": {
      "offset": [
        10055,
        11396
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4733": {
      "fn": "MockEursToken.allowance",
      "offset": [
        10055,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "4736": {
      "offset": [
        10055,
        11396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4737": {
      "offset": [
        10101,
        10110
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "4738": {
      "offset": [
        10101,
        10115
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4739": {
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x128B"
    },
    "4742": {
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4743": {
      "fn": "MockEursToken.allowance",
      "offset": [
        10092,
        10116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4745": {
      "fn": "MockEursToken.allowance",
      "offset": [
        10092,
        10116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4746": {
      "fn": "MockEursToken.allowance",
      "offset": [
        10092,
        10116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4747": {
      "fn": "MockEursToken.allowance",
      "offset": [
        10092,
        10116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4748": {
      "fn": "MockEursToken.allowance",
      "offset": [
        16376,
        16418
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 83,
      "value": "0x59F"
    },
    "4751": {
      "fn": "MockEursToken.allowance",
      "offset": [
        16401,
        16407
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4752": {
      "fn": "MockEursToken.allowance",
      "offset": [
        16409,
        16417
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4753": {
      "fn": "MockEursToken.allowance",
      "offset": [
        16376,
        16399
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1645"
    },
    "4756": {
      "fn": "MockEursToken.allowance",
      "jump": "i",
      "offset": [
        16376,
        16418
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4757": {
      "fn": "AbstractToken.approve",
      "offset": [
        7828,
        8036
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4758": {
      "fn": "AbstractToken.approve",
      "offset": [
        7938,
        7948
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 84
    },
    "4759": {
      "fn": "AbstractToken.approve",
      "offset": [
        7906,
        7918
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4761": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7949
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4762": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7949
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4763": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7949
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4764": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7936
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4766": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4768": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7949
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4769": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7949
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4770": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7949
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4771": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4773": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7949
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4774": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7949
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4775": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7949
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4778": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4780": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4782": {
      "op": "EXP"
    },
    "4783": {
      "op": "SUB"
    },
    "4784": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7959
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4785": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7959
      ],
      "op": "AND",
      "path": "0"
    },
    "4786": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7959
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4787": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7959
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4788": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7959
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4789": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7959
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4790": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7959
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4791": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7959
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4792": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7959
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4793": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7959
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4794": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7959
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4795": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7968
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4796": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7968
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4797": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7968
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4798": {
      "fn": "AbstractToken.approve",
      "offset": [
        7974,
        8013
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 85
    },
    "4799": {
      "fn": "AbstractToken.approve",
      "offset": [
        7974,
        8013
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4800": {
      "fn": "AbstractToken.approve",
      "offset": [
        7974,
        8013
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4801": {
      "fn": "AbstractToken.approve",
      "offset": [
        7974,
        8013
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4802": {
      "fn": "AbstractToken.approve",
      "offset": [
        7974,
        8013
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4803": {
      "fn": "AbstractToken.approve",
      "offset": [
        7974,
        8013
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4804": {
      "fn": "AbstractToken.approve",
      "offset": [
        7974,
        8013
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4805": {
      "fn": "AbstractToken.approve",
      "offset": [
        7906,
        7918
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4806": {
      "fn": "AbstractToken.approve",
      "offset": [
        7906,
        7918
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "4807": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7959
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4808": {
      "fn": "AbstractToken.approve",
      "offset": [
        7926,
        7959
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4809": {
      "fn": "AbstractToken.approve",
      "offset": [
        7938,
        7948
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4810": {
      "fn": "AbstractToken.approve",
      "offset": [
        7938,
        7948
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4811": {
      "fn": "AbstractToken.approve",
      "offset": [
        7974,
        8013
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "4844": {
      "fn": "AbstractToken.approve",
      "offset": [
        7974,
        8013
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4845": {
      "fn": "AbstractToken.approve",
      "offset": [
        7974,
        8013
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4846": {
      "fn": "AbstractToken.approve",
      "offset": [
        7974,
        8013
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4847": {
      "fn": "AbstractToken.approve",
      "offset": [
        7974,
        8013
      ],
      "op": "SUB",
      "path": "0"
    },
    "4848": {
      "fn": "AbstractToken.approve",
      "offset": [
        7974,
        8013
      ],
      "op": "ADD",
      "path": "0"
    },
    "4849": {
      "fn": "AbstractToken.approve",
      "offset": [
        7974,
        8013
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4850": {
      "fn": "AbstractToken.approve",
      "offset": [
        7974,
        8013
      ],
      "op": "LOG3",
      "path": "0"
    },
    "4851": {
      "op": "POP"
    },
    "4852": {
      "fn": "AbstractToken.approve",
      "offset": [
        8027,
        8031
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 86,
      "value": "0x1"
    },
    "4854": {
      "fn": "AbstractToken.approve",
      "offset": [
        7828,
        8036
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4855": {
      "fn": "AbstractToken.approve",
      "offset": [
        7828,
        8036
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4856": {
      "fn": "AbstractToken.approve",
      "offset": [
        7828,
        8036
      ],
      "op": "POP",
      "path": "0"
    },
    "4857": {
      "fn": "AbstractToken.approve",
      "offset": [
        7828,
        8036
      ],
      "op": "POP",
      "path": "0"
    },
    "4858": {
      "fn": "AbstractToken.approve",
      "jump": "o",
      "offset": [
        7828,
        8036
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4859": {
      "fn": "SafeMath.safeSub",
      "offset": [
        1009,
        1131
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4860": {
      "fn": "SafeMath.safeSub",
      "offset": [
        1076,
        1085
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4862": {
      "fn": "SafeMath.safeSub",
      "offset": [
        1101,
        1107
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 87
    },
    "4863": {
      "fn": "SafeMath.safeSub",
      "offset": [
        1101,
        1107
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4864": {
      "fn": "SafeMath.safeSub",
      "offset": [
        1101,
        1107
      ],
      "op": "LT",
      "path": "0"
    },
    "4865": {
      "fn": "SafeMath.safeSub",
      "offset": [
        1101,
        1107
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4866": {
      "fn": "SafeMath.safeSub",
      "offset": [
        1093,
        1108
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1307"
    },
    "4869": {
      "fn": "SafeMath.safeSub",
      "offset": [
        1093,
        1108
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4870": {
      "fn": "SafeMath.safeSub",
      "offset": [
        1093,
        1108
      ],
      "op": "INVALID",
      "path": "0"
    },
    "4871": {
      "fn": "SafeMath.safeSub",
      "offset": [
        1093,
        1108
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4872": {
      "op": "POP"
    },
    "4873": {
      "fn": "SafeMath.safeSub",
      "offset": [
        1121,
        1126
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 88
    },
    "4874": {
      "fn": "SafeMath.safeSub",
      "offset": [
        1121,
        1126
      ],
      "op": "SUB",
      "path": "0"
    },
    "4875": {
      "fn": "SafeMath.safeSub",
      "offset": [
        1121,
        1126
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4876": {
      "fn": "SafeMath.safeSub",
      "jump": "o",
      "offset": [
        1009,
        1131
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4877": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6852,
        7488
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4882": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4884": {
      "op": "EXP"
    },
    "4885": {
      "op": "SUB"
    },
    "4886": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6992,
        7010
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4887": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6992,
        7010
      ],
      "op": "AND",
      "path": "0"
    },
    "4888": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6945,
        6957
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4890": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6992,
        7010
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4891": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6992,
        7010
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4892": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6992,
        7010
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4893": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6992,
        7002
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4895": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6992,
        7010
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4897": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6992,
        7010
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4898": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6992,
        7010
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4899": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6992,
        7010
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4900": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6992,
        7010
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4902": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6992,
        7010
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4903": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6992,
        7010
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4904": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6992,
        7010
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4905": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7011,
        7021
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4906": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6992,
        7022
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4907": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6992,
        7022
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4908": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6992,
        7022
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4909": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6992,
        7022
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4910": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6992,
        7022
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4911": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6992,
        7022
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4912": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6992,
        7022
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4913": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6992,
        7022
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4914": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6945,
        6957
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4915": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7036,
        7062
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 89
    },
    "4916": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7036,
        7062
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4917": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7036,
        7062
      ],
      "op": "LT",
      "path": "0"
    },
    "4918": {
      "branch": 154,
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7036,
        7062
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4919": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A1"
    },
    "4922": {
      "branch": 154,
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4923": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4925": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4926": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4927": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C379A000000000000000000000000000000000000000000000000000000000"
    },
    "4960": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4961": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4962": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4964": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4966": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4967": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "ADD",
      "path": "0"
    },
    "4968": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4969": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "4971": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "4973": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4974": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "ADD",
      "path": "0"
    },
    "4975": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4976": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x6E6F7420656E6F75676820616C6C6F77616E6365000000000000000000000000"
    },
    "5009": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "5011": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5012": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "ADD",
      "path": "0"
    },
    "5013": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5014": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5015": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5016": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5017": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5018": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5019": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "SUB",
      "path": "0"
    },
    "5020": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "5022": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "ADD",
      "path": "0"
    },
    "5023": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5024": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5025": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7028,
        7087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5026": {
      "op": "POP"
    },
    "5027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5031": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5033": {
      "op": "EXP"
    },
    "5034": {
      "op": "SUB"
    },
    "5035": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7115,
        7131
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5036": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7115,
        7131
      ],
      "op": "AND",
      "path": "0"
    },
    "5037": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7115,
        7123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5039": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7115,
        7131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5040": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7115,
        7131
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5041": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7115,
        7131
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5042": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7115,
        7131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5044": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7115,
        7131
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5045": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7115,
        7131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5046": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7115,
        7131
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5047": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7115,
        7131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5049": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7115,
        7131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5050": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7115,
        7131
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5051": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7115,
        7131
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5052": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7145,
        7166
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 90
    },
    "5053": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7145,
        7166
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5054": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7145,
        7166
      ],
      "op": "LT",
      "path": "0"
    },
    "5055": {
      "branch": 155,
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7145,
        7166
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5056": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x142A"
    },
    "5059": {
      "branch": 155,
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5060": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5062": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5063": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5064": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C379A000000000000000000000000000000000000000000000000000000000"
    },
    "5097": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5098": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5099": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5101": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5103": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5104": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "ADD",
      "path": "0"
    },
    "5105": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5106": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "5108": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "5110": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5111": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "ADD",
      "path": "0"
    },
    "5112": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5113": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x6E6F7420656E6F7567682062616C616E63650000000000000000000000000000"
    },
    "5146": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "5148": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5149": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "ADD",
      "path": "0"
    },
    "5150": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5151": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5152": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5153": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5154": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5155": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5156": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "SUB",
      "path": "0"
    },
    "5157": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "5159": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "ADD",
      "path": "0"
    },
    "5160": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5161": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5162": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7137,
        7189
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5163": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7239,
        7273
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 91,
      "value": "0x1434"
    },
    "5166": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5167": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7266,
        7272
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5168": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7239,
        7246
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12FB"
    },
    "5171": {
      "fn": "AbstractToken.transferFrom",
      "jump": "i",
      "offset": [
        7239,
        7273
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5172": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7239,
        7273
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5179": {
      "op": "EXP"
    },
    "5180": {
      "op": "SUB"
    },
    "5181": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7218
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5182": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7218
      ],
      "op": "AND",
      "path": "0"
    },
    "5183": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5185": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5186": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7218
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5187": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7218
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5188": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5190": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5192": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5193": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7218
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5194": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7218
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5195": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5197": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7218
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5198": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7218
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5199": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7218
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5200": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7219,
        7229
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5201": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7230
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5202": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7230
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5203": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7230
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5204": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7230
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5205": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7230
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5206": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7230
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5207": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7230
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5208": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7273
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5209": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7273
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5210": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7273
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5211": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7200,
        7273
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5212": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7284,
        7294
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5213": {
      "branch": 156,
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7284,
        7294
      ],
      "op": "GT",
      "path": "0"
    },
    "5214": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7284,
        7310
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5215": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7284,
        7310
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5216": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7284,
        7310
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x147B"
    },
    "5219": {
      "branch": 156,
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7284,
        7310
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5220": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7284,
        7310
      ],
      "op": "POP",
      "path": "0"
    },
    "5221": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7307,
        7310
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5226": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5228": {
      "op": "EXP"
    },
    "5229": {
      "op": "SUB"
    },
    "5230": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7298,
        7310
      ],
      "op": "AND",
      "path": "0"
    },
    "5231": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7298,
        7303
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5236": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5238": {
      "op": "EXP"
    },
    "5239": {
      "op": "SUB"
    },
    "5240": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7298,
        7310
      ],
      "op": "AND",
      "path": "0"
    },
    "5241": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7298,
        7310
      ],
      "op": "EQ",
      "path": "0"
    },
    "5242": {
      "branch": 157,
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7298,
        7310
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5243": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7284,
        7310
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5244": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7280,
        7432
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5245": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7280,
        7432
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D3"
    },
    "5248": {
      "branch": 157,
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7280,
        7432
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5249": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7339,
        7368
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 92,
      "value": "0x148A"
    },
    "5252": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7348,
        7359
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5253": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7361,
        7367
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5254": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7339,
        7346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12FB"
    },
    "5257": {
      "fn": "AbstractToken.transferFrom",
      "jump": "i",
      "offset": [
        7339,
        7368
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5258": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7339,
        7368
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5263": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5265": {
      "op": "EXP"
    },
    "5266": {
      "op": "SUB"
    },
    "5267": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7320,
        7336
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5268": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7320,
        7336
      ],
      "op": "DUP9",
      "path": "0"
    },
    "5269": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7320,
        7336
      ],
      "op": "AND",
      "path": "0"
    },
    "5270": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7320,
        7328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5272": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7320,
        7336
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5273": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7320,
        7336
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5274": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7320,
        7336
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5275": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7320,
        7336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5277": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7320,
        7336
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5278": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7320,
        7336
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5279": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7320,
        7336
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5280": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7320,
        7336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5282": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7320,
        7336
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5283": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7320,
        7336
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5284": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7320,
        7336
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5285": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7320,
        7368
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5286": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7320,
        7368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5287": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7320,
        7368
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5288": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7320,
        7368
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5289": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7402,
        7416
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 93
    },
    "5290": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7402,
        7416
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5291": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7402,
        7416
      ],
      "op": "AND",
      "path": "0"
    },
    "5292": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7402,
        7416
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5293": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7402,
        7416
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5294": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7402,
        7416
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5295": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7402,
        7416
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5296": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7393,
        7425
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14B9"
    },
    "5299": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7393,
        7425
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5300": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7418,
        7424
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5301": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7393,
        7400
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1533"
    },
    "5304": {
      "fn": "AbstractToken.transferFrom",
      "jump": "i",
      "offset": [
        7393,
        7425
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5305": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7393,
        7425
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5310": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5312": {
      "op": "EXP"
    },
    "5313": {
      "op": "SUB"
    },
    "5314": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7376,
        7390
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5315": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7376,
        7390
      ],
      "op": "AND",
      "path": "0"
    },
    "5316": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7376,
        7384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5318": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7376,
        7390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5319": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7376,
        7390
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5320": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7376,
        7390
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5321": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7376,
        7390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5323": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7376,
        7390
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5324": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7376,
        7390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5325": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7376,
        7390
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5326": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7376,
        7390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5328": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7376,
        7390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5329": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7376,
        7390
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5330": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7376,
        7425
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5331": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7280,
        7432
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5332": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7454,
        7457
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 94
    },
    "5333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5335": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5339": {
      "op": "EXP"
    },
    "5340": {
      "op": "SUB"
    },
    "5341": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7437,
        7466
      ],
      "op": "AND",
      "path": "0"
    },
    "5342": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7447,
        7452
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5347": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5349": {
      "op": "EXP"
    },
    "5350": {
      "op": "SUB"
    },
    "5351": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7437,
        7466
      ],
      "op": "AND",
      "path": "0"
    },
    "5352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5354": {
      "op": "DUP1"
    },
    "5355": {
      "op": "MLOAD"
    },
    "5356": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5358": {
      "op": "PUSH2",
      "value": "0x1671"
    },
    "5361": {
      "op": "DUP4"
    },
    "5362": {
      "op": "CODECOPY"
    },
    "5363": {
      "op": "DUP2"
    },
    "5364": {
      "op": "MLOAD"
    },
    "5365": {
      "op": "SWAP2"
    },
    "5366": {
      "op": "MSTORE"
    },
    "5367": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7459,
        7465
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5368": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7437,
        7466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5370": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7437,
        7466
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5371": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7437,
        7466
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5372": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7437,
        7466
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5373": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7437,
        7466
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5374": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7437,
        7466
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5375": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7437,
        7466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5377": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7437,
        7466
      ],
      "op": "ADD",
      "path": "0"
    },
    "5378": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7437,
        7466
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5379": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7437,
        7466
      ],
      "op": "POP",
      "path": "0"
    },
    "5380": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7437,
        7466
      ],
      "op": "POP",
      "path": "0"
    },
    "5381": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7437,
        7466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5383": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7437,
        7466
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5384": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7437,
        7466
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5385": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7437,
        7466
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5386": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7437,
        7466
      ],
      "op": "SUB",
      "path": "0"
    },
    "5387": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7437,
        7466
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5388": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7437,
        7466
      ],
      "op": "LOG3",
      "path": "0"
    },
    "5389": {
      "op": "POP"
    },
    "5390": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7479,
        7483
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 95,
      "value": "0x1"
    },
    "5392": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        7479,
        7483
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "5393": {
      "fn": "AbstractToken.transferFrom",
      "offset": [
        6852,
        7488
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "5394": {
      "op": "POP"
    },
    "5395": {
      "op": "POP"
    },
    "5396": {
      "op": "POP"
    },
    "5397": {
      "op": "POP"
    },
    "5398": {
      "op": "POP"
    },
    "5399": {
      "fn": "AbstractToken.transferFrom",
      "jump": "o",
      "offset": [
        6852,
        7488
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5400": {
      "fn": "AbstractToken.balanceOf",
      "offset": [
        5635,
        5744
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5405": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5407": {
      "op": "EXP"
    },
    "5408": {
      "op": "SUB"
    },
    "5409": {
      "fn": "AbstractToken.balanceOf",
      "offset": [
        5722,
        5739
      ],
      "op": "AND",
      "path": "0",
      "statement": 96
    },
    "5410": {
      "fn": "AbstractToken.balanceOf",
      "offset": [
        5692,
        5707
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5412": {
      "fn": "AbstractToken.balanceOf",
      "offset": [
        5722,
        5739
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5413": {
      "fn": "AbstractToken.balanceOf",
      "offset": [
        5722,
        5739
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5414": {
      "fn": "AbstractToken.balanceOf",
      "offset": [
        5722,
        5739
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5415": {
      "fn": "AbstractToken.balanceOf",
      "offset": [
        5722,
        5739
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5417": {
      "fn": "AbstractToken.balanceOf",
      "offset": [
        5722,
        5739
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5418": {
      "fn": "AbstractToken.balanceOf",
      "offset": [
        5722,
        5739
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5419": {
      "fn": "AbstractToken.balanceOf",
      "offset": [
        5722,
        5739
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5420": {
      "fn": "AbstractToken.balanceOf",
      "offset": [
        5722,
        5739
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5422": {
      "fn": "AbstractToken.balanceOf",
      "offset": [
        5722,
        5739
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5423": {
      "fn": "AbstractToken.balanceOf",
      "offset": [
        5722,
        5739
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5424": {
      "fn": "AbstractToken.balanceOf",
      "offset": [
        5722,
        5739
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5425": {
      "fn": "AbstractToken.balanceOf",
      "offset": [
        5722,
        5739
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5426": {
      "fn": "AbstractToken.balanceOf",
      "jump": "o",
      "offset": [
        5635,
        5744
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5427": {
      "fn": "SafeMath.safeAdd",
      "offset": [
        690,
        826
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5428": {
      "fn": "SafeMath.safeAdd",
      "offset": [
        757,
        766
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5432": {
      "op": "NOT"
    },
    "5433": {
      "fn": "SafeMath.safeAdd",
      "offset": [
        787,
        802
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 97
    },
    "5434": {
      "fn": "SafeMath.safeAdd",
      "offset": [
        787,
        802
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5435": {
      "fn": "SafeMath.safeAdd",
      "offset": [
        787,
        802
      ],
      "op": "SUB",
      "path": "0"
    },
    "5436": {
      "fn": "SafeMath.safeAdd",
      "offset": [
        782,
        802
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5437": {
      "fn": "SafeMath.safeAdd",
      "offset": [
        782,
        802
      ],
      "op": "GT",
      "path": "0"
    },
    "5438": {
      "fn": "SafeMath.safeAdd",
      "offset": [
        782,
        802
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5439": {
      "fn": "SafeMath.safeAdd",
      "offset": [
        774,
        803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1544"
    },
    "5442": {
      "fn": "SafeMath.safeAdd",
      "offset": [
        774,
        803
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5443": {
      "fn": "SafeMath.safeAdd",
      "offset": [
        774,
        803
      ],
      "op": "INVALID",
      "path": "0"
    },
    "5444": {
      "fn": "SafeMath.safeAdd",
      "offset": [
        774,
        803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5445": {
      "op": "POP"
    },
    "5446": {
      "fn": "SafeMath.safeAdd",
      "offset": [
        816,
        821
      ],
      "op": "ADD",
      "path": "0",
      "statement": 98
    },
    "5447": {
      "fn": "SafeMath.safeAdd",
      "offset": [
        816,
        821
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5448": {
      "fn": "SafeMath.safeAdd",
      "jump": "o",
      "offset": [
        690,
        826
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5449": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1309,
        1516
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5450": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1376,
        1385
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5452": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1397,
        1403
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5453": {
      "branch": 158,
      "fn": "SafeMath.safeMul",
      "offset": [
        1397,
        1403
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5454": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1393,
        1413
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5455": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1393,
        1413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x155A"
    },
    "5458": {
      "branch": 158,
      "fn": "SafeMath.safeMul",
      "offset": [
        1393,
        1413
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5459": {
      "op": "POP"
    },
    "5460": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1412,
        1413
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 99,
      "value": "0x0"
    },
    "5462": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1405,
        1413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A2"
    },
    "5465": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1405,
        1413
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5466": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1393,
        1413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5467": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1491,
        1492
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 100
    },
    "5468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5470": {
      "op": "NOT"
    },
    "5471": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1477,
        1492
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5472": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1477,
        1492
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5473": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1477,
        1492
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5474": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1477,
        1492
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1567"
    },
    "5477": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1477,
        1492
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5478": {
      "dev": "Division by zero",
      "fn": "SafeMath.safeMul",
      "offset": [
        1477,
        1492
      ],
      "op": "INVALID",
      "path": "0"
    },
    "5479": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1477,
        1492
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5480": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1477,
        1492
      ],
      "op": "DIV",
      "path": "0"
    },
    "5481": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1472,
        1492
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5482": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1472,
        1492
      ],
      "op": "GT",
      "path": "0"
    },
    "5483": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1472,
        1492
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5484": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1464,
        1493
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1571"
    },
    "5487": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1464,
        1493
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5488": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1464,
        1493
      ],
      "op": "INVALID",
      "path": "0"
    },
    "5489": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1464,
        1493
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5490": {
      "op": "POP"
    },
    "5491": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1506,
        1511
      ],
      "op": "MUL",
      "path": "0",
      "statement": 101
    },
    "5492": {
      "fn": "SafeMath.safeMul",
      "offset": [
        1506,
        1511
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5493": {
      "fn": "SafeMath.safeMul",
      "jump": "o",
      "offset": [
        1309,
        1516
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5494": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6054,
        6464
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5495": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6180,
        6190
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5496": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6128,
        6140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5498": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6170,
        6191
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5499": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6170,
        6191
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5500": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6170,
        6191
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5501": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6170,
        6191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5503": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6170,
        6191
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5504": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6170,
        6191
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5505": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6170,
        6191
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5506": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6170,
        6191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5508": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6170,
        6191
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5509": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6170,
        6191
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5510": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6170,
        6191
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5511": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6201,
        6221
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5512": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6201,
        6221
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5513": {
      "branch": 159,
      "fn": "AbstractToken.transfer",
      "offset": [
        6201,
        6221
      ],
      "op": "LT",
      "path": "0"
    },
    "5514": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6197,
        6235
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5515": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6197,
        6235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1597"
    },
    "5518": {
      "branch": 159,
      "fn": "AbstractToken.transfer",
      "offset": [
        6197,
        6235
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5519": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6230,
        6235
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 102,
      "value": "0x0"
    },
    "5521": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6223,
        6235
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5522": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6223,
        6235
      ],
      "op": "POP",
      "path": "0"
    },
    "5523": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6223,
        6235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD5D"
    },
    "5526": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6223,
        6235
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5527": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6197,
        6235
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5528": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6254,
        6255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5530": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6245,
        6251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5531": {
      "branch": 160,
      "fn": "AbstractToken.transfer",
      "offset": [
        6245,
        6255
      ],
      "op": "GT",
      "path": "0"
    },
    "5532": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6245,
        6276
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5533": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6245,
        6276
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5534": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6245,
        6276
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15B0"
    },
    "5537": {
      "branch": 160,
      "fn": "AbstractToken.transfer",
      "offset": [
        6245,
        6276
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5538": {
      "op": "POP"
    },
    "5539": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6259,
        6269
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5544": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5546": {
      "op": "EXP"
    },
    "5547": {
      "op": "SUB"
    },
    "5548": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6259,
        6276
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5549": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6259,
        6276
      ],
      "op": "AND",
      "path": "0"
    },
    "5550": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6259,
        6276
      ],
      "op": "EQ",
      "path": "0"
    },
    "5551": {
      "branch": 161,
      "fn": "AbstractToken.transfer",
      "offset": [
        6259,
        6276
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5552": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6245,
        6276
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5553": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6241,
        6403
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5554": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6241,
        6403
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1605"
    },
    "5557": {
      "branch": 161,
      "fn": "AbstractToken.transfer",
      "offset": [
        6241,
        6403
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5558": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6310,
        6339
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 103,
      "value": "0x15BF"
    },
    "5561": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6319,
        6330
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5562": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6332,
        6338
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5563": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6310,
        6317
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12FB"
    },
    "5566": {
      "fn": "AbstractToken.transfer",
      "jump": "i",
      "offset": [
        6310,
        6339
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5567": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6310,
        6339
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5568": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6296,
        6306
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5569": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6286,
        6294
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5571": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6286,
        6307
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5572": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6286,
        6307
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5573": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6286,
        6307
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5574": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6286,
        6307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5576": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6286,
        6307
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5577": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6286,
        6307
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5578": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6286,
        6307
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5579": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6286,
        6307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5581": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6286,
        6307
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5582": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6286,
        6307
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5583": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6286,
        6307
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5584": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6286,
        6339
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5585": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6286,
        6339
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5586": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6286,
        6339
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5587": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6286,
        6339
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5590": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5592": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5594": {
      "op": "EXP"
    },
    "5595": {
      "op": "SUB"
    },
    "5596": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6373,
        6387
      ],
      "op": "DUP7",
      "path": "0",
      "statement": 104
    },
    "5597": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6373,
        6387
      ],
      "op": "AND",
      "path": "0"
    },
    "5598": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6373,
        6387
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5599": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6373,
        6387
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5600": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6373,
        6387
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5601": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6373,
        6387
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5602": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6364,
        6396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15EB"
    },
    "5605": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6364,
        6396
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5606": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6389,
        6395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5607": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6364,
        6371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1533"
    },
    "5610": {
      "fn": "AbstractToken.transfer",
      "jump": "i",
      "offset": [
        6364,
        6396
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5611": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6364,
        6396
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5616": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5618": {
      "op": "EXP"
    },
    "5619": {
      "op": "SUB"
    },
    "5620": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6347,
        6361
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5621": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6347,
        6361
      ],
      "op": "AND",
      "path": "0"
    },
    "5622": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6347,
        6355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5624": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6347,
        6361
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5625": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6347,
        6361
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5626": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6347,
        6361
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5627": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6347,
        6361
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5629": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6347,
        6361
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5630": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6347,
        6361
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5631": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6347,
        6361
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5632": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6347,
        6361
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5634": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6347,
        6361
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5635": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6347,
        6361
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5636": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6347,
        6396
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5637": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6241,
        6403
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5638": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6408,
        6442
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 105,
      "value": "0x40"
    },
    "5640": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6408,
        6442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5641": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6408,
        6442
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5642": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6408,
        6442
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5643": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6408,
        6442
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5644": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6408,
        6442
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5645": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6408,
        6442
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5646": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6408,
        6442
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5651": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5653": {
      "op": "EXP"
    },
    "5654": {
      "op": "SUB"
    },
    "5655": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6408,
        6442
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5656": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6408,
        6442
      ],
      "op": "AND",
      "path": "0"
    },
    "5657": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6408,
        6442
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5658": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6418,
        6428
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5659": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6418,
        6428
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5662": {
      "op": "DUP1"
    },
    "5663": {
      "op": "MLOAD"
    },
    "5664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5666": {
      "op": "PUSH2",
      "value": "0x1671"
    },
    "5669": {
      "op": "DUP4"
    },
    "5670": {
      "op": "CODECOPY"
    },
    "5671": {
      "op": "DUP2"
    },
    "5672": {
      "op": "MLOAD"
    },
    "5673": {
      "op": "SWAP2"
    },
    "5674": {
      "op": "MSTORE"
    },
    "5675": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6408,
        6442
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5676": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6408,
        6442
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5677": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6408,
        6442
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5678": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6408,
        6442
      ],
      "op": "SUB",
      "path": "0"
    },
    "5679": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6408,
        6442
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5681": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6408,
        6442
      ],
      "op": "ADD",
      "path": "0"
    },
    "5682": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6408,
        6442
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5683": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6408,
        6442
      ],
      "op": "LOG3",
      "path": "0"
    },
    "5684": {
      "op": "POP"
    },
    "5685": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6455,
        6459
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 106,
      "value": "0x1"
    },
    "5687": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6455,
        6459
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5688": {
      "fn": "AbstractToken.transfer",
      "offset": [
        6054,
        6464
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5689": {
      "op": "POP"
    },
    "5690": {
      "op": "POP"
    },
    "5691": {
      "op": "POP"
    },
    "5692": {
      "fn": "AbstractToken.transfer",
      "jump": "o",
      "offset": [
        6054,
        6464
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5693": {
      "fn": "MockEursToken.thisAddress",
      "offset": [
        23579,
        23657
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5694": {
      "fn": "MockEursToken.thisAddress",
      "offset": [
        23648,
        23652
      ],
      "op": "ADDRESS",
      "path": "0",
      "statement": 107
    },
    "5695": {
      "fn": "MockEursToken.thisAddress",
      "offset": [
        23579,
        23657
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5696": {
      "fn": "MockEursToken.thisAddress",
      "jump": "o",
      "offset": [
        23579,
        23657
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5697": {
      "fn": "MockEursToken.messageSenderAddress",
      "offset": [
        23758,
        23851
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5698": {
      "fn": "MockEursToken.messageSenderAddress",
      "offset": [
        23836,
        23846
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 108
    },
    "5699": {
      "fn": "MockEursToken.messageSenderAddress",
      "offset": [
        23758,
        23851
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5700": {
      "fn": "MockEursToken.messageSenderAddress",
      "jump": "o",
      "offset": [
        23758,
        23851
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5701": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8474,
        8617
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5706": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5708": {
      "op": "EXP"
    },
    "5709": {
      "op": "SUB"
    },
    "5710": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8602
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 109
    },
    "5711": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8602
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5712": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8602
      ],
      "op": "AND",
      "path": "0"
    },
    "5713": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8551,
        8568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5715": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8602
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5716": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8602
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5717": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8602
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5718": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8593
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5720": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8602
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5722": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8602
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5723": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8602
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5724": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8602
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5725": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8602
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5727": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8602
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5728": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8602
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5729": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8602
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5730": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8612
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5731": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8612
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5732": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8612
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "5733": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8612
      ],
      "op": "AND",
      "path": "0"
    },
    "5734": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8612
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5735": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8612
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5736": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8612
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5737": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8612
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5738": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8612
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5739": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8612
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5740": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8612
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5741": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8612
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5742": {
      "fn": "AbstractToken.allowance",
      "offset": [
        8583,
        8612
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5743": {
      "fn": "AbstractToken.allowance",
      "jump": "o",
      "offset": [
        8474,
        8617
      ],
      "op": "JUMP",
      "path": "0"
    }
  },
  "sha1": "08266ceed37990cee37edd07b1738893a4037075",
  "source": "/**\n *Submitted for verification at Etherscan.io on 2018-07-03\n*/\n\n/**\n * EURS Token Smart Contract: EIP-20 compatible token smart contract that\n * manages EURS tokens.\n */\n\n/*\n * Safe Math Smart Contract.\n * Copyright (c) 2018 by STSS (Malta) Limited.\n * Contact: <tech@stasis.net>\n */\npragma solidity ^0.4.20;\n\n/**\n * Provides methods to safely add, subtract and multiply uint256 numbers.\n */\ncontract SafeMath {\n  uint256 constant private MAX_UINT256 =\n    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\n\n  /**\n   * Add two uint256 values, throw in case of overflow.\n   *\n   * @param x first value to add\n   * @param y second value to add\n   * @return x + y\n   */\n  function safeAdd (uint256 x, uint256 y)\n  pure internal\n  returns (uint256 z) {\n    assert (x <= MAX_UINT256 - y);\n    return x + y;\n  }\n\n  /**\n   * Subtract one uint256 value from another, throw in case of underflow.\n   *\n   * @param x value to subtract from\n   * @param y value to subtract\n   * @return x - y\n   */\n  function safeSub (uint256 x, uint256 y)\n  pure internal\n  returns (uint256 z) {\n    assert (x >= y);\n    return x - y;\n  }\n\n  /**\n   * Multiply two uint256 values, throw in case of overflow.\n   *\n   * @param x first value to multiply\n   * @param y second value to multiply\n   * @return x * y\n   */\n  function safeMul (uint256 x, uint256 y)\n  pure internal\n  returns (uint256 z) {\n    if (y == 0) return 0; // Prevent division by zero at the next line\n    assert (x <= MAX_UINT256 / y);\n    return x * y;\n  }\n}\n/*\n * EIP-20 Standard Token Smart Contract Interface.\n * Copyright (c) 2018 by STSS (Malta) Limited.\n * Contact: <tech@stasis.net>\n\n * ERC-20 standard token interface, as defined\n * <a href=\"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\">here</a>.\n */\ncontract Token {\n  /**\n   * Get total number of tokens in circulation.\n   *\n   * @return total number of tokens in circulation\n   */\n  function totalSupply () public view returns (uint256 supply);\n\n  /**\n   * Get number of tokens currently belonging to given owner.\n   *\n   * @param _owner address to get number of tokens currently belonging to the\n   *        owner of\n   * @return number of tokens currently belonging to the owner of given address\n   */\n  function balanceOf (address _owner) public view returns (uint256 balance);\n\n  /**\n   * Transfer given number of tokens from message sender to given recipient.\n   *\n   * @param _to address to transfer tokens to the owner of\n   * @param _value number of tokens to transfer to the owner of given address\n   * @return true if tokens were transferred successfully, false otherwise\n   */\n  function transfer (address _to, uint256 _value)\n  public payable returns (bool success);\n\n  /**\n   * Transfer given number of tokens from given owner to given recipient.\n   *\n   * @param _from address to transfer tokens from the owner of\n   * @param _to address to transfer tokens to the owner of\n   * @param _value number of tokens to transfer from given owner to given\n   *        recipient\n   * @return true if tokens were transferred successfully, false otherwise\n   */\n  function transferFrom (address _from, address _to, uint256 _value)\n  public payable returns (bool success);\n\n  /**\n   * Allow given spender to transfer given number of tokens from message sender.\n   *\n   * @param _spender address to allow the owner of to transfer tokens from\n   *        message sender\n   * @param _value number of tokens to allow to transfer\n   * @return true if token transfer was successfully approved, false otherwise\n   */\n  function approve (address _spender, uint256 _value)\n  public payable returns (bool success);\n\n  /**\n   * Tell how many tokens given spender is currently allowed to transfer from\n   * given owner.\n   *\n   * @param _owner address to get number of tokens allowed to be transferred\n   *        from the owner of\n   * @param _spender address to get number of tokens allowed to be transferred\n   *        by the owner of\n   * @return number of tokens given spender is currently allowed to transfer\n   *         from given owner\n   */\n  function allowance (address _owner, address _spender)\n  public view returns (uint256 remaining);\n\n  /**\n   * Logged when tokens were transferred from one owner to another.\n   *\n   * @param _from address of the owner, tokens were transferred from\n   * @param _to address of the owner, tokens were transferred to\n   * @param _value number of tokens transferred\n   */\n  event Transfer (address indexed _from, address indexed _to, uint256 _value);\n\n  /**\n   * Logged when owner approved his tokens to be transferred by some spender.\n   *\n   * @param _owner owner who approved his tokens to be transferred\n   * @param _spender spender who were allowed to transfer the tokens belonging\n   *        to the owner\n   * @param _value number of tokens belonging to the owner, approved to be\n   *        transferred by the spender\n   */\n  event Approval (\n    address indexed _owner, address indexed _spender, uint256 _value);\n}\n/*\n * Abstract Token Smart Contract.\n * Copyright (c) 2018 by STSS (Malta) Limited.\n * Contact: <tech@stasis.net>\n\n * Abstract Token Smart Contract that could be used as a base contract for\n * ERC-20 token contracts.\n */\ncontract AbstractToken is Token, SafeMath {\n  /**\n   * Create new Abstract Token contract.\n   */\n  function AbstractToken () public {\n    // Do nothing\n  }\n\n  /**\n   * Get number of tokens currently belonging to given owner.\n   *\n   * @param _owner address to get number of tokens currently belonging to the\n   *        owner of\n   * @return number of tokens currently belonging to the owner of given address\n   */\n  function balanceOf (address _owner) public view returns (uint256 balance) {\n    return accounts [_owner];\n  }\n\n  /**\n   * Transfer given number of tokens from message sender to given recipient.\n   *\n   * @param _to address to transfer tokens to the owner of\n   * @param _value number of tokens to transfer to the owner of given address\n   * @return true if tokens were transferred successfully, false otherwise\n   */\n  function transfer (address _to, uint256 _value)\n  public payable returns (bool success) {\n    uint256 fromBalance = accounts [msg.sender];\n    if (fromBalance < _value) return false;\n    if (_value > 0 && msg.sender != _to) {\n      accounts [msg.sender] = safeSub (fromBalance, _value);\n      accounts [_to] = safeAdd (accounts [_to], _value);\n    }\n    Transfer (msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n   * Transfer given number of tokens from given owner to given recipient.\n   *\n   * @param _from address to transfer tokens from the owner of\n   * @param _to address to transfer tokens to the owner of\n   * @param _value number of tokens to transfer from given owner to given\n   *        recipient\n   * @return true if tokens were transferred successfully, false otherwise\n   */\n  function transferFrom (address _from, address _to, uint256 _value)\n  public payable returns (bool success) {\n    uint256 spenderAllowance = allowances [_from][msg.sender];\n    require(spenderAllowance >= _value, \"not enough allowance\");\n    uint256 fromBalance = accounts [_from];\n    require(fromBalance >= _value, \"not enough balance\");\n    \n    allowances [_from][msg.sender] =\n      safeSub (spenderAllowance, _value);\n\n    if (_value > 0 && _from != _to) {\n      accounts [_from] = safeSub (fromBalance, _value);\n      accounts [_to] = safeAdd (accounts [_to], _value);\n    }\n    Transfer (_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * Allow given spender to transfer given number of tokens from message sender.\n   *\n   * @param _spender address to allow the owner of to transfer tokens from\n   *        message sender\n   * @param _value number of tokens to allow to transfer\n   * @return true if token transfer was successfully approved, false otherwise\n   */\n  function approve (address _spender, uint256 _value)\n  public payable returns (bool success) {\n    allowances [msg.sender][_spender] = _value;\n    Approval (msg.sender, _spender, _value);\n\n    return true;\n  }\n\n  /**\n   * Tell how many tokens given spender is currently allowed to transfer from\n   * given owner.\n   *\n   * @param _owner address to get number of tokens allowed to be transferred\n   *        from the owner of\n   * @param _spender address to get number of tokens allowed to be transferred\n   *        by the owner of\n   * @return number of tokens given spender is currently allowed to transfer\n   *         from given owner\n   */\n  function allowance (address _owner, address _spender)\n  public view returns (uint256 remaining) {\n    return allowances [_owner][_spender];\n  }\n\n  /**\n   * Mapping from addresses of token holders to the numbers of tokens belonging\n   * to these token holders.\n   */\n  mapping (address => uint256) internal accounts;\n\n  /**\n   * Mapping from addresses of token holders to the mapping of addresses of\n   * spenders to the allowances set by these token holders to these spenders.\n   */\n  mapping (address => mapping (address => uint256)) internal allowances;\n}\n\n/*\n * EURS Token Smart Contract.\n * Copyright (c) 2018 by STSS (Malta) Limited.\n * Contact: <tech@stasis.net>\n */\n\ncontract MockEursToken is AbstractToken {\n  /**\n   * Fee denominator (0.001%).\n   */\n  uint256 constant internal FEE_DENOMINATOR = 100000;\n\n  /**\n   * Maximum fee numerator (100%).\n   */\n  uint256 constant internal MAX_FEE_NUMERATOR = FEE_DENOMINATOR;\n\n  /**\n   * Minimum fee numerator (0%).\n   */\n  uint256 constant internal MIN_FEE_NUMERATIOR = 0;\n\n  /**\n   * Maximum allowed number of tokens in circulation.\n   */\n  uint256 constant internal MAX_TOKENS_COUNT =\n    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff /\n    MAX_FEE_NUMERATOR;\n\n  /**\n   * Default transfer fee.\n   */\n  uint256 constant internal DEFAULT_FEE = 5e2;\n\n  /**\n   * Address flag that marks black listed addresses.\n   */\n  uint256 constant internal BLACK_LIST_FLAG = 0x01;\n\n  /**\n   * Address flag that marks zero fee addresses.\n   */\n  uint256 constant internal ZERO_FEE_FLAG = 0x02;\n\n  modifier delegatable {\n    if (delegate == address (0)) {\n      require (msg.value == 0); // Non payable if not delegated\n      _;\n    } else {\n      assembly {\n        // Save owner\n        let oldOwner := sload (owner_slot)\n\n        // Save delegate\n        let oldDelegate := sload (delegate_slot)\n\n        // Solidity stores address of the beginning of free memory at 0x40\n        let buffer := mload (0x40)\n\n        // Copy message call data into buffer\n        calldatacopy (buffer, 0, calldatasize)\n\n        // Lets call our delegate\n        let result := delegatecall (gas, oldDelegate, buffer, calldatasize, buffer, 0)\n\n        // Check, whether owner was changed\n        switch eq (oldOwner, sload (owner_slot))\n        case 1 {} // Owner was not changed, fine\n        default {revert (0, 0) } // Owner was changed, revert!\n\n        // Check, whether delegate was changed\n        switch eq (oldDelegate, sload (delegate_slot))\n        case 1 {} // Delegate was not changed, fine\n        default {revert (0, 0) } // Delegate was changed, revert!\n\n        // Copy returned value into buffer\n        returndatacopy (buffer, 0, returndatasize)\n\n        // Check call status\n        switch result\n        case 0 { revert (buffer, returndatasize) } // Call failed, revert!\n        default { return (buffer, returndatasize) } // Call succeeded, return\n      }\n    }\n  }\n\n  /**\n   * Create EURS Token smart contract with message sender as an owner.\n   *\n   * @param _feeCollector address fees are sent to\n   */\n  function MockEursToken (address _feeCollector) public {\n    fixedFee = DEFAULT_FEE;\n    minVariableFee = 0;\n    maxVariableFee = 0;\n    variableFeeNumerator = 0;\n\n    owner = msg.sender;\n    feeCollector = _feeCollector;\n  }\n\n  /**\n   * Delegate unrecognized functions.\n   */\n  function () public delegatable payable {\n    revert (); // Revert if not delegated\n  }\n\n  /**\n   * Get name of the token.\n   *\n   * @return name of the token\n   */\n  function name () public delegatable view returns (string) {\n    return \"STASIS EURS Token\";\n  }\n\n  /**\n   * Get symbol of the token.\n   *\n   * @return symbol of the token\n   */\n  function symbol () public delegatable view returns (string) {\n    return \"EURS\";\n  }\n\n  /**\n   * Get number of decimals for the token.\n   *\n   * @return number of decimals for the token\n   */\n  function decimals () public delegatable view returns (uint8) {\n    return 2;\n  }\n\n  /**\n   * Get total number of tokens in circulation.\n   *\n   * @return total number of tokens in circulation\n   */\n  function totalSupply () public delegatable view returns (uint256) {\n    return tokensCount;\n  }\n\n  /**\n   * Get number of tokens currently belonging to given owner.\n   *\n   * @param _owner address to get number of tokens currently belonging to the\n   *        owner of\n   * @return number of tokens currently belonging to the owner of given address\n   */\n  function balanceOf (address _owner)\n    public delegatable view returns (uint256 balance) {\n    return AbstractToken.balanceOf (_owner);\n  }\n\n  /**\n   * Transfer given number of tokens from message sender to given recipient.\n   *\n   * @param _to address to transfer tokens to the owner of\n   * @param _value number of tokens to transfer to the owner of given address\n   * @return true if tokens were transferred successfully, false otherwise\n   */\n  function transfer (address _to, uint256 _value)\n  public delegatable payable returns (bool) {\n    if (frozen) return false;\n    else if (\n      (addressFlags [msg.sender] | addressFlags [_to]) & BLACK_LIST_FLAG ==\n      BLACK_LIST_FLAG)\n      return false;\n    else {\n      uint256 fee =\n        (addressFlags [msg.sender] | addressFlags [_to]) & ZERO_FEE_FLAG == ZERO_FEE_FLAG ?\n          0 :\n          calculateFee (_value);\n\n      if (_value <= accounts [msg.sender] &&\n          fee <= safeSub (accounts [msg.sender], _value)) {\n        require (AbstractToken.transfer (_to, _value));\n        require (AbstractToken.transfer (feeCollector, fee));\n        return true;\n      } else return false;\n    }\n  }\n\n  /**\n   * Transfer given number of tokens from given owner to given recipient.\n   *\n   * @param _from address to transfer tokens from the owner of\n   * @param _to address to transfer tokens to the owner of\n   * @param _value number of tokens to transfer from given owner to given\n   *        recipient\n   * @return true if tokens were transferred successfully, false otherwise\n   */\n  function transferFrom (address _from, address _to, uint256 _value)\n  public delegatable payable returns (bool) {\n    if (frozen) return false;\n    else if (\n      (addressFlags [_from] | addressFlags [_to]) & BLACK_LIST_FLAG ==\n      BLACK_LIST_FLAG)\n      return false;\n    else {\n      uint256 fee =\n        (addressFlags [_from] | addressFlags [_to]) & ZERO_FEE_FLAG == ZERO_FEE_FLAG ?\n          0 :\n          calculateFee (_value);\n\n      if (_value <= allowances [_from][msg.sender] &&\n          fee <= safeSub (allowances [_from][msg.sender], _value) &&\n          _value <= accounts [_from] &&\n          fee <= safeSub (accounts [_from], _value)) {\n        require (AbstractToken.transferFrom (_from, _to, _value));\n        require (AbstractToken.transferFrom (_from, feeCollector, fee));\n        return true;\n      } else return false;\n    }\n  }\n\n  /**\n   * Allow given spender to transfer given number of tokens from message sender.\n   *\n   * @param _spender address to allow the owner of to transfer tokens from\n   *        message sender\n   * @param _value number of tokens to allow to transfer\n   * @return true if token transfer was successfully approved, false otherwise\n   */\n  function approve (address _spender, uint256 _value)\n  public delegatable payable returns (bool success) {\n    return AbstractToken.approve (_spender, _value);\n  }\n\n  /**\n   * Tell how many tokens given spender is currently allowed to transfer from\n   * given owner.\n   *\n   * @param _owner address to get number of tokens allowed to be transferred\n   *        from the owner of\n   * @param _spender address to get number of tokens allowed to be transferred\n   *        by the owner of\n   * @return number of tokens given spender is currently allowed to transfer\n   *         from given owner\n   */\n  function allowance (address _owner, address _spender)\n  public delegatable view returns (uint256 remaining) {\n    return AbstractToken.allowance (_owner, _spender);\n  }\n\n  /**\n   * Transfer given number of token from the signed defined by digital signature\n   * to given recipient.\n   *\n   * @param _to address to transfer token to the owner of\n   * @param _value number of tokens to transfer\n   * @param _fee number of tokens to give to message sender\n   * @param _nonce nonce of the transfer\n   * @param _v parameter V of digital signature\n   * @param _r parameter R of digital signature\n   * @param _s parameter S of digital signature\n   */\n  function delegatedTransfer (\n    address _to, uint256 _value, uint256 _fee,\n    uint256 _nonce, uint8 _v, bytes32 _r, bytes32 _s)\n  public delegatable payable returns (bool) {\n    if (frozen) return false;\n    else {\n      address _from = ecrecover (\n        keccak256 (\n          thisAddress (), messageSenderAddress (), _to, _value, _fee, _nonce),\n        _v, _r, _s);\n\n      if (_nonce != nonces [_from]) return false;\n\n      if (\n        (addressFlags [_from] | addressFlags [_to]) & BLACK_LIST_FLAG ==\n        BLACK_LIST_FLAG)\n        return false;\n\n      uint256 fee =\n        (addressFlags [_from] | addressFlags [_to]) & ZERO_FEE_FLAG == ZERO_FEE_FLAG ?\n          0 :\n          calculateFee (_value);\n\n      uint256 balance = accounts [_from];\n      if (_value > balance) return false;\n      balance = safeSub (balance, _value);\n      if (fee > balance) return false;\n      balance = safeSub (balance, fee);\n      if (_fee > balance) return false;\n      balance = safeSub (balance, _fee);\n\n      nonces [_from] = _nonce + 1;\n\n      accounts [_from] = balance;\n      accounts [_to] = safeAdd (accounts [_to], _value);\n      accounts [feeCollector] = safeAdd (accounts [feeCollector], fee);\n      accounts [msg.sender] = safeAdd (accounts [msg.sender], _fee);\n\n      Transfer (_from, _to, _value);\n      Transfer (_from, feeCollector, fee);\n      Transfer (_from, msg.sender, _fee);\n\n      return true;\n    }\n  }\n\n  /**\n   * Create tokens.\n   *\n   * @param _value number of tokens to be created.\n   */\n  function createTokens (uint256 _value)\n  public delegatable payable returns (bool) {\n    require (msg.sender == owner);\n\n    if (_value > 0) {\n      if (_value <= safeSub (MAX_TOKENS_COUNT, tokensCount)) {\n        accounts [msg.sender] = safeAdd (accounts [msg.sender], _value);\n        tokensCount = safeAdd (tokensCount, _value);\n\n        Transfer (address (0), msg.sender, _value);\n\n        return true;\n      } else return false;\n    } else return true;\n  }\n\n  /**\n   * Burn tokens.\n   *\n   * @param _value number of tokens to burn\n   */\n  function burnTokens (uint256 _value)\n  public delegatable payable returns (bool) {\n    require (msg.sender == owner);\n\n    if (_value > 0) {\n      if (_value <= accounts [msg.sender]) {\n        accounts [msg.sender] = safeSub (accounts [msg.sender], _value);\n        tokensCount = safeSub (tokensCount, _value);\n\n        Transfer (msg.sender, address (0), _value);\n\n        return true;\n      } else return false;\n    } else return true;\n  }\n\n  /**\n   * Freeze token transfers.\n   */\n  function freezeTransfers () public delegatable payable {\n    require (msg.sender == owner);\n\n    if (!frozen) {\n      frozen = true;\n\n      Freeze ();\n    }\n  }\n\n  /**\n   * Unfreeze token transfers.\n   */\n  function unfreezeTransfers () public delegatable payable {\n    require (msg.sender == owner);\n\n    if (frozen) {\n      frozen = false;\n\n      Unfreeze ();\n    }\n  }\n\n  /**\n   * Set smart contract owner.\n   *\n   * @param _newOwner address of the new owner\n   */\n  function setOwner (address _newOwner) public {\n    require (msg.sender == owner);\n\n    owner = _newOwner;\n  }\n\n  /**\n   * Set fee collector.\n   *\n   * @param _newFeeCollector address of the new fee collector\n   */\n  function setFeeCollector (address _newFeeCollector)\n  public delegatable payable {\n    require (msg.sender == owner);\n\n    feeCollector = _newFeeCollector;\n  }\n\n  /**\n   * Get current nonce for token holder with given address, i.e. nonce this\n   * token holder should use for next delegated transfer.\n   *\n   * @param _owner address of the token holder to get nonce for\n   * @return current nonce for token holder with give address\n   */\n  function nonce (address _owner) public view delegatable returns (uint256) {\n    return nonces [_owner];\n  }\n\n  /**\n   * Set fee parameters.\n   *\n   * @param _fixedFee fixed fee in token units\n   * @param _minVariableFee minimum variable fee in token units\n   * @param _maxVariableFee maximum variable fee in token units\n   * @param _variableFeeNumerator variable fee numerator\n   */\n  function setFeeParameters (\n    uint256 _fixedFee,\n    uint256 _minVariableFee,\n    uint256 _maxVariableFee,\n    uint256 _variableFeeNumerator) public delegatable payable {\n    require (msg.sender == owner);\n\n    require (_minVariableFee <= _maxVariableFee);\n    require (_variableFeeNumerator <= MAX_FEE_NUMERATOR);\n\n    fixedFee = _fixedFee;\n    minVariableFee = _minVariableFee;\n    maxVariableFee = _maxVariableFee;\n    variableFeeNumerator = _variableFeeNumerator;\n\n    FeeChange (\n      _fixedFee, _minVariableFee, _maxVariableFee, _variableFeeNumerator);\n  }\n\n  /**\n   * Get fee parameters.\n   *\n   * @return fee parameters\n   */\n  function getFeeParameters () public delegatable view returns (\n    uint256 _fixedFee,\n    uint256 _minVariableFee,\n    uint256 _maxVariableFee,\n    uint256 _variableFeeNumnerator) {\n    _fixedFee = fixedFee;\n    _minVariableFee = minVariableFee;\n    _maxVariableFee = maxVariableFee;\n    _variableFeeNumnerator = variableFeeNumerator;\n  }\n\n  /**\n   * Calculate fee for transfer of given number of tokens.\n   *\n   * @param _amount transfer amount to calculate fee for\n   * @return fee for transfer of given amount\n   */\n  function calculateFee (uint256 _amount)\n    public delegatable view returns (uint256 _fee) {\n    require (_amount <= MAX_TOKENS_COUNT);\n\n    _fee = safeMul (_amount, variableFeeNumerator) / FEE_DENOMINATOR;\n    if (_fee < minVariableFee) _fee = minVariableFee;\n    if (_fee > maxVariableFee) _fee = maxVariableFee;\n    _fee = safeAdd (_fee, fixedFee);\n  }\n\n  /**\n   * Set flags for given address.\n   *\n   * @param _address address to set flags for\n   * @param _flags flags to set\n   */\n  function setFlags (address _address, uint256 _flags)\n  public delegatable payable {\n    require (msg.sender == owner);\n\n    addressFlags [_address] = _flags;\n  }\n\n  /**\n   * Get flags for given address.\n   *\n   * @param _address address to get flags for\n   * @return flags for given address\n   */\n  function flags (address _address) public delegatable view returns (uint256) {\n    return addressFlags [_address];\n  }\n\n  /**\n   * Set address of smart contract to delegate execution of delegatable methods\n   * to.\n   *\n   * @param _delegate address of smart contract to delegate execution of\n   * delegatable methods to, or zero to not delegate delegatable methods\n   * execution.\n   */\n  function setDelegate (address _delegate) public {\n    require (msg.sender == owner);\n\n    if (delegate != _delegate) {\n      delegate = _delegate;\n      Delegation (delegate);\n    }\n  }\n\n  /**\n   * Get address of this smart contract.\n   *\n   * @return address of this smart contract\n   */\n  function thisAddress () internal view returns (address) {\n    return this;\n  }\n\n  /**\n   * Get address of message sender.\n   *\n   * @return address of this smart contract\n   */\n  function messageSenderAddress () internal view returns (address) {\n    return msg.sender;\n  }\n\n  /**\n   * Owner of the smart contract.\n   */\n  address internal owner;\n\n  /**\n   * Address where fees are sent to.\n   */\n  address internal feeCollector;\n\n  /**\n   * Number of tokens in circulation.\n   */\n  uint256 internal tokensCount;\n\n  /**\n   * Whether token transfers are currently frozen.\n   */\n  bool internal frozen;\n\n  /**\n   * Mapping from sender's address to the next delegated transfer nonce.\n   */\n  mapping (address => uint256) internal nonces;\n\n  /**\n   * Fixed fee amount in token units.\n   */\n  uint256 internal fixedFee;\n\n  /**\n   * Minimum variable fee in token units.\n   */\n  uint256 internal minVariableFee;\n\n  /**\n   * Maximum variable fee in token units.\n   */\n  uint256 internal maxVariableFee;\n\n  /**\n   * Variable fee numerator.\n   */\n  uint256 internal variableFeeNumerator;\n\n  /**\n   * Maps address to its flags.\n   */\n  mapping (address => uint256) internal addressFlags;\n\n  /**\n   * Address of smart contract to delegate execution of delegatable methods to,\n   * or zero to not delegate delegatable methods execution.\n   */\n  address internal delegate;\n\n  /**\n   * Logged when token transfers were frozen.\n   */\n  event Freeze ();\n\n  /**\n   * Logged when token transfers were unfrozen.\n   */\n  event Unfreeze ();\n\n  /**\n   * Logged when fee parameters were changed.\n   *\n   * @param fixedFee fixed fee in token units\n   * @param minVariableFee minimum variable fee in token units\n   * @param maxVariableFee maximum variable fee in token units\n   * @param variableFeeNumerator variable fee numerator\n   */\n  event FeeChange (\n    uint256 fixedFee,\n    uint256 minVariableFee,\n    uint256 maxVariableFee,\n    uint256 variableFeeNumerator);\n\n  /**\n   * Logged when address of smart contract execution of delegatable methods is\n   * delegated to was changed.\n   *\n   * @param delegate new address of smart contract execution of delegatable\n   * methods is delegated to or zero if execution of delegatable methods is\n   * oot delegated.\n   */\n  event Delegation (address delegate);\n}",
  "sourceMap": "9148:16714:0:-;;;11543:224;8:9:-1;5:2;;;30:1;27;20:12;5:2;11543:224:0;;;;;;;;;;;;;9790:3;11603:8;:22;11648:1;11631:14;:18;;;11655:14;:18;;;11679:20;:24;11710:5;:18;;-1:-1:-1;;;;;;11710:18:0;;;11718:10;11710:18;;;;11734:12;:28;;-1:-1:-1;;;;;11734:28:0;;;;;;;;;;;;;9148:16714;;;;;;",
  "sourcePath": "contracts/mocks/MockEursToken.sol",
  "type": "contract"
]